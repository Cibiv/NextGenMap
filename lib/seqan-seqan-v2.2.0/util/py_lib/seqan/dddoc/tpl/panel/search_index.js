var search_data = {"index":{"searchIndex":["abstractcontroller","actionnotfound","assetpaths","base","callbacks","classmethods","collector","doublerendererror","error","helpers","classmethods","layouts","classmethods","layoutconditions","logger","rendering","classmethods","translation","viewpaths","classmethods","base","caching","actions","actioncachepath","classmethods","configmethods","fragments","pages","classmethods","sweeping","compatibility","classmethods","conditionalget","cookies","dispatcher","flash","head","helpers","classmethods","hideactions","classmethods","httpauthentication","basic","controllermethods","digest","controllermethods","token","controllermethods","implicitrender","instrumentation","classmethods","logsubscriber","metal","middleware","actionmiddleware","classmethods","rackdelegation","railtie","recordidentifier","redirecting","renderers","all","classmethods","rendering","requestforgeryprotection","classmethods","rescue","responder","classmethods","streaming","templateassertions","testcase","behavior","classmethods","raiseactionexceptions","testresponse","testing","classmethods","urlfor","classmethods","urlrewriter","urlwriter","assertions","domassertions","responseassertions","routingassertions","selectorassertions","tagassertions","beststandardssupport","callbacks","cookies","cookieoverflow","flash","flashhash","head","http","cache","request","response","filterparameters","headers","mimenegotiation","parameterfilter","parameters","url","upload","uploadedfile","requesthelpers","runner","session","integrationtest","middlewarestack","middleware","paramsparser","performancetest","railtie","remoteip","ipspoofattackerror","remoteipgetter","request","rescue","response","setup","routing","mapper","base","httphelpers","resources","scoping","shorthand","polymorphicroutes","urlfor","session","abstractstore","optionshash","sessionhash","cookiestore","memcachestore","showexceptions","static","testprocess","testrequest","testresponse","deprecatedhelpers","base","deprecatedheaderproxy","deprecatedurloptions","base","subclasses","context","filesystemresolver","fixtureresolver","activemodelformbuilder","activemodelhelper","activemodelinstancetag","assettaghelper","atomfeedhelper","atombuilder","atomfeedbuilder","cachehelper","capturehelper","csrfhelper","datehelper","debughelper","formbuilder","formhelper","formoptionshelper","formtaghelper","classmethods","javascripthelper","numberhelper","invalidnumbererror","prototypehelper","generatormethods","rawoutputhelper","recordtaghelper","sanitizehelper","scriptaculoushelper","taghelper","texthelper","translationhelper","urlhelper","layouts","logsubscriber","details","viewpaths","nonconcattingstring","nullresolver","outputbuffer","partials","partialrenderer","pathresolver","railtie","rendering","resolver","template","handler","builder","compilable","classmethods","erb","erubis","rjs","testcase","behavior","classmethods","locals","testcontroller","attributemethods","classmethods","attributemethodmatcher","blockvalidator","callbacks","conversion","deprecatederrormethods","dirty","eachvalidator","errors","lint","tests","massassignmentsecurity","blacklist","classmethods","permissionset","sanitizer","whitelist","missingattributeerror","name","naming","observer","observing","classmethods","serialization","serializers","json","xml","translation","validations","acceptancevalidator","callbacks","classmethods","classmethods","confirmationvalidator","exclusionvalidator","formatvalidator","helpermethods","inclusionvalidator","lengthvalidator","numericalityvalidator","presencevalidator","validator","activerecorderror","adapternotfound","adapternotspecified","classmethods","classmethods","associationtypemismatch","classmethods","hasonethroughassociation","throughassociationscope","attributeassignmenterror","beforetypecast","classmethods","dirty","primarykey","classmethods","query","read","classmethods","timezoneconversion","classmethods","write","classmethods","autosaveassociation","classmethods","base","calculations","callbacks","classmethods","configurationerror","abstractadapter","column","format","connectionhandler","connectionmanagement","connectionpool","databaselimits","databasestatements","mysqladapter","postgresqladapter","postgresqlcolumn","querycache","quoting","sqliteadapter","version","schemastatements","table","tabledefinition","connectionnotestablished","connectiontimeouterror","countercache","dangerousattributeerror","dynamicfindermatch","dynamicscopematch","findermethods","invalidforeignkey","irreversiblemigration","locking","optimistic","classmethods","pessimistic","logsubscriber","migration","migrationproxy","multiparameterassignmenterrors","namedscope","classmethods","classmethods","toomanyrecords","observer","persistence","predicatebuilder","preparedstatementinvalid","querycache","classmethods","querymethods","railtie","railties","controllerruntime","classmethods","readonlyrecord","recordinvalid","recordnotfound","recordnotsaved","recordnotunique","classmethods","macroreflection","relation","rollback","schema","serialization","serializationtypemismatch","sessionstore","session","sqlbypass","spawnmethods","staleobjecterror","statementinvalid","testfixtures","classmethods","throwresult","timestamp","transactions","classmethods","unknownattributeerror","validations","associatedvalidator","classmethods","uniquenessvalidator","wrappeddatabaseexception","badrequest","base","clienterror","connection","custommethods","classmethods","instancemethods","errors","forbiddenaccess","formats","jsonformat","xmlformat","httpmock","invalidrequesterror","logsubscriber","observing","railtie","request","resourceconflict","resourcegone","resourcenotfound","response","sslerror","servererror","timeouterror","unauthorizedaccess","validations","autoload","backtracecleaner","base64","benchmarkable","bufferedlogger","severity","cache","compressedmemcachestore","entry","filestore","memcachestore","memorystore","store","strategy","localcache","localstore","synchronizedmemorystore","callbacks","callback","callbackchain","classmethods","concern","configurable","classmethods","reference","watchstack","descendantstracker","duration","fileupdatechecker","gzip","stream","hashwithindifferentaccess","inflector","inflections","inheritableoptions","json","backends","jsongem","yajl","yaml","circularreferenceerror","encoder","variable","logsubscriber","testhelper","mocklogger","memoizable","instancemethods","messageencryptor","invalidmessage","messageverifier","invalidsignature","chars","encodingerror","unicode","codepoint","unicodedatabase","notifications","event","fanout","instrumenter","orderedoptions","railtie","rescuable","classmethods","safebuffer","securerandom","stringinquirer","testcase","testing","assertions","declarative","isolation","forking","minitest","subprocess","testunit","pending","performance","benchmarker","metrics","base","cputime","gcruns","gctime","memory","objects","processtime","time","walltime","performer","profiler","proxytestresult","remoteerror","setupandteardown","classmethods","forclassictestunit","forminitest","timewithzone","timezone","xmlmini","xmlmini_libxmlsax","hashbuilder","xmlmini_nokogirisax","hashbuilder","bigdecimal","commands","info","install","plugin","remove","datetime","erb","util","enumerable","erb","generators","controllergenerator","mailergenerator","scaffoldgenerator","file","fixnum","fixtures","fixturesfilenotfound","float","i18n","exceptionhandler","railtie","integer","kernel","loaderror","simpleformatter","mime","mimes","type","nameerror","object","plugin","process","rails","actionmethods","appbuilder","application","bootstrap","configurable","classmethods","configuration","finisher","railties","backtracecleaner","configuration","deprecated","console","dbconsole","deprecatedconstant","engine","configurable","classmethods","configuration","generators","actions","activemodel","appgenerator","base","controllergenerator","error","generatedattribute","generatorgenerator","helpergenerator","integrationtestgenerator","migration","classmethods","migrationgenerator","modelgenerator","namedbase","observergenerator","performancetestgenerator","plugingenerator","resourcegenerator","resourcehelpers","scaffoldcontrollergenerator","scaffoldgenerator","sessionmigrationgenerator","stylesheetsgenerator","testcase","info","infocontroller","initializable","classmethods","collection","initializer","initializer","paths","path","pathparent","root","plugin","rack","debugger","logtailer","logger","railtie","configurable","classmethods","configuration","scriptrailsloader","server","options","testunitrailtie","railsenvironment","recursivehttpfetcher","sourceannotationextractor","annotation","test","unit","collector","objectspace","testunit","generators","controllergenerator","helpergenerator","integrationgenerator","mailergenerator","modelgenerator","observergenerator","performancegenerator","plugingenerator","scaffoldgenerator","time","&()","+()","+()","+()","+()","+()","+()","-()","-()","-()","<<()","<<()","<<()","<<()","<<()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","===()","===()","===()","===()","=~()","=~()","=~()","=~()","get()","post()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","__replay__()","_all_autoload_paths()","_all_load_paths()","_compile_per_key_options()","_dasherize()","_dump()","_dump()","_dump_without_utc_flag()","_dump_without_zone()","_handle_method_missing()","_implied_layout_name()","_insert_callbacks()","_load()","_load()","_load_without_utc_flag()","_load_without_zone()","_normalize_callback_options()","_normalize_options()","_normalize_options()","_original_to_s()","_parse_file()","_prefix()","_read_attribute()","_render_partial()","_routes()","_run_class_setup()","_save_fragment()","_set_detail()","_update_filter()","_write_layout_method()","_write_render_options()","_write_render_options()","abstract!()","abstract_class?()","abstract_railtie?()","accept=()","accepts()","accepts_nested_attributes_for()","accessible_attributes()","action()","action=()","action_has_layout?()","action_has_layout?()","action_methods()","action_methods()","action_methods()","action_methods()","action_options?()","action_path()","active()","active?()","active?()","active?()","active_authorizer()","acts_like?()","acts_like_date?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","acts_like_time?()","adapter_name()","adapter_name()","add()","add()","add()","add_column()","add_column()","add_column()","add_column_position!()","add_error()","add_expr_escaped()","add_expr_literal()","add_filter()","add_index()","add_limit_offset!()","add_observer()","add_observer!()","add_on_blank()","add_on_empty()","add_postamble()","add_preamble()","add_resource_route()","add_routes()","add_shebang_option!()","add_silencer()","add_source()","add_stmt()","add_text()","add_timestamps()","add_to_base()","add_to_transaction()","add_transaction_record()","advance()","advance()","advance()","after()","after()","after_commit()","after_dispatch()","after_dispatch()","after_initialize()","after_rollback()","after_validation()","aggregate_mapping()","ago()","ago()","ago()","ago()","alert()","alert()","alert=()","alias_attribute()","all()","all()","all()","all()","all()","all()","all_paths()","announce()","any?()","api_behavior()","api_location()","app()","app()","app()","app()","app()","app()","app=()","app_const()","app_const_base()","app_generators()","app_middleware()","app_name()","app_secret()","append=()","append_features()","append_if_string=()","append_info_to_payload()","append_view_path()","append_view_path()","application()","application()","application=()","application_name()","apply_common_behavior_for()","apply_finder_options()","apply_join_dependency()","apply_rails_template()","arel()","arel_engine()","arel_table()","arguments()","array_or_string_for_javascript()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","assert_blank()","assert_class_method()","assert_difference()","assert_directory()","assert_dom_equal()","assert_dom_not_equal()","assert_field_default_value()","assert_field_type()","assert_file()","assert_generates()","assert_index()","assert_instance_method()","assert_method()","assert_migration()","assert_no_difference()","assert_no_directory()","assert_no_file()","assert_no_migration()","assert_no_tag()","assert_present()","assert_recognizes()","assert_redirected_to()","assert_response()","assert_routing()","assert_select()","assert_select_email()","assert_select_encoded()","assert_select_rjs()","assert_tag()","assert_template()","assign()","assign_shortcuts()","assigns()","assigns()","assume_migrated_upto_version()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_year()","at_end_of_month()","at_end_of_quarter()","at_end_of_week()","at_end_of_year()","at_midnight()","at_midnight()","atom_feed()","atomic_write()","attach_to()","attachments()","attr_accessible()","attr_protected()","attr_readonly()","attribute_for_inspect()","attribute_method?()","attribute_method?()","attribute_method?()","attribute_method_affix()","attribute_method_prefix()","attribute_method_suffix()","attribute_methods_generated?()","attribute_names()","attribute_present?()","attributes()","attributes=()","attributes_before_type_cast()","attributes_protected_by_default()","audio_path()","audio_tag()","auth_type()","auth_type=()","auth_type=()","authenticate()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_or_request_with_http_token()","authenticate_with_http_basic()","authenticate_with_http_digest()","authenticate_with_http_token()","authentication_header()","authentication_request()","authentication_request()","authentication_request()","authorization()","auto_discovery_link_tag()","auto_flush()","auto_flushing=()","auto_link()","autoload()","autoload_at()","autoload_once()","autoload_once_paths()","autoload_paths()","autoload_paths()","autoload_under()","autoloads()","available_views()","average()","backend()","backend=()","backend=()","backtrace_cleaner()","bang?()","banner()","banner()","base64()","base_class()","base_name()","base_root()","becomes()","before()","before()","before_configuration()","before_dispatch()","before_dispatch()","before_eager_load()","before_filters()","before_initialize()","before_validation()","begin_db_transaction()","begin_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_month()","beginning_of_quarter()","beginning_of_week()","beginning_of_year()","belongs_to()","belongs_to()","belongs_to()","benchmark()","benchmark()","best_install_method()","between?()","binary_content()","binary_to_string()","bind()","blank?()","blank?()","body()","body()","body=()","body_parts()","breakpoint()","buffer()","build()","build()","build()","build()","build()","build()","build()","build_arel()","build_callbacks()","build_conditions()","build_from_hash()","build_mem_cache()","build_middleware_stack()","build_sti_condition()","build_through_conditions()","builder()","builtin_controller()","bundle_if_dev_or_edge()","button_to()","button_to_function()","cache()","cache()","cache()","cache()","cache()","cache_attribute?()","cache_attributes()","cache_fixtures()","cache_for_connection()","cache_key()","cache_page()","cache_page()","cache_store()","cache_store()","cache_store=()","cached_attributes()","cached_fixtures()","caches_action()","caches_page()","caching_allowed?()","calculate()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","callback()","camelize()","canonical_action?()","capify!()","capitalize()","capture()","capture()","case_sensitive_equality_operator()","case_sensitive_equality_operator()","cdata_block()","cdata_section()","center()","change()","change()","change()","change_column()","change_column()","change_column_default()","change_column_default()","change_column_null()","change_column_null()","change_column_null()","change_default()","change_table()","changed()","changed?()","changed_attributes()","changed_for_autosave?()","changes()","characters()","charset()","check_box()","check_box()","check_box_checked?()","check_box_tag()","check_class_collision()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","checkin()","checkout()","civil_from_format()","class_eval()","class_name()","class_name()","class_of_active_record_descendant()","classify()","clean()","cleanup()","cleanup()","cleanup()","cleanup_view_runtime()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear!()","clear_action_methods!()","clear_active_connections!()","clear_all_connections!()","clear_buffer()","clear_cache()","clear_helpers()","clear_query_cache()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_respond_to()","clear_stale_cached_connections!()","clear_transaction_record_state()","client_error?()","client_min_messages()","client_min_messages=()","clone()","clone()","clone_attribute_value()","clone_attributes()","close()","close()","code()","collation()","collection()","collection_path()","collection_path()","collection_select()","collection_select()","collection_with_template()","collection_without_template()","color()","colorize_logging()","colorize_logging()","colorize_logging=()","column()","column()","column_aliases()","column_exists?()","column_exists?()","column_for_attribute()","column_name_length()","column_names()","columns()","columns()","columns()","columns_hash()","columns_per_multicolumn_index()","columns_per_table()","commit_db_transaction()","commit_db_transaction()","commit_transaction_records()","comparable_time()","compare_with_coercion()","compare_with_coercion()","compare_without_coercion()","compare_without_coercion()","compile()","compile()","compile()","compile()","compile()","compose()","compose_codepoints()","composed_of()","compress()","compressed?()","compute_type()","concat()","concat()","concat()","concat()","conditions()","config()","config()","config()","config()","config()","config()","config()","config()","config()","config()","config_accessor()","configru()","configuration()","configurations()","configure()","configure()","connected?()","connected?()","connected?()","connection()","connection()","connection()","connection()","connection()","connection()","connection()","connection()","connection_handler()","connection_pool()","consider_all_requests_local?()","console()","constantize()","constraints()","construct_conditions()","construct_from()","construct_join_attributes()","construct_join_dependency_for_association_find()","construct_joins()","construct_limited_ids_condition()","construct_owner_attributes()","construct_quoted_owner_attributes()","construct_relation_for_association_calculations()","construct_relation_for_association_find()","construct_scope()","construct_select()","consumes?()","content_columns()","content_for()","content_for?()","content_length()","content_mime_type()","content_tag()","content_tag_for()","content_type()","content_type()","content_type=()","controller()","controller()","controller_class()","controller_class=()","controller_class_name()","controller_class_path()","controller_file_name()","controller_file_path()","controller_i18n_scope()","controller_name()","controller_name()","controller_path()","controller_path()","controller_path()","controller_path=()","controller_paths()","controller_paths=()","convert_key()","convert_to_model()","convert_value()","cookie_jar()","cookie_secret()","cookie_secret=()","cookies()","cookies()","cookies()","cookies()","copy_stylesheets_file()","copy_view_files()","copy_view_files()","count()","count()","count_by_sql()","count_observers()","counter_name()","create()","create()","create()","create()","create()","create()","create()","create!()","create!()","create_active_record_files()","create_app_files()","create_boot_file()","create_config_files()","create_controller_files()","create_controller_files()","create_database()","create_database()","create_db_files()","create_doc_files()","create_fixture_file()","create_fixtures()","create_fixtures()","create_generated_attribute()","create_generator_files()","create_helper_files()","create_helper_files()","create_lib_files()","create_lib_files()","create_log_files()","create_prototype_files()","create_public_files()","create_public_image_files()","create_public_stylesheets_files()","create_reflection()","create_root()","create_root_files()","create_root_files()","create_root_folder()","create_savepoint()","create_savepoint()","create_savepoint()","create_script_files()","create_table()","create_tasks_files()","create_test_file()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_tmp_files()","create_vendor_files()","create_with()","creator?()","csrf_meta_tag()","css_select()","current()","current()","current_cycle()","current_database()","current_database()","current_hash()","current_hash()","current_page?()","current_savepoint_name()","custom_join_sql()","custom_method_collection_url()","cycle()","daemon()","dasherize()","data()","data()","data_column()","data_column_name()","data_column_size_limit()","database_configuration()","database_configuration_file()","database_configuration_file=()","database_yml()","date_select()","date_select()","datetime_select()","datetime_select()","days_in_month()","db()","debug()","debug_protected_attribute_removal()","debug_rjs=()","debugger()","decode()","decode()","decode()","decode()","decode()","decode64()","decode_credentials()","decode_credentials()","decode_credentials_header()","decompose()","decompose_codepoints()","decompress()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrement_open_transactions()","decrypt()","decrypt_and_verify()","default()","default()","default()","default()","default=()","default_action()","default_aliases_for_option()","default_for_option()","default_format()","default_inspect()","default_middleware_stack()","default_options()","default_primary_key_type()","default_render()","default_render()","default_scope()","default_sequence_name()","default_source_root()","default_timezone()","default_url_options()","default_url_options()","default_url_options()","default_url_options=()","default_url_options=()","default_value_for_option()","defaults()","define()","define_attr_method()","define_attribute_methods()","define_attribute_methods()","define_callbacks()","define_callbacks()","define_method_attribute()","define_method_attribute()","define_method_attribute=()","define_method_attribute=()","define_model_callbacks()","defined_activerecord_methods()","defined_app_const_base()","defined_app_const_base?()","defined_app_name()","delay()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete?()","delete_all()","delete_entry()","delete_entry()","delete_existing_fixtures()","delete_matched()","delete_matched()","delete_matched()","delete_sql()","delete_via_redirect()","demodulize()","deny?()","deny?()","deprecate()","deprecated_url_options()","desc()","descendants()","descendants()","descends_from_active_record?()","describe()","destination()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_all()","destroyed?()","details_for_lookup()","determine_default_controller_class()","determine_default_helper_class()","determine_install_method()","dev_or_edge?()","direct_descendants()","direct_descendants()","dirname()","dirties_query_cache()","disable_referential_integrity()","discard()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","dispatch()","dispatch()","display()","display()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","distinct()","div_for()","doc()","dom_class()","dom_id()","domain()","downcase()","download()","draggable()","draggable_element()","drop_receiving()","drop_receiving_element()","drop_table()","drop_table()","dst?()","dup()","dup()","dup()","duplicable?()","each()","each()","each()","each_full()","each_with_object()","eager_autoload()","eager_autoload!()","eager_load()","eager_load()","eager_load!()","eager_load!()","eager_load_paths()","eager_loading?()","element_path()","element_path()","email_field()","email_field_tag()","emitted_hidden_id?()","empty?()","empty?()","empty_directory_with_gitkeep()","empty_insert_statement_value()","empty_insert_statement_value()","empty_json_resource()","empty_resource()","emulate_booleans()","enable_warnings()","encode()","encode()","encode()","encode()","encode()","encode64()","encode_credentials()","encode_credentials()","encode_credentials()","encode_json()","encode_with()","encode_with()","encoding()","encoding=()","encrypt()","encrypt_and_sign()","end()","end_document()","end_element()","end_of_day()","end_of_day()","end_of_month()","end_of_quarter()","end_of_week()","end_of_year()","engines()","entry()","enumerate()","env()","env()","env=()","env_defaults()","env_filter()","environment()","environment()","environment=()","eql?()","eql?()","eql?()","eql?()","erb_trim_mode()","error()","error?()","error_message()","error_wrapping()","errors()","errors()","errors()","escape()","escape_bytea()","escape_javascript()","escape_once()","establish_connection()","establish_connection()","etag()","etag=()","etag?()","etag_matches?()","except()","excerpt()","exclude?()","exec_script_rails!()","execute()","execute()","execute_if_updated()","exist?()","exists?()","exists?()","exists?()","exists?()","exists?()","expand_cache_key()","expand_hash_conditions_for_aggregates()","expected_response()","expire_action()","expire_fragment()","expire_page()","expire_page()","expired?()","expires_at()","expires_at=()","expires_in()","expires_now()","extended()","extended()","extended()","extending()","extension()","extension()","externals()","externals=()","extify()","extract_annotations_from()","extract_default()","extractable_options?()","fallback_string_to_date()","fallback_string_to_time()","fallbacks()","fast_string_to_date()","fast_string_to_time()","favicon_link_tag()","fetch()","fetch()","fetch()","fetch_dir()","field_set_tag()","field_type()","fields_for()","fields_for()","file()","file_field()","file_field_tag()","file_path()","filename()","filter()","filter_by()","filtered_env()","filtered_options()","filtered_parameters()","filtered_path()","filtered_query_string()","find()","find()","find()","find()","find()","find()","find()","find_all()","find_all()","find_all_tag()","find_by_attributes()","find_by_session_id()","find_by_session_id()","find_by_sql()","find_cmd()","find_first()","find_in()","find_last()","find_layout()","find_one()","find_or_instantiator_by_attributes()","find_root_with_flag()","find_some()","find_tag()","find_template()","find_tzinfo()","find_with_associations()","find_with_ids()","finder?()","finish_template()","first()","first()","fixture_file_upload()","fixture_is_cached?()","fixtures()","flash()","flash()","flash()","flush()","flush()","flush_all!()","flush_cache()","flushable_loggers()","follow_redirect!()","for_tag()","foreign_key()","forgery_whitelisted?()","forking_env?()","form_authenticity_param()","form_authenticity_token()","form_data?()","form_for()","form_tag()","format()","format()","format()","format()","format()","format()","format()","format()","format=()","format=()","formats()","formats=()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","fragment_cache_key()","fragment_exist?()","framework_version()","frameworks()","frameworks()","frameworks=()","freeze()","freeze()","freeze!()","freeze_with_memoizable()","fresh?()","fresh_when()","from()","from_array()","from_json()","from_json()","from_now()","from_rails_root()","from_response()","from_xml()","from_xml()","frozen?()","full_messages()","full_test_name()","fullpath()","future?()","future?()","future?()","g_length()","g_pack()","g_unpack()","gem()","gem()","gem_for_database()","gemfile()","generate()","generate()","generate_message()","generate_method_for_mime()","generator()","generator_dir()","generator_name()","generators()","generators()","get()","get()","get()","get()","get()","get()","get()","get()","get?()","get_via_redirect()","getgm()","getlocal()","getutc()","getutc()","git()","git_url?()","gitignore()","gmt?()","gmt_offset()","gmtime()","gmtoff()","group()","group_by()","grouped_collection_select()","grouped_collection_select()","grouped_options_for_select()","h()","ha1()","handle_unverified_request()","handler_for_rescue()","handles_encoding?()","has_and_belongs_to_many()","has_attribute?()","has_default?()","has_empty_resource_definition?()","has_errors?()","has_flash?()","has_flash_object?()","has_flash_with_contents?()","has_key?()","has_many()","has_one()","has_session_object?()","has_template_object?()","hash()","hash()","hash()","having()","head()","head()","head()","head()","head?()","headers()","headers()","headers()","headers()","headers=()","help()","helper()","helper()","helper_attr()","helper_class()","helper_method()","helper_method()","helpers()","helpers_dir()","helpers_dir=()","hex()","hidden_actions()","hidden_field()","hidden_field()","hidden_field_tag()","hidden_namespaces()","hide()","hide_action()","hide_namespaces()","highlight()","hook_for()","host()","host()","host!()","host=()","host_with_port()","html?()","html_document()","html_escape()","html_safe()","html_safe?()","html_safe?()","html_safe?()","httpdate()","https!()","https?()","human()","human()","human_attribute_name()","human_name()","human_name()","human_name()","human_name()","humanize()","i18n_scope()","i18n_scope()","id()","id=()","id_constraint()","id_constraint?()","id_from_response()","identify()","ids_in_list_limit()","if_modified_since()","if_modified_since=()","if_none_match()","if_none_match=()","image_path()","image_submit_tag()","image_tag()","images()","in()","in()","in_char_class?()","in_clause_length()","in_rails_application?()","in_rails_application_subdirectory?()","in_time_zone()","in_time_zone()","in_time_zone()","include?()","include?()","include?()","include_fallbacks_module()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","includes()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_open_transactions()","index()","index()","index()","index_by()","index_exists?()","index_exists?()","index_helper()","index_name_exists?()","index_name_length()","index_name_length()","indexes()","indexes_per_table()","inflections()","info()","inheritance_column()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","init_fallbacks()","init_with()","initialize!()","initialize!()","initialize_console()","initialize_copy()","initialize_copy()","initialize_generators()","initialize_i18n()","initialize_schema_migrations_table()","initialize_tasks()","initialize_template_class()","initialized=()","initialized?()","initializer()","initializer()","initializers()","initializers()","initializers()","initializers_chain()","initializers_for()","insert()","insert()","insert()","insert()","insert_after()","insert_before()","insert_fixture()","insert_fixtures()","insert_html()","insert_sql()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","install()","install()","installed?()","instance()","instance()","instance_method_already_implemented?()","instance_method_already_implemented?()","instance_variable_names()","instantiate_all_loaded_fixtures()","instantiate_fixtures()","instantiate_observers()","instantiator?()","instrument()","instrument()","instrument()","instrument=()","instrument_fragment_cache()","instrumenter()","internal_methods()","invalid?()","invalid?()","invoke()","ip()","irregular()","is_a?()","is_missing?()","isdst()","iso8601()","j()","javascript_include_tag()","javascript_path()","javascript_tag()","javascripts()","joins()","joins_per_query()","json_escape()","keep()","key?()","key?()","key_matcher()","kind()","kind()","kind_of?()","klass()","klass()","klass()","known_attributes()","known_attributes()","l()","l()","label()","label()","label_tag()","last()","last()","last_modified()","last_modified=()","last_modified?()","layout()","layout()","lib()","lib()","limit()","limit()","limited_update_conditions()","limited_update_conditions()","link_to()","link_to_function()","link_to_if()","link_to_unless()","link_to_unless_current()","links()","listeners_for()","listening?()","literal()","ljust()","load()","load()","load_attributes_from_response()","load_console()","load_console()","load_deprecated_tasks()","load_generators()","load_generators()","load_paths()","load_paths()","load_paths=()","load_tasks()","load_tasks()","load_tasks()","load_tasks()","loaded?()","loaded?()","loaded?()","local()","local?()","local_offset()","local_time()","local_to_utc()","locale()","locale=()","localize()","localize()","locals()","localtime()","location()","location()","location=()","location=()","lock()","lock!()","locking_column()","locking_enabled?()","log()","log()","log()","log_level()","log_path()","log_path()","log_path=()","log_process_action()","log_subscriber()","log_subscribers()","logged()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger=()","lookup()","lookup_ancestors()","lookup_by_extension()","lookup_context()","lookup_store()","ls()","lstrip()","mail()","mail_to()","mailer_name()","many?()","many?()","mark_for_destruction()","marked_for_destruction?()","marshal_dump()","marshal_load()","mass_assignment_authorizer()","match()","match()","match()","match()","match()","match()","matches?()","maximum()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure_mode()","media_type()","member()","memoize()","memoize_all()","memoized_ivar_for()","merge()","merge()","message()","method()","method_added()","method_added()","method_for_action()","method_for_action()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing_target()","method_name()","method_option_to_s()","method_symbol()","microseconds()","middleware()","middleware()","middleware()","midnight()","midnight()","migrate()","migration_template()","migrations_path()","mime_type()","mime_type()","mime_type()","minimum()","minus_with_coercion()","minus_without_coercion()","minus_without_duration()","missing?()","missing_name()","missing_name?()","model_name()","model_name()","monday()","month()","months()","months_ago()","months_since()","mount()","multiple_of?()","mute()","mysql_socket()","name()","name()","name()","name_for_action()","named_scope()","namespace()","namespace()","namespace()","native_database_types()","navigation_behavior()","navigation_location()","negotiate_mime()","nested()","nested_options()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","new_constants()","new_date()","new_element_path()","new_element_path()","new_from_hash_copying_default()","new_record?()","new_record?()","new_session()","new_time()","next_id()","next_month()","next_week()","next_year()","no_color!()","nonce()","normalize()","normalize()","normalize_name()","normalize_options!()","normalize_path()","not_modified?()","notice()","notice=()","notifier()","notify_observers()","now()","now()","number?()","number_field()","number_field_tag()","number_to_currency()","number_to_human()","number_to_human_size()","number_to_percentage()","number_to_phone()","number_with_delimiter()","number_with_precision()","object()","observe()","observed_class()","observed_classes()","observed_descendants()","observers()","observers=()","odd?()","offset()","on()","on_base()","on_cdata_block()","on_characters()","on_end_document()","on_end_element()","on_start_document()","on_start_element()","only()","opaque()","open()","open_session()","open_transactions()","opt_parser()","option_groups_from_collection_for_select()","options()","options()","options()","options()","options_for()","options_for_ajax()","options_for_javascript()","options_for_select()","options_from_collection_for_select()","options_include_default?()","ord()","order()","ordinalize()","ordinalize()","orig_delete()","orm_class()","orm_instance()","output_filename()","output_filename()","output_filename()","outside_transaction?()","outside_transaction?()","parameter_filter()","parameter_filter_for()","parameterize()","parameters()","params()","params()","params=()","parent_of?()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse_raw_value_as_a_number()","parse_raw_value_as_an_integer()","password()","password=()","password=()","password_field()","password_field_tag()","past?()","past?()","past?()","path()","path()","path=()","path_for_action()","path_parameters()","path_to_audio()","path_to_image()","path_to_javascript()","path_to_stylesheet()","path_to_video()","paths()","paths()","paths()","pending()","perform_validations()","performed?()","period()","period_for_local()","period_for_utc()","persisted?()","persisted?()","phone_field()","phone_field_tag()","plugin()","plugin_dir()","plugins()","plural()","plural()","plural_file_name()","plural_name()","plural_table_name()","pluralize()","pluralize()","pluralize_table_names()","pluralize_table_names?()","polymorphic_path()","polymorphic_url()","pop_d()","pop_modules()","port()","port=()","port_string()","post()","post()","post()","post()","post()","post()","post?()","post_via_redirect()","postgresql_version()","precisionless_round()","prefetch_primary_key?()","prefix()","prefix=()","prefix_name_for_action()","prefix_source()","preload()","preload_associations()","prepare!()","prepare_controller_class()","prepare_destination()","prepend_view_path()","prepend_view_path()","presence()","present?()","prev_month()","prev_year()","previous_changes()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key=()","primary_key_prefix_type()","prime_cache()","process()","process()","process()","process()","process_action()","process_action()","process_action()","process_view_paths()","process_with_new_base_test()","profile()","properties()","property()","protect_against_forgery?()","protect_from_forgery()","protected_attributes()","protocol()","proxy()","proxy=()","proxy=()","prune()","pruning?()","public_directory()","public_path()","public_path=()","publish()","push()","push()","push_d()","put()","put()","put()","put()","put()","put()","put?()","put_via_redirect()","query()","query_attribute()","query_parameters()","quote()","quote()","quote_column_name()","quote_string()","quote_table_name()","quote_table_name()","quote_table_name()","quoted_columns_for_index()","quoted_columns_for_index()","quoted_date()","quoted_false()","quoted_false()","quoted_locking_column()","quoted_primary_key()","quoted_table_name()","quoted_true()","quoted_true()","radio_button()","radio_button()","radio_button_checked?()","radio_button_tag()","railtie_name()","railties()","railties()","rake()","rake_tasks()","rakefile()","rakefile()","random_bytes()","random_number()","range_field()","range_field_tag()","raw()","raw_connection()","raw_host_with_port()","raw_post()","raw_value()","read()","read()","read_attribute()","read_attribute_before_type_cast()","read_entry()","read_entry()","read_fragment()","read_multi()","read_multi()","readable_inspect()","readme()","readme()","readonly()","readonly!()","readonly?()","readonly_attributes()","receive()","recompile!()","reconnect!()","reconnect!()","reconnect!()","record()","record()","record_key_for_dom_id()","recycle!()","redirect()","redirect?()","redirect_to()","redirect_to()","redirect_to()","redirect_to()","redirect_to()","redirect_to_url()","redirect_url()","redirect_url_match?()","redirected_to()","ref()","reference?()","references()","references()","reflect_on_aggregation()","reflect_on_all_aggregations()","reflect_on_all_associations()","reflect_on_all_autosave_associations()","reflect_on_association()","reflections()","register()","register_alias()","register_interceptor()","register_interceptors()","register_javascript_expansion()","register_javascript_include_default()","register_observer()","register_observers()","register_stylesheet_expansion()","regular_writer()","release_connection()","release_savepoint()","release_savepoint()","release_savepoint()","reload()","reload()","reload()","reload()","reload()","reload!()","reload_routes!()","reloader()","remember_transaction_record_state()","remote_addr=()","remote_addrs()","remote_function()","remote_ip()","remove()","remove()","remove_belongs_to()","remove_column()","remove_columns()","remove_connection()","remove_connection()","remove_filters!()","remove_hook_for()","remove_index()","remove_index()","remove_multiparameter_id()","remove_references()","remove_silencers!()","remove_timestamps()","remove_timestamps()","rename()","rename_column()","rename_column()","rename_index()","rename_key()","rename_table()","rename_table()","rename_table()","rename_table()","render()","render()","render()","render()","render()","render()","render()","render_collection()","render_collection()","render_partial()","render_partial()","render_template()","render_to_body()","render_to_body()","render_to_body()","render_to_string()","rendered()","reorder()","reorder_characters()","replace()","replace()","replace_html()","report()","report()","request()","request_http_basic_authentication()","request_http_digest_authentication()","request_http_token_authentication()","request_method()","request_method=()","request_method_symbol()","request_parameters()","request_uri()","request_uri=()","request_via_redirect()","requests()","requests()","require_fixture_classes()","require_library_or_gem()","requires_reloading?()","requires_reloading?()","rescue_action()","rescue_action_in_public!()","rescue_action_without_handler()","rescue_from()","rescue_from()","rescue_with_handler()","rescue_with_handler()","reset()","reset!()","reset!()","reset!()","reset!()","reset!()","reset_cache()","reset_callbacks()","reset_column_information()","reset_counters()","reset_cycle()","reset_javascript_include_default()","reset_locking_column()","reset_runtime()","reset_sequence!()","reset_session()","reset_session()","resource()","resource_location()","resource_method_scope?()","resource_scope()","resource_scope?()","resourceful?()","resources()","resources_path_names()","respond()","respond_to()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_without_attributes?()","respond_to_without_attributes?()","response_body=()","response_body=()","response_code()","response_from_page_or_rjs()","responses()","restore_transaction_record_state()","retrieve_connection()","retrieve_connection_pool()","returning()","reverse()","reverse_merge()","reverse_merge!()","reverse_order()","rewind()","rfc2822()","rfc822()","rindex()","rjust()","rollback_active_record_state!()","rollback_db_transaction()","rollback_db_transaction()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_transaction_records()","root()","root()","root()","root=()","round()","route()","route_url()","routes()","routes_configuration_file()","routes_configuration_file=()","routes_reloader()","rstrip()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_callbacks()","run_generator()","run_in_isolation()","run_in_isolation()","run_in_transaction?()","run_initializers()","run_profile()","run_test()","run_validations!()","run_validations!()","run_warmup()","runtime()","runtime=()","safe_concat()","safe_concat()","sanitize()","sanitize()","sanitize_css()","sanitize_dom_id()","sanitize_for_mass_assignment()","sanitize_limit()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_hash_for_assignment()","sanitize_sql_hash_for_conditions()","save()","save()","save()","save()","save()","save!()","save!()","save!()","save_with_validation()","say()","say_with_time()","schema()","schema()","schema=()","schema_format()","schema_search_path()","schema_search_path=()","scheme()","scope()","scope()","scope_action_options()","scope_action_options?()","scope_for_create()","scoped()","scopes()","scoping()","script()","search_field()","search_field_tag()","seconds_since_midnight()","seconds_since_midnight()","seconds_to_utc_offset()","secret_token()","select()","select()","select()","select()","select()","select_all()","select_all()","select_date()","select_datetime()","select_day()","select_hour()","select_minute()","select_month()","select_one()","select_rows()","select_rows()","select_rows()","select_rows()","select_second()","select_tag()","select_time()","select_value()","select_values()","select_year()","send_action()","send_data()","send_data()","send_data()","send_file()","send_file()","send_file()","serializable_hash()","serializable_hash()","serialize()","serialized_attributes()","server_error?()","server_port()","server_software()","session()","session()","session_id_column()","session_options=()","session_store()","set_callback()","set_content_type()","set_default_accessors!()","set_default_backend()","set_environment()","set_fixture_class()","set_inheritance_column()","set_locking_column()","set_logger()","set_primary_key()","set_sequence_name()","set_standard_conforming_strings()","set_table_name()","set_test_assigns()","setup()","setup()","setup()","setup()","setup()","setup()","setup_controller_request_and_response()","setup_fixture_accessors()","setup_fixtures()","setup_subscriptions()","setup_with_controller()","shallow()","shallow?()","shallow_scoping?()","show()","show_variable()","silence()","silence()","silence()","silence!()","silence_stream()","silence_warnings()","silencer()","simple_format()","since()","since()","since()","since()","singleton_class()","singular()","singular()","singular_table_name()","singularize()","site()","site=()","site=()","size()","size()","size()","size()","size()","skip_callback()","skip_default_locale!()","skip_filter()","slice()","sortable()","sortable_element()","source_root()","split()","split_args()","sql()","sql_conditions()","sql_query_length()","sqlite_version()","ssl?()","ssl_options()","ssl_options=()","ssl_options=()","stale?()","standard_port()","standard_port?()","start()","start()","start()","start()","start()","start()","start_document()","start_element()","start_processing()","stats()","status()","status=()","status=()","status_message()","sti_name()","strftime()","string_to_binary()","string_to_date()","string_to_dummy_time()","string_to_time()","stringify_keys()","stringify_keys!()","strip()","strip_links()","strip_tags()","structure_dump()","stylesheet_link_tag()","stylesheet_path()","stylesheets()","subclasses()","subclasses()","subclasses()","subdomain()","subdomains()","submit()","submit_tag()","subscribe()","subscribe()","success?()","success?()","sum()","sum()","supports_add_column?()","supports_count_distinct?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_insert_with_returning?()","supports_migrations?()","supports_migrations?()","supports_primary_key?()","supports_savepoints?()","supports_savepoints?()","suppress()","suppress_messages()","svn_url?()","swap()","symbolize_keys()","symbolized_path_parameters()","symbols()","t()","t()","table_alias_for()","table_alias_length()","table_alias_length()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_name()","table_name()","table_name()","table_name_length()","table_name_prefix()","table_name_suffix()","table_structure()","tableize()","tables()","tag()","tag()","tail!()","teardown()","teardown()","teardown_fixtures()","teardown_subscriptions()","telephone_field()","telephone_field_tag()","template()","template_exists?()","template_objects()","templates_path()","test()","test()","test_errors_aref()","test_errors_full_messages()","test_model_naming()","test_persisted?()","test_to_key()","test_to_param()","test_valid?()","tests()","tests()","tests()","text?()","text_area()","text_area_tag()","text_field()","text_field_tag()","threadsafe!()","tidy_bytes()","tidy_bytes()","time()","time_ago_in_words()","time_select()","time_select()","time_with_datetime_fallback()","time_zone_options_for_select()","time_zone_select()","time_zone_select()","timeout()","timeout=()","timeout=()","timestamped_migrations()","timestamps()","timestamps()","titlecase()","titleize()","titleize()","tmp()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_d()","to_date()","to_date()","to_datetime()","to_datetime()","to_datetime()","to_default_s()","to_default_s()","to_f()","to_f()","to_format()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_hash()","to_hash()","to_hash()","to_html()","to_html()","to_i()","to_i()","to_json()","to_key()","to_key()","to_model()","to_model()","to_options!()","to_param()","to_param()","to_param()","to_path()","to_path()","to_prepare()","to_prepare()","to_prepare()","to_prepare_blocks()","to_query()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sql()","to_sql()","to_str()","to_sym()","to_tag()","to_time()","to_time()","to_time()","to_xml()","to_xml()","to_xml()","to_xml()","to_yaml()","to_yaml()","to_yaml()","today()","today?()","today?()","toggle()","toggle()","toggle!()","token_and_options()","tomorrow()","touch()","transaction()","transaction()","transaction()","transaction_include_action?()","transaction_joinable=()","transaction_record_state()","translate()","translate()","translate_exception()","translate_exception()","translate_exception()","translate_exception()","transliterate()","truncate()","try()","try_to_load_dependency()","tsort_each_child()","tv_sec()","type_cast()","type_cast_code()","type_to_sql()","type_to_sql()","u_unpack()","uncached()","uncached()","uncountable()","uncountable?()","uncountable?()","undefine_attribute_methods()","underscore()","unescape()","unescape_bytea()","unescape_rjs()","uninstall()","unmemoize_all()","unserializable_attribute?()","unserialize_attribute()","unshift()","unshift()","unsubscribe()","unsubscribe()","until()","upcase()","update()","update()","update()","update()","update()","update_all()","update_attribute()","update_attribute()","update_attributes()","update_attributes()","update_attributes()","update_attributes!()","update_counters()","update_counters()","update_details()","update_page()","update_page_tag()","update_sql()","update_sql()","updated()","updated_at()","url()","url_field()","url_field_tag()","url_for()","url_for()","url_for()","url_options()","url_options()","url_options()","url_options()","us_zones()","use()","use()","use_checkout?()","use_externals?()","use_renderer()","use_renderers()","use_svn?()","use_zone()","usec()","user()","user=()","user=()","user_agent=()","user_name_and_password()","uses_transaction()","uses_transaction?()","using_limitable_reflections?()","utc()","utc()","utc?()","utc?()","utc_offset()","utc_offset()","utc_offset()","utc_time()","utc_to_local()","valid?()","valid?()","valid?()","valid_alter_table_options()","valid_app_const?()","valid_scope_name?()","validate()","validate()","validate()","validate()","validate_digest_response()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_fallbacks()","validate_nonce()","validates()","validates_acceptance_of()","validates_associated()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_numericality_of()","validates_presence_of()","validates_size_of()","validates_uniqueness_of()","validates_with()","validates_with()","validators()","validators_on()","value()","value()","value_before_type_cast()","value_to_boolean()","value_to_decimal()","values_at()","variable_name()","vendor()","vendor_plugins()","verified_request?()","verify()","verify!()","verify_authenticity_token()","verify_request?()","version()","version_constraint_for_database_gem()","video_path()","video_tag()","view_context()","view_context()","view_context_class()","view_context_class()","view_path()","view_path=()","view_paths()","view_paths=()","view_paths=()","visible_action?()","visual_effect()","visual_effect()","wait()","wait()","wants?()","warn!()","watch_namespaces()","where()","where_values_hash()","with_backend()","with_backend()","with_connection()","with_exclusive_scope()","with_exclusive_scope()","with_fallbacks()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_layout_format()","with_local_cache()","with_options()","with_output_file()","with_routing()","with_scope()","with_scope_level()","with_transaction_returning_status()","with_warnings()","without_modules()","word_wrap()","write()","write()","write()","write_attribute()","write_entry()","write_entry()","write_fragment()","xhr()","xhr()","xhr?()","xml()","xml_column_fallback()","xml_http_request()","xml_http_request()","xml_http_request?()","xmlschema()","xmlschema()","year()","years()","years_ago()","years_since()","yesterday()","zone()","zone()","zone=()","zones_map()","readme.rdoc","readme.rdoc","changelog","readme.rdoc","base.rb","changelog","readme.rdoc","asset_paths.rb","base.rb","callbacks.rb","collector.rb","helpers.rb","layouts.rb","logger.rb","rendering.rb","translation.rb","view_paths.rb","base.rb","caching.rb","actions.rb","fragments.rb","pages.rb","sweeping.rb","deprecated.rb","base.rb","dispatcher.rb","integration_test.rb","performance_test.rb","url_writer.rb","log_subscriber.rb","metal.rb","compatibility.rb","conditional_get.rb","cookies.rb","exceptions.rb","flash.rb","head.rb","helpers.rb","hide_actions.rb","http_authentication.rb","implicit_render.rb","instrumentation.rb","mime_responds.rb","rack_delegation.rb","redirecting.rb","renderers.rb","rendering.rb","request_forgery_protection.rb","rescue.rb","responder.rb","session_management.rb","streaming.rb","testing.rb","url_for.rb","middleware.rb","railtie.rb","record_identifier.rb","test_case.rb","cache.rb","filter_parameters.rb","headers.rb","mime_negotiation.rb","mime_type.rb","mime_types.rb","parameter_filter.rb","parameters.rb","request.rb","response.rb","upload.rb","url.rb","best_standards_support.rb","callbacks.rb","cookies.rb","flash.rb","head.rb","params_parser.rb","remote_ip.rb","rescue.rb","abstract_store.rb","cookie_store.rb","mem_cache_store.rb","show_exceptions.rb","stack.rb","static.rb","railtie.rb","routing.rb","deprecated_mapper.rb","mapper.rb","polymorphic_routes.rb","route.rb","route_set.rb","url_for.rb","assertions.rb","dom.rb","response.rb","routing.rb","selector.rb","tag.rb","integration.rb","performance_test.rb","test_process.rb","test_request.rb","test_response.rb","base.rb","context.rb","helpers.rb","active_model_helper.rb","asset_tag_helper.rb","atom_feed_helper.rb","cache_helper.rb","capture_helper.rb","csrf_helper.rb","date_helper.rb","debug_helper.rb","form_helper.rb","form_options_helper.rb","form_tag_helper.rb","javascript_helper.rb","number_helper.rb","prototype_helper.rb","raw_output_helper.rb","record_tag_helper.rb","sanitize_helper.rb","scriptaculous_helper.rb","tag_helper.rb","text_helper.rb","translation_helper.rb","url_helper.rb","log_subscriber.rb","lookup_context.rb","paths.rb","railtie.rb","layouts.rb","partials.rb","rendering.rb","template.rb","error.rb","handler.rb","handlers.rb","builder.rb","erb.rb","rjs.rb","resolver.rb","text.rb","test_case.rb","resolvers.rb","changelog","readme.rdoc","attribute_methods.rb","callbacks.rb","conversion.rb","deprecated_error_methods.rb","dirty.rb","errors.rb","lint.rb","mass_assignment_security.rb","permission_set.rb","sanitizer.rb","naming.rb","observing.rb","railtie.rb","serialization.rb","json.rb","xml.rb","test_case.rb","translation.rb","validations.rb","acceptance.rb","callbacks.rb","confirmation.rb","exclusion.rb","format.rb","inclusion.rb","length.rb","numericality.rb","presence.rb","validates.rb","with.rb","validator.rb","version.rb","changelog","readme.rdoc","aggregations.rb","association_preload.rb","associations.rb","association_collection.rb","association_proxy.rb","belongs_to_association.rb","belongs_to_polymorphic_association.rb","has_and_belongs_to_many_association.rb","has_many_association.rb","has_many_through_association.rb","has_one_association.rb","has_one_through_association.rb","through_association_scope.rb","attribute_methods.rb","before_type_cast.rb","dirty.rb","primary_key.rb","query.rb","read.rb","time_zone_conversion.rb","write.rb","autosave_association.rb","base.rb","callbacks.rb","connection_pool.rb","connection_specification.rb","database_limits.rb","database_statements.rb","query_cache.rb","quoting.rb","schema_definitions.rb","schema_statements.rb","abstract_adapter.rb","mysql_adapter.rb","postgresql_adapter.rb","sqlite3_adapter.rb","sqlite_adapter.rb","counter_cache.rb","dynamic_finder_match.rb","dynamic_scope_match.rb","errors.rb","fixtures.rb","optimistic.rb","pessimistic.rb","log_subscriber.rb","migration.rb","named_scope.rb","nested_attributes.rb","observer.rb","persistence.rb","query_cache.rb","railtie.rb","controller_runtime.rb","reflection.rb","relation.rb","batches.rb","calculations.rb","finder_methods.rb","predicate_builder.rb","query_methods.rb","spawn_methods.rb","schema.rb","schema_dumper.rb","serialization.rb","xml_serializer.rb","session_store.rb","test_case.rb","timestamp.rb","transactions.rb","validations.rb","associated.rb","uniqueness.rb","version.rb","changelog","readme.rdoc","active_resource.rb","base.rb","connection.rb","custom_methods.rb","exceptions.rb","formats.rb","json_format.rb","xml_format.rb","http_mock.rb","log_subscriber.rb","observing.rb","railtie.rb","schema.rb","validations.rb","version.rb","changelog","readme.rdoc","all.rb","backtrace_cleaner.rb","base64.rb","basic_object.rb","benchmarkable.rb","buffered_logger.rb","builder.rb","cache.rb","compressed_mem_cache_store.rb","file_store.rb","mem_cache_store.rb","memory_store.rb","local_cache.rb","synchronized_memory_store.rb","callbacks.rb","concern.rb","configurable.rb","core_ext.rb","array.rb","access.rb","conversions.rb","extract_options.rb","grouping.rb","random_access.rb","uniq_by.rb","wrap.rb","benchmark.rb","big_decimal.rb","conversions.rb","cgi.rb","escape_skipping_slashes.rb","class.rb","attribute.rb","attribute_accessors.rb","delegating_attributes.rb","inheritable_attributes.rb","subclasses.rb","acts_like.rb","calculations.rb","conversions.rb","freeze.rb","zones.rb","acts_like.rb","calculations.rb","conversions.rb","zones.rb","enumerable.rb","exception.rb","file.rb","atomic.rb","path.rb","float.rb","rounding.rb","hash.rb","conversions.rb","deep_merge.rb","diff.rb","except.rb","indifferent_access.rb","keys.rb","reverse_merge.rb","slice.rb","integer.rb","inflections.rb","multiple.rb","time.rb","kernel.rb","agnostics.rb","debugger.rb","reporting.rb","requires.rb","singleton_class.rb","load_error.rb","logger.rb","module.rb","aliasing.rb","anonymous.rb","attr_accessor_with_default.rb","attr_internal.rb","attribute_accessors.rb","delegation.rb","deprecation.rb","introspection.rb","method_names.rb","reachable.rb","remove_method.rb","synchronization.rb","name_error.rb","numeric.rb","bytes.rb","time.rb","object.rb","acts_like.rb","blank.rb","conversions.rb","duplicable.rb","instance_variables.rb","returning.rb","to_json.rb","to_param.rb","to_query.rb","try.rb","with_options.rb","proc.rb","process.rb","daemon.rb","range.rb","blockless_step.rb","conversions.rb","include_range.rb","overlaps.rb","regexp.rb","rexml.rb","string.rb","access.rb","behavior.rb","conversions.rb","encoding.rb","exclude.rb","filters.rb","inflections.rb","interpolation.rb","multibyte.rb","output_safety.rb","starts_ends_with.rb","strip.rb","xchar.rb","acts_like.rb","calculations.rb","conversions.rb","marshal.rb","publicize_conversion_methods.rb","zones.rb","uri.rb","dependencies.rb","autoload.rb","deprecation.rb","behaviors.rb","method_wrappers.rb","proxy_wrappers.rb","reporting.rb","descendants_tracker.rb","duration.rb","file_update_checker.rb","gzip.rb","hash_with_indifferent_access.rb","i18n.rb","i18n_railtie.rb","inflections.rb","inflector.rb","inflections.rb","methods.rb","transliterate.rb","json.rb","jsongem.rb","yajl.rb","yaml.rb","decoding.rb","encoding.rb","variable.rb","lazy_load_hooks.rb","log_subscriber.rb","test_helper.rb","memoizable.rb","message_encryptor.rb","message_verifier.rb","multibyte.rb","chars.rb","exceptions.rb","unicode.rb","utils.rb","notifications.rb","fanout.rb","instrumenter.rb","option_merger.rb","ordered_hash.rb","ordered_options.rb","railtie.rb","rescuable.rb","shim.rb","secure_random.rb","string_inquirer.rb","test_case.rb","assertions.rb","declarative.rb","default.rb","deprecation.rb","isolation.rb","pending.rb","performance.rb","setup_and_teardown.rb","time.rb","autoload.rb","time_with_zone.rb","time_zone.rb","version.rb","whiny_nil.rb","xml_mini.rb","jdom.rb","libxml.rb","libxmlsax.rb","nokogiri.rb","nokogirisax.rb","rexml.rb","changelog","mit-license","readme.rdoc","rails.rb","all.rb","application.rb","bootstrap.rb","configurable.rb","configuration.rb","finisher.rb","railties.rb","backtrace_cleaner.rb","cli.rb","code_statistics.rb","commands.rb","application.rb","benchmarker.rb","console.rb","dbconsole.rb","destroy.rb","generate.rb","plugin.rb","profiler.rb","runner.rb","server.rb","update.rb","configuration.rb","app.rb","helpers.rb","sandbox.rb","deprecation.rb","engine.rb","configurable.rb","configuration.rb","generators.rb","actions.rb","active_model.rb","base.rb","erb.rb","controller_generator.rb","mailer_generator.rb","scaffold_generator.rb","generated_attribute.rb","migration.rb","named_base.rb","app_generator.rb","controller_generator.rb","generator_generator.rb","helper_generator.rb","integration_test_generator.rb","migration_generator.rb","model_generator.rb","observer_generator.rb","performance_test_generator.rb","plugin_generator.rb","resource_generator.rb","scaffold_generator.rb","scaffold_controller_generator.rb","session_migration_generator.rb","stylesheets_generator.rb","resource_helpers.rb","test_case.rb","test_unit.rb","controller_generator.rb","helper_generator.rb","integration_generator.rb","mailer_generator.rb","model_generator.rb","observer_generator.rb","performance_generator.rb","plugin_generator.rb","scaffold_generator.rb","info.rb","info_controller.rb","info_routes.rb","initializable.rb","paths.rb","performance_test_help.rb","plugin.rb","rack.rb","debugger.rb","log_tailer.rb","logger.rb","static.rb","railtie.rb","configurable.rb","configuration.rb","ruby_version_check.rb","rubyprof_ext.rb","script_rails_loader.rb","source_annotation_extractor.rb","tasks.rb","test_help.rb","railtie.rb","version.rb"],"longSearchIndex":["actionpack\/lib\/abstract_controller\/logger.rb","abstractcontroller","abstractcontroller","abstractcontroller","abstractcontroller","abstractcontroller::callbacks","abstractcontroller","abstractcontroller","abstractcontroller","abstractcontroller","abstractcontroller::helpers","abstractcontroller","abstractcontroller::layouts","abstractcontroller::layouts::classmethods","abstractcontroller","abstractcontroller","abstractcontroller::rendering","abstractcontroller","abstractcontroller","abstractcontroller::viewpaths","actioncontroller","actioncontroller","actioncontroller::caching","actioncontroller::caching::actions","actioncontroller::caching::actions","actioncontroller::caching","actioncontroller::caching","actioncontroller::caching","actioncontroller::caching::pages","actioncontroller::caching","actioncontroller","actioncontroller::compatibility","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller::helpers","actioncontroller","actioncontroller::hideactions","actioncontroller","actioncontroller::httpauthentication","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication","actioncontroller::httpauthentication::token","actioncontroller","actioncontroller","actioncontroller::instrumentation","actioncontroller","actioncontroller","actioncontroller","actioncontroller::middleware","actioncontroller::mimeresponds","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller::renderers","actioncontroller::renderers","actioncontroller","actioncontroller","actioncontroller::requestforgeryprotection","actioncontroller","actioncontroller","actioncontroller::sessionmanagement","actioncontroller","actioncontroller","actioncontroller","actioncontroller::testcase","actioncontroller::testcase::behavior","actioncontroller::testcase","actioncontroller","actioncontroller","actioncontroller::testing","actioncontroller","actioncontroller::urlfor","actioncontroller","actioncontroller","actiondispatch","actiondispatch::assertions","actiondispatch::assertions","actiondispatch::assertions","actiondispatch::assertions","actiondispatch::assertions","actiondispatch","actiondispatch","actiondispatch","actiondispatch::cookies","actiondispatch","actiondispatch::flash","actiondispatch","actiondispatch","actiondispatch::http","actiondispatch::http::cache","actiondispatch::http::cache","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::http","actiondispatch::integration","actiondispatch::integration","actiondispatch::integration","actiondispatch","actiondispatch","actiondispatch::middlewarestack","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch::remoteip","actiondispatch::remoteip","actiondispatch","actiondispatch","actiondispatch","actiondispatch::response","actiondispatch","actiondispatch::routing","actiondispatch::routing::mapper","actiondispatch::routing::mapper","actiondispatch::routing::mapper","actiondispatch::routing::mapper","actiondispatch::routing::mapper","actiondispatch::routing","actiondispatch::routing","actiondispatch","actiondispatch::session","actiondispatch::session::abstractstore","actiondispatch::session::abstractstore","actiondispatch::session","actiondispatch::session","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch","actiondispatch::testresponse","actionmailer","actionmailer::base","actionmailer::base","actionview","actionview::base","actionview","actionview","actionview","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::atomfeedhelper","actionview::helpers::atomfeedhelper","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::instancetagmethods","actionview::helpers","actionview::helpers","actionview::helpers::numberhelper","actionview::helpers","actionview::helpers::prototypehelper::javascriptgenerator","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview","actionview","actionview::lookupcontext","actionview::lookupcontext","actionview","actionview","actionview","actionview","actionview::partials","actionview","actionview","actionview","actionview","actionview","actionview::template","actionview::template::handlers","actionview::template::handlers","actionview::template::handlers::compilable","actionview::template::handlers","actionview::template::handlers","actionview::template::handlers","actionview","actionview::testcase","actionview::testcase::behavior","actionview::testcase::behavior","actionview::testcase","activemodel","activemodel::attributemethods","activemodel::attributemethods::classmethods","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel::lint","activemodel","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel::observing","activemodel","activemodel","activemodel::serializers","activemodel::serializers","activemodel","activemodel","activemodel::validations","activemodel::validations","activemodel::validations::callbacks","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel","activerecord","activerecord","activerecord","activerecord::aggregations","activerecord::associationpreload","activerecord","activerecord::associations","activerecord::associations","activerecord::associations","activerecord","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods::primarykey","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods::read","activerecord::attributemethods","activerecord::attributemethods::timezoneconversion","activerecord::attributemethods","activerecord::attributemethods::write","activerecord","activerecord::autosaveassociation","activerecord","activerecord","activerecord","activerecord::callbacks","activerecord","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::column","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::locking","activerecord::locking::optimistic","activerecord::locking","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::namedscope","activerecord::nestedattributes","activerecord::nestedattributes","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::querycache","activerecord","activerecord","activerecord","activerecord::railties","activerecord::railties::controllerruntime","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::reflection","activerecord::reflection","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::sessionstore","activerecord::sessionstore","activerecord","activerecord","activerecord","activerecord","activerecord::testfixtures","activerecord","activerecord","activerecord","activerecord::transactions","activerecord","activerecord","activerecord::validations","activerecord::validations","activerecord::validations","activerecord","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource::custommethods","activeresource::custommethods","activeresource","activeresource","activeresource","activeresource::formats","activeresource::formats","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activesupport","activesupport","activesupport","activesupport","activesupport","activesupport::bufferedlogger","activesupport","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache::strategy","activesupport::cache::strategy::localcache","activesupport::cache","activesupport","activesupport::callbacks","activesupport::callbacks","activesupport::callbacks","activesupport","activesupport","activesupport::configurable","activesupport::dependencies","activesupport::dependencies","activesupport","activesupport","activesupport","activesupport","activesupport::gzip","activesupport","activesupport","activesupport::inflector","activesupport","activesupport","activesupport::json","activesupport::json::backends","activesupport::json::backends","activesupport::json::backends","activesupport::json::encoding","activesupport::json::encoding","activesupport::json","activesupport","activesupport::logsubscriber","activesupport::logsubscriber::testhelper","activesupport","activesupport::memoizable","activesupport","activesupport::messageencryptor","activesupport","activesupport::messageverifier","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte::unicode","activesupport::multibyte::unicode","activesupport","activesupport::notifications","activesupport::notifications","activesupport::notifications","activesupport","activesupport","activesupport","activesupport::rescuable","activesupport","activesupport","activesupport","activesupport","activesupport","activesupport::testing","activesupport::testing","activesupport::testing","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing","activesupport::testing","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing","activesupport::testing","activesupport::testing","activesupport::testing::setupandteardown","activesupport::testing::setupandteardown","activesupport::testing::setupandteardown","activesupport","activesupport","activesupport","activesupport","activesupport::xmlmini_libxmlsax","activesupport","activesupport::xmlmini_nokogirisax","activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions.rb","railties\/lib\/rails\/commands\/plugin.rb","commands","commands","commands","commands","activesupport\/lib\/active_support\/core_ext\/date_time\/calculations.rb","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","erb","activesupport\/lib\/active_support\/core_ext\/enumerable.rb","railties\/lib\/rails\/generators\/erb\/controller\/controller_generator.rb","erb","erb::generators","erb::generators","erb::generators","activesupport\/lib\/active_support\/core_ext\/file\/path.rb","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","activerecord\/lib\/active_record\/fixtures.rb","activerecord\/lib\/active_record\/fixtures.rb","activesupport\/lib\/active_support\/core_ext\/float\/rounding.rb","activesupport\/lib\/active_support\/i18n_railtie.rb","i18n","i18n","activesupport\/lib\/active_support\/core_ext\/integer\/time.rb","activesupport\/lib\/active_support\/core_ext\/kernel\/debugger.rb","activesupport\/lib\/active_support\/core_ext\/load_error.rb","logger","actionpack\/lib\/action_dispatch\/http\/mime_type.rb","mime","mime","activesupport\/lib\/active_support\/core_ext\/name_error.rb","activesupport\/lib\/active_support\/core_ext\/object\/to_query.rb","railties\/lib\/rails\/commands\/plugin.rb","activesupport\/lib\/active_support\/core_ext\/process\/daemon.rb","railties\/lib\/rails\/info.rb","rails","rails","rails","rails::application","rails::application","rails::application::configurable","rails::application","rails::application","rails::application","rails","rails","rails::configuration","rails","rails","rails","rails","rails::engine","rails::engine::configurable","rails::engine","rails","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators::migration","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails::generators","rails","rails","rails","rails::initializable","rails::initializable","rails::initializable","rails","rails","rails::paths","rails::paths","rails::paths","rails","rails","rails::rack","rails::rack","rails::rack","rails","rails::railtie","rails::railtie::configurable","rails::railtie","rails","rails","rails::server","rails","railties\/lib\/rails\/commands\/plugin.rb","railties\/lib\/rails\/commands\/plugin.rb","railties\/lib\/rails\/source_annotation_extractor.rb","sourceannotationextractor","activesupport\/lib\/active_support\/testing\/deprecation.rb","test","test::unit","test::unit::collector","railties\/lib\/rails\/generators\/test_unit.rb","testunit","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","testunit::generators","activesupport\/lib\/active_support\/core_ext\/time\/calculations.rb","activerecord::spawnmethods","activemodel::massassignmentsecurity::permissionset","activesupport::duration","activesupport::multibyte::chars","activesupport::safebuffer","activesupport::timewithzone","rails::initializable::collection","activesupport::duration","activesupport::timewithzone","time","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::outputbuffer","activesupport::safebuffer","rails::paths::path","rails::paths::root","activerecord::connectionadapters::sqliteadapter::version","activesupport::multibyte::chars","activesupport::timewithzone","activesupport::timezone","datetime","time","actiondispatch::middlewarestack::middleware","actionview::filesystemresolver","activerecord::base","activerecord::reflection::macroreflection","activerecord::relation","activeresource::base","activeresource::request","activeresource::response","activesupport::duration","mime::type","activerecord::base","activesupport::multibyte::unicode::unicodedatabase","mime::type","time","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::timezone","mime::type","actiondispatch::request","actiondispatch::request","actiondispatch::http::headers","actiondispatch::session::abstractstore::optionshash","actiondispatch::session::abstractstore::sessionhash","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activemodel::errors","activerecord::base","activerecord::connectionadapters::tabledefinition","activeresource::formats","activeresource::response","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::testing::performance::metrics","activesupport::timezone","mime","actiondispatch::session::abstractstore::sessionhash","actionmailer::base::deprecatedheaderproxy","activemodel::errors","activerecord::base","activeresource::response","activesupport::hashwithindifferentaccess","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::testing::proxytestresult","rails::engine","rails::engine","activesupport::callbacks::callback","activesupport::xmlmini","time","time","time","time","actioncontroller::compatibility","abstractcontroller::layouts::classmethods","abstractcontroller::callbacks::classmethods","time","time","time","time","abstractcontroller::callbacks::classmethods","abstractcontroller::layouts","actioncontroller::compatibility","bigdecimal","activesupport::xmlmini","abstractcontroller::rendering","activerecord::attributemethods::read","actionview::testcase::behavior::locals","actioncontroller::urlfor","activesupport::testing::isolation","actioncontroller::caching::actions","actionview::lookupcontext::details","activesupport::callbacks::callback","abstractcontroller::layouts::classmethods","actioncontroller::renderers::all","actioncontroller::renderers::classmethods","abstractcontroller::base","activerecord::base","rails::railtie","actiondispatch::testrequest","actiondispatch::http::mimenegotiation","activerecord::nestedattributes::classmethods","activemodel::massassignmentsecurity::classmethods","actioncontroller::metal","actiondispatch::testrequest","abstractcontroller::layouts","abstractcontroller::layouts::classmethods::layoutconditions","abstractcontroller::base","abstractcontroller::base","actioncontroller::hideactions::classmethods","actioncontroller::urlfor::classmethods","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","actiondispatch::middlewarestack","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activemodel::massassignmentsecurity::classmethods","object","datetime","activesupport::multibyte::chars","activesupport::timewithzone","datetime","time","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","actioncontroller::renderers","activemodel::errors","activesupport::bufferedlogger","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::mysqladapter","activesupport::testing::proxytestresult","actionview::template::handlers::erubis","actionview::template::handlers::erubis","activesupport::backtracecleaner","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databasestatements","activemodel::observing::classmethods","activerecord::observer","activemodel::errors","activemodel::errors","actionview::template::handlers::erubis","actionview::template::handlers::erubis","rails::generators::resourcegenerator","rails::generators::controllergenerator","rails::generators::base","activesupport::backtracecleaner","rails::generators::actions","actionview::template::handlers::erubis","actionview::template::handlers::erubis","activerecord::connectionadapters::schemastatements","activemodel::deprecatederrormethods","activerecord::transactions","activerecord::connectionadapters::databasestatements","activesupport::timewithzone","datetime","time","actiondispatch::callbacks","rails::initializable::initializer","activerecord::transactions::classmethods","actioncontroller::dispatcher","rails::rack::logger","rails::railtie::configuration","activerecord::transactions::classmethods","activemodel::validations::callbacks::classmethods","activerecord::base","activesupport::duration","activesupport::timewithzone","datetime","time","actiondispatch::flash::flashhash","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actiondispatch::flash::flashhash","activemodel::attributemethods::classmethods","activerecord::findermethods","activeresource::base","activesupport::timezone","rails::application::railties","rails::generators::activemodel","rails::plugin","rails::paths::root","activerecord::migration","activerecord::relation","actioncontroller::responder","actioncontroller::responder","actiondispatch::integration::runner","actiondispatch::integrationtest","actiondispatch::integrationtest","object","rails::appbuilder","rails::application","actiondispatch::integrationtest","rails::generators::appgenerator","rails::generators::appgenerator","rails::railtie::configuration","rails::railtie::configuration","rails::generators::appgenerator","rails::generators::appgenerator","actionview::outputbuffer","activesupport::concern","actionview::outputbuffer","activerecord::railties::controllerruntime","abstractcontroller::viewpaths","abstractcontroller::viewpaths::classmethods","rails","rails::generators::actions","rails","rails::generators::namedbase","actiondispatch::routing::mapper::resources","activerecord::spawnmethods","activerecord::findermethods","rails::generators::appgenerator","activerecord::querymethods","activerecord::base","activerecord::base","rails::generators::testcase","actionview::helpers::scriptaculoushelper","activemodel::errors","activemodel::serializers::json","activesupport::json::encoding::encoder","activesupport::json::variable","activesupport::timewithzone","bigdecimal","enumerable","activesupport::testing::assertions","rails::generators::testcase","activesupport::testing::assertions","rails::generators::testcase","actiondispatch::assertions::domassertions","actiondispatch::assertions::domassertions","rails::generators::testcase","rails::generators::testcase","rails::generators::testcase","actiondispatch::assertions::routingassertions","actiondispatch::middlewarestack","rails::generators::testcase","rails::generators::testcase","rails::generators::testcase","activesupport::testing::assertions","rails::generators::testcase","rails::generators::testcase","rails::generators::testcase","actiondispatch::assertions::tagassertions","activesupport::testing::assertions","actiondispatch::assertions::routingassertions","actiondispatch::assertions::responseassertions","actiondispatch::assertions::responseassertions","actiondispatch::assertions::routingassertions","actiondispatch::assertions::selectorassertions","actiondispatch::assertions::selectorassertions","actiondispatch::assertions::selectorassertions","actiondispatch::assertions::selectorassertions","actiondispatch::assertions::tagassertions","actioncontroller::templateassertions","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::compatibility","actiondispatch::testprocess","actiondispatch::testresponse::deprecatedhelpers","activerecord::connectionadapters::schemastatements","activesupport::timezone","datetime","time","time","time","time","time","time","time","time","time","datetime","time","actionview::helpers::atomfeedhelper","file","activesupport::logsubscriber","actionmailer::base","activemodel::massassignmentsecurity::classmethods","activemodel::massassignmentsecurity::classmethods","activerecord::base","activerecord::base","activemodel::attributemethods","activemodel::validations::classmethods","activerecord::base","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::attributemethods::beforetypecast","activemodel::massassignmentsecurity::classmethods","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","actiondispatch::request","actionview::helpers::assettaghelper","activesupport::bufferedlogger","activesupport::bufferedlogger","actionview::helpers::texthelper","activesupport::autoload","activesupport::autoload","rails::paths::root","rails::engine::configuration","rails::engine::configuration","rails::paths::root","activesupport::autoload","activesupport::autoload","erb::generators::scaffoldgenerator","activerecord::calculations","activesupport::json","activesupport::json","activesupport::xmlmini","rails","activerecord::dynamicfindermatch","rails::generators::appgenerator","rails::generators::base","activesupport::securerandom","activerecord::base","rails::generators::base","rails::generators::base","activerecord::persistence","actiondispatch::callbacks","rails::initializable::initializer","rails::railtie::configuration","actioncontroller::dispatcher","rails::rack::logger","rails::railtie::configuration","actioncontroller::testing::classmethods","rails::railtie::configuration","activemodel::validations::callbacks::classmethods","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","datetime","time","time","time","time","time","activerecord::associations::classmethods","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activesupport::benchmarkable","activesupport::testing::performance::metrics::base","railsenvironment","activesupport::timewithzone","actiondispatch::testresponse::deprecatedhelpers","activerecord::connectionadapters::column","rails::initializable::initializer","activemodel::errors","object","actiondispatch::request","actiondispatch::response","actiondispatch::response","actiondispatch::response","kernel","activesupport::bufferedlogger","actioncontroller::middleware","actiondispatch::middlewarestack","actiondispatch::middlewarestack::middleware","activerecord::relation","activeresource::base","rails::generators::activemodel","rails::generators::appgenerator","activerecord::querymethods","actionview::helpers::prototypehelper","activerecord::associations::throughassociationscope","activerecord::predicatebuilder","activesupport::cache::memcachestore","rails::application","activerecord::associations::throughassociationscope","activerecord::associations::throughassociationscope","rails::generators::appgenerator","rails::application::configuration","rails::generators::appgenerator","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actioncontroller::caching","actionview::helpers::cachehelper","activerecord::connectionadapters::querycache","activerecord::querycache::classmethods","rails","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::read::classmethods","fixtures","fixtures","activerecord::base","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","actioncontroller::caching::configmethods","rails::application::configuration","actioncontroller::caching::configmethods","activerecord::attributemethods::read::classmethods","fixtures","actioncontroller::caching::actions::classmethods","actioncontroller::caching::pages::classmethods","actioncontroller::caching","activerecord::calculations","actioncontroller::metal","actioncontroller::middleware::actionmiddleware","actioncontroller::responder","actiondispatch::beststandardssupport","actiondispatch::callbacks","actiondispatch::cookies","actiondispatch::flash","actiondispatch::head","actiondispatch::paramsparser","actiondispatch::remoteip","actiondispatch::rescue","actiondispatch::session::abstractstore","actiondispatch::showexceptions","actiondispatch::static","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::template::handler","actionview::template::handlers::compilable::classmethods","activerecord::connectionadapters::connectionmanagement","activerecord::querycache","activesupport::logsubscriber","i18n::exceptionhandler","logger::simpleformatter","rails::application","rails::rack::debugger","rails::rack::logtailer","rails::rack::logger","activesupport::callbacks","activesupport::inflector","actiondispatch::routing::mapper::resources","rails::generators::actions","activesupport::multibyte::chars","actionview::helpers::capturehelper","rails::generators::testcase","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::taghelper","activesupport::multibyte::chars","activerecord::connectionadapters::table","datetime","time","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::table","activerecord::connectionadapters::schemastatements","activemodel::dirty","activemodel::dirty","activemodel::dirty","activerecord::autosaveassociation","activemodel::dirty","activesupport::xmlmini_nokogirisax::hashbuilder","activerecord::connectionadapters::mysqladapter","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::instancetagmethods::classmethods","actionview::helpers::formtaghelper","rails::generators::namedbase","activemodel::eachvalidator","activemodel::validations::exclusionvalidator","activemodel::validations::formatvalidator","activemodel::validations::inclusionvalidator","activemodel::validations::lengthvalidator","activemodel::validations::numericalityvalidator","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","datetime","kernel","activerecord::reflection::macroreflection","rails::generators::namedbase","activerecord::base","activesupport::inflector","activesupport::backtracecleaner","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activerecord::railties::controllerruntime","actiondispatch::session::abstractstore::sessionhash","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache::localstore","activesupport::descendantstracker","activesupport::inflector::inflections","activesupport::dependencies::reference","abstractcontroller::base","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionhandler","activesupport::bufferedlogger","actionview::resolver","abstractcontroller::helpers::classmethods","activerecord::connectionadapters::querycache","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionpool","actioncontroller::mimeresponds::classmethods","activerecord::connectionadapters::connectionpool","activerecord::transactions","actiondispatch::testresponse","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activeresource::base","activesupport::callbacks::callback","activerecord::base","activerecord::base","activesupport::bufferedlogger","activesupport::gzip::stream","actiondispatch::response","activerecord::connectionadapters::mysqladapter","actiondispatch::routing::mapper::resources","activeresource::base","activeresource::base","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","actionview::partials::partialrenderer","actionview::partials::partialrenderer","activesupport::logsubscriber","activerecord::base","rails::application::configuration","rails::application::configuration","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::findermethods","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activerecord::base","activerecord::connectionadapters::databaselimits","activerecord::base","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databasestatements","activesupport::timewithzone","datetime","time","datetime","time","actionview::template::handlers::builder","actionview::template::handlers::compilable","actionview::template::handlers::erb","actionview::template::handlers::rjs","activesupport::callbacks::callbackchain","activesupport::multibyte::chars","activesupport::multibyte::unicode","activerecord::aggregations::classmethods","activesupport::gzip","activesupport::cache::entry","activerecord::base","actionview::helpers::texthelper","activesupport::safebuffer","rails::paths::path","rails::paths::root","activerecord::associations::throughassociationscope","actionview::testcase::behavior","activesupport::configurable","activesupport::configurable::classmethods","rails::appbuilder","rails::application::configurable","rails::engine::configurable","rails::engine::configurable::classmethods","rails::plugin","rails::railtie::configurable","rails::railtie::configurable::classmethods","activesupport::configurable::classmethods","rails::appbuilder","rails","activerecord::base","activesupport::configurable::classmethods","rails::application","activerecord::base","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionpool","activerecord::base","activerecord::base","activerecord::connectionadapters::connectionpool","activerecord::migration","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::sqlbypass","activeresource::base","activeresource::base","activerecord::base","activerecord::base","rails::infocontroller","rails::railtie","activesupport::inflector","actiondispatch::routing::mapper::scoping","activerecord::associations::throughassociationscope","activerecord::associations::throughassociationscope","activerecord::associations::throughassociationscope","activerecord::findermethods","activerecord::associations::throughassociationscope","activerecord::findermethods","activerecord::associations::throughassociationscope","activerecord::associations::throughassociationscope","activerecord::findermethods","activerecord::findermethods","activerecord::associations::throughassociationscope","activerecord::associations::throughassociationscope","activesupport::multibyte::chars","activerecord::base","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actiondispatch::request","actiondispatch::http::mimenegotiation","actionview::helpers::taghelper","actionview::helpers::recordtaghelper","actioncontroller::metal","actiondispatch::http::mimenegotiation","actioncontroller::metal","actiondispatch::routing::mapper::scoping","object","actioncontroller::testcase::behavior::classmethods","actioncontroller::testcase::behavior::classmethods","rails::generators::resourcehelpers","rails::generators::resourcehelpers","rails::generators::resourcehelpers","rails::generators::resourcehelpers","rails::generators::resourcehelpers","actioncontroller::metal","actioncontroller::metal","abstractcontroller::base","abstractcontroller::base","actionview::base","actionview::testcase::testcontroller","rails::configuration::deprecated","rails::configuration::deprecated","activesupport::hashwithindifferentaccess","actionview::context","activesupport::hashwithindifferentaccess","actiondispatch::request","rails::configuration::deprecated","rails::configuration::deprecated","actiondispatch::integration::session","actiondispatch::response","actiondispatch::testprocess","actiondispatch::testrequest","rails::generators::stylesheetsgenerator","erb::generators::controllergenerator","erb::generators::scaffoldgenerator","activemodel::errors","activerecord::calculations","activerecord::base","activemodel::observing::classmethods","actionview::template","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::relation","activeresource::base","activeresource::base","activesupport::cache::entry","activesupport::timezone","activerecord::relation","activerecord::validations::classmethods","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::controllergenerator","rails::generators::scaffoldcontrollergenerator","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","rails::generators::appgenerator","rails::generators::appgenerator","testunit::generators::modelgenerator","fixtures","object","rails::generators::testcase","rails::generators::generatorgenerator","rails::generators::helpergenerator","testunit::generators::helpergenerator","rails::generators::appgenerator","rails::generators::plugingenerator","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::appgenerator","activerecord::reflection::classmethods","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::plugingenerator","erb::generators::scaffoldgenerator","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","rails::generators::appgenerator","activerecord::connectionadapters::schemastatements","rails::generators::plugingenerator","testunit::generators::modelgenerator","rails::generators::appgenerator","testunit::generators::controllergenerator","testunit::generators::integrationgenerator","testunit::generators::mailergenerator","testunit::generators::observergenerator","testunit::generators::performancegenerator","testunit::generators::plugingenerator","testunit::generators::scaffoldgenerator","rails::generators::appgenerator","rails::generators::appgenerator","activerecord::querymethods","activerecord::dynamicfindermatch","actionview::helpers::csrfhelper","actiondispatch::assertions::selectorassertions","datetime","time","actionview::helpers::texthelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::urlhelper","activerecord::connectionadapters::abstractadapter","activerecord::querymethods","activeresource::custommethods::classmethods","actionview::helpers::texthelper","process","activesupport::inflector","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::session","activerecord::sessionstore::session","rails::application::configuration","rails::configuration::deprecated","rails::configuration::deprecated","rails::appbuilder","actionview::helpers::datehelper","actionview::helpers::formbuilder","actionview::helpers::datehelper","actionview::helpers::formbuilder","time","rails::appbuilder","actionview::helpers::debughelper","activemodel::massassignmentsecurity::sanitizer","actionview::base","kernel","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::json::backends::jsongem","activesupport::json::backends::yajl","activesupport::json::backends::yaml","activesupport::base64","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::digest","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::gzip","activerecord::persistence","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activerecord::persistence","activerecord::countercache","activerecord::connectionadapters::abstractadapter","activesupport::messageencryptor","activesupport::messageencryptor","actionmailer::base","activesupport::hashwithindifferentaccess","rails::generators::generatedattribute","railsenvironment","railsenvironment","actioncontroller::responder","rails::generators::base","rails::generators::base","actionview::template::handlers::rjs","datetime","rails::application","rails::server","activerecord::connectionadapters::sqliteadapter","actioncontroller::implicitrender","actioncontroller::responder","activerecord::base","activerecord::connectionadapters::databasestatements","rails::generators::base","activerecord::base","actiondispatch::integration::session","actiondispatch::routing::mapper::base","actionmailer::base::deprecatedurloptions","actiondispatch::routing::mapper::base","actionmailer::base::deprecatedurloptions","rails::generators::base","actiondispatch::routing::mapper::scoping","activerecord::schema","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::observer","activesupport::callbacks::classmethods","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::timezoneconversion::classmethods","activerecord::attributemethods::timezoneconversion::classmethods","activerecord::attributemethods::write::classmethods","activemodel::callbacks","activerecord::attributemethods::classmethods","rails::generators::appgenerator","rails::generators::appgenerator","rails::generators::appgenerator","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::routing::mapper::httphelpers","actiondispatch::session::abstractstore::sessionhash","activerecord::connectionadapters::databasestatements","activerecord::persistence","activerecord::relation","activeresource::base","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","activesupport::cache::store","activesupport::hashwithindifferentaccess","actiondispatch::request","activerecord::relation","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","fixtures","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activerecord::connectionadapters::databasestatements","actiondispatch::integration::requesthelpers","activesupport::inflector","activemodel::massassignmentsecurity::blacklist","activemodel::massassignmentsecurity::whitelist","rails::deprecatedconstant","actionmailer::base::deprecatedurloptions","rails::generators::base","activesupport::descendantstracker","activesupport::descendantstracker","activerecord::base","activesupport::testing::declarative","rails::generators::testcase","actiondispatch::session::abstractstore::sessionhash","activerecord::persistence","activerecord::relation","activerecord::sessionstore::sqlbypass","activeresource::base","rails::generators::activemodel","activerecord::relation","activerecord::persistence","abstractcontroller::viewpaths","actioncontroller::testcase::behavior::classmethods","actionview::testcase::behavior::classmethods","commands::install","rails::generators::appgenerator","activesupport::descendantstracker","activesupport::descendantstracker","activesupport::multibyte::unicode::unicodedatabase","activerecord::connectionadapters::querycache","activerecord::connectionadapters::abstractadapter","actiondispatch::flash::flashhash","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::metal","actioncontroller::rackdelegation","actioncontroller::responder","sourceannotationextractor","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::schemastatements","actionview::helpers::recordtaghelper","rails::appbuilder","actioncontroller::recordidentifier","actioncontroller::recordidentifier","actiondispatch::http::url","activesupport::multibyte::chars","recursivehttpfetcher","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::schemastatements","activesupport::timewithzone","activerecord::base","activeresource::base","activesupport::hashwithindifferentaccess","object","actiondispatch::response","activemodel::errors","rails::paths::path","activemodel::deprecatederrormethods","enumerable","activesupport::autoload","activesupport::autoload","activerecord::querymethods","rails::paths::root","rails::engine","rails::railtie","rails::engine::configuration","activerecord::relation","activeresource::base","activeresource::base","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formbuilder","activemodel::errors","activerecord::relation","rails::generators::appgenerator","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::sqliteadapter","actioncontroller::responder","actioncontroller::responder","activerecord::connectionadapters::mysqladapter","kernel","activeresource::base","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::json","activesupport::json::encoding::encoder","activesupport::base64","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","activesupport::json::variable","activesupport::timewithzone","bigdecimal","activerecord::connectionadapters::postgresqladapter","rails::application::configuration","activesupport::messageencryptor","activesupport::messageencryptor","activesupport::callbacks::callback","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","datetime","time","time","time","time","time","rails::application::railties","actionview::helpers::atomfeedhelper::atomfeedbuilder","sourceannotationextractor","actiondispatch::testrequest","rails","rails","rails::application","actiondispatch::http::filterparameters","activesupport::testing::performance::benchmarker","rails::generators::actions","commands::plugin","actionview::filesystemresolver","activerecord::base","activeresource::base","activesupport::timewithzone","actionview::template::handlers::erb","activesupport::xmlmini_nokogirisax::hashbuilder","actiondispatch::testresponse","actionview::helpers::activemodelinstancetag","actionview::helpers::activemodelinstancetag","activemodel::validations","activeresource::validations","rails::generators::activemodel","activesupport::json::encoding::encoder","activerecord::connectionadapters::postgresqladapter","actionview::helpers::javascripthelper","actionview::helpers::taghelper","activerecord::base","activerecord::connectionadapters::connectionhandler","actiondispatch::http::cache::response","actiondispatch::http::cache::response","actiondispatch::http::cache::response","actiondispatch::http::cache::request","activerecord::spawnmethods","actionview::helpers::texthelper","enumerable","rails::scriptrailsloader","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::fileupdatechecker","activesupport::cache::store","actiondispatch::session::abstractstore::sessionhash","actionview::lookupcontext::viewpaths","activerecord::findermethods","activeresource::base","activeresource::base","activesupport::cache","activerecord::base","actioncontroller::httpauthentication::digest","actioncontroller::caching::actions","actioncontroller::caching::fragments","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","activesupport::cache::entry","activesupport::cache::entry","activesupport::cache::entry","actioncontroller::conditionalget","actioncontroller::conditionalget","activemodel::callbacks","activesupport::concern","activesupport::testing::declarative","activerecord::querymethods","activeresource::formats::jsonformat","activeresource::formats::xmlformat","railsenvironment","railsenvironment","rails::generators::actions","sourceannotationextractor","activerecord::connectionadapters::column","activesupport::hashwithindifferentaccess","activerecord::connectionadapters::column","activerecord::connectionadapters::column","rails::generators","activerecord::connectionadapters::column","activerecord::connectionadapters::column","actionview::helpers::assettaghelper","activesupport::cache::store","activesupport::hashwithindifferentaccess","recursivehttpfetcher","recursivehttpfetcher","actionview::helpers::formtaghelper","rails::generators::generatedattribute","actionview::helpers::formbuilder","actionview::helpers::formhelper","rails::generators::appgenerator","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::generators::namedbase","activesupport::multibyte::unicode::unicodedatabase","actiondispatch::http::parameterfilter","rails::paths::root","actiondispatch::http::filterparameters","activemodel::validations::numericalityvalidator","actiondispatch::http::filterparameters","actiondispatch::http::filterparameters","actiondispatch::http::filterparameters","actionview::lookupcontext::viewpaths","activerecord::findermethods","activeresource::base","plugin","rails::generators::activemodel","railsenvironment","sourceannotationextractor","actionview::lookupcontext::viewpaths","actionview::resolver","actiondispatch::assertions::tagassertions","activerecord::findermethods","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::base","rails::dbconsole","activerecord::findermethods","sourceannotationextractor","activerecord::findermethods","actionview::layouts","activerecord::findermethods","activerecord::findermethods","rails::engine","activerecord::findermethods","actiondispatch::assertions::tagassertions","actionview::lookupcontext::viewpaths","activesupport::timezone","activerecord::findermethods","activerecord::findermethods","activerecord::dynamicfindermatch","rails::generators::appgenerator","activerecord::findermethods","activeresource::base","actiondispatch::testprocess","fixtures","activerecord::testfixtures::classmethods","actiondispatch::request","actiondispatch::testprocess","actiondispatch::testresponse::deprecatedhelpers","activesupport::bufferedlogger","activesupport::logsubscriber::testhelper::mocklogger","activesupport::logsubscriber","activesupport::memoizable::instancemethods","activesupport::logsubscriber","actiondispatch::integration::requesthelpers","activesupport::testcase","activesupport::inflector","actiondispatch::request","activesupport::testing::isolation","actioncontroller::requestforgeryprotection","actioncontroller::requestforgeryprotection","actiondispatch::request","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actiondispatch::http::mimenegotiation","activeresource::base","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::time","erb::generators::mailergenerator","actiondispatch::http::mimenegotiation","activeresource::base","actiondispatch::http::mimenegotiation","actionview::lookupcontext::details","activesupport::timewithzone","activesupport::timezone","datetime","time","actioncontroller::caching::fragments","actioncontroller::caching::fragments","rails::info","rails::configuration::deprecated","rails::info","rails::configuration::deprecated","activerecord::base","activesupport::timewithzone","rails::generators::actions","activesupport::memoizable::instancemethods","actiondispatch::http::cache::request","actioncontroller::conditionalget","activerecord::querymethods","activeresource::errors","activemodel::serializers::json","activeresource::errors","activesupport::duration","actionview::logsubscriber","actiondispatch::testresponse","activemodel::serializers::xml","activeresource::errors","activerecord::base","activemodel::errors","activesupport::testing::performance","actiondispatch::request","activesupport::timewithzone","datetime","time","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::multibyte::unicode","rails::engine::configuration","rails::generators::actions","rails::generators::appgenerator","rails::appbuilder","activesupport::messageverifier","rails::generators::actions","activemodel::errors","abstractcontroller::collector","rails::generators::testcase","rails::generators::generatorgenerator","rails::generators::base","rails::railtie","rails::railtie::configuration","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::routing::mapper::httphelpers","activemodel::errors","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","activesupport::dependencies::reference","actiondispatch::request","actiondispatch::integration::requesthelpers","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","datetime","rails::generators::actions","plugin","rails::appbuilder","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","activerecord::querymethods","enumerable","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","erb::util","actioncontroller::httpauthentication::digest","actioncontroller::requestforgeryprotection","activesupport::rescuable","actionview::template::handlers::erb","activerecord::associations::classmethods","activerecord::base","activerecord::connectionadapters::column","actioncontroller::responder","actioncontroller::responder","actiondispatch::testresponse::deprecatedhelpers","actiondispatch::testresponse::deprecatedhelpers","actiondispatch::testresponse::deprecatedhelpers","actiondispatch::session::abstractstore::sessionhash","activerecord::associations::classmethods","activerecord::associations::classmethods","actiondispatch::testresponse::deprecatedhelpers","actiondispatch::testresponse::deprecatedhelpers","activerecord::base","activeresource::base","activesupport::timewithzone","activerecord::querymethods","actioncontroller::head","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","activeresource::connection","actiondispatch::request","actiondispatch::request","actionmailer::base","actionmailer::base::deprecatedheaderproxy","activeresource::base","actioncontroller::testing","rails::generators","abstractcontroller::helpers::classmethods","object","actioncontroller::helpers::classmethods","actionview::testcase::behavior::classmethods","abstractcontroller::helpers::classmethods","actionview::testcase::behavior::classmethods","actioncontroller::helpers::classmethods","actioncontroller::helpers::classmethods","actioncontroller::helpers::classmethods","activesupport::securerandom","abstractcontroller::base","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::generators","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::hideactions::classmethods","rails::generators","actionview::helpers::texthelper","rails::generators::base","actiondispatch::http::url","actiondispatch::integration::session","actiondispatch::integration::session","actiondispatch::testrequest","actiondispatch::http::url","mime::type","actiondispatch::assertions::tagassertions","erb::util","activesupport::safebuffer","activesupport::safebuffer","fixnum","object","activesupport::timewithzone","actiondispatch::integration::session","actiondispatch::integration::session","activemodel::name","activesupport::inflector::inflections","activemodel::translation","activemodel::translation","activerecord::connectionadapters::column","rails::generators::generatedattribute","rails::generators::namedbase","activesupport::inflector","activemodel::translation","rails::generators::namedbase","activeresource::base","activeresource::base","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","activeresource::base","fixtures","activerecord::connectionadapters::abstractadapter","actiondispatch::http::cache::request","actiondispatch::testrequest","actiondispatch::http::cache::request","actiondispatch::testrequest","actionview::helpers::assettaghelper","actionview::helpers::formtaghelper","actionview::helpers::assettaghelper","rails::appbuilder","datetime","time","activesupport::multibyte::unicode","activerecord::connectionadapters::databaselimits","rails::scriptrailsloader","rails::scriptrailsloader","activesupport::timewithzone","datetime","time","activemodel::massassignmentsecurity::permissionset","activesupport::multibyte::chars","test::unit::collector::objectspace","i18n::railtie","actioncontroller::testcase::raiseactionexceptions","actioncontroller::urlwriter","actionview::template::handlers::compilable","activerecord::connectionadapters::querycache","activesupport::concern","activesupport::memoizable::instancemethods","activesupport::testing::isolation","activesupport::testing::performance","rails::application::configurable","rails::engine::configurable","rails::initializable","rails::railtie::configurable","activerecord::querymethods","activerecord::persistence","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activerecord::persistence","activerecord::countercache","activerecord::connectionadapters::abstractadapter","actioncontroller::middleware","activerecord::connectionadapters::table","activesupport::multibyte::chars","enumerable","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","rails::generators::namedbase","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databaselimits","activesupport::inflector","plugin","activerecord::base","abstractcontroller::helpers::classmethods","abstractcontroller::layouts::classmethods","actioncontroller::base","actioncontroller::hideactions::classmethods","actioncontroller::metal","activemodel::observing::classmethods","activemodel::validations::classmethods","activesupport::descendantstracker","rails::application","rails::application::configurable::classmethods","rails::engine","rails::engine::configurable::classmethods","rails::plugin","rails::railtie","rails::railtie::configurable::classmethods","i18n::railtie","activerecord::base","rails","rails::application","rails::application","activerecord::base","activerecord::relation","rails::application","i18n::railtie","activerecord::connectionadapters::schemastatements","rails::application","actioncontroller::compatibility","rails","rails","rails::generators::actions","rails::initializable::classmethods","rails::application","rails::initializable","rails::initializable::classmethods","rails::initializable::classmethods","rails::initializable::classmethods","actiondispatch::middlewarestack","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::multibyte::chars","actiondispatch::middlewarestack","actiondispatch::middlewarestack","activerecord::connectionadapters::databasestatements","fixtures","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::databasestatements","actiondispatch::middlewarestack::middleware","actiondispatch::session::abstractstore::sessionhash","actionview::template","activerecord::base","activerecord::base","activerecord::relation","activesupport::timewithzone","datetime","plugin","railsenvironment","plugin","activesupport::inflector::inflections","rails::application","activemodel::attributemethods::classmethods","activerecord::attributemethods::classmethods","object","fixtures","fixtures","activemodel::observing::classmethods","activerecord::dynamicfindermatch","activesupport::cache::store","activesupport::notifications","activesupport::notifications::instrumenter","activesupport::cache::store","actioncontroller::caching::fragments","activesupport::notifications","abstractcontroller::base","activemodel::deprecatederrormethods","activemodel::validations","rails::generators","actiondispatch::request","activesupport::inflector::inflections","activesupport::timewithzone","loaderror","activesupport::timewithzone","activesupport::timewithzone","erb::util","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::javascripthelper","rails::appbuilder","activerecord::querymethods","activerecord::connectionadapters::databaselimits","erb::util","actiondispatch::flash::flashhash","actiondispatch::request","activesupport::hashwithindifferentaccess","activesupport::cache::store","activemodel::validator","activemodel::validator","activesupport::timewithzone","actiondispatch::middlewarestack::middleware","activerecord::connectionadapters::column","activerecord::reflection::macroreflection","activeresource::base","activeresource::base","abstractcontroller::translation","actionview::helpers::translationhelper","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activerecord::findermethods","activeresource::base","actiondispatch::http::cache::response","actiondispatch::http::cache::response","actiondispatch::http::cache::response","abstractcontroller::layouts::classmethods","actiondispatch::testresponse::deprecatedhelpers","rails::appbuilder","rails::generators::actions","activerecord::querymethods","activesupport::multibyte::chars","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","recursivehttpfetcher","activesupport::notifications::fanout","activesupport::notifications::fanout","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::multibyte::chars","activeresource::base","activesupport::multibyte::unicode::unicodedatabase","activeresource::base","rails::application","rails::railtie","rails::plugin","rails::application","rails::railtie","rails::engine::configuration","rails::paths::root","rails::engine::configuration","rails::application","rails::engine","rails::plugin","rails::railtie","actiondispatch::session::abstractstore::sessionhash","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activesupport::timezone","actiondispatch::request","datetime","time","activesupport::timezone","actionview::lookupcontext::details","actionview::lookupcontext::details","abstractcontroller::translation","actionview::helpers::translationhelper","actionview::testcase::behavior","activesupport::timewithzone","actioncontroller::metal","actiondispatch::response","actioncontroller::metal","actiondispatch::response","activerecord::querymethods","activerecord::locking::pessimistic","activerecord::locking::optimistic::classmethods","activerecord::locking::optimistic::classmethods","activerecord::connectionadapters::abstractadapter","rails::appbuilder","rails::generators::actions","rails::application::configuration","rails::configuration::deprecated","rails::server","rails::configuration::deprecated","activerecord::railties::controllerruntime::classmethods","rails::railtie","activesupport::logsubscriber","activesupport::logsubscriber::testhelper::mocklogger","actioncontroller::logsubscriber","actionview::logsubscriber","activerecord::base","activerecord::logsubscriber","activeresource::base","activeresource::logsubscriber","activesupport::logsubscriber","rails","rails","mime::type","activemodel::translation","mime::type","abstractcontroller::viewpaths","activesupport::cache","recursivehttpfetcher","activesupport::multibyte::chars","actionmailer::base","actionview::helpers::urlhelper","actionmailer::base","activerecord::relation","enumerable","activerecord::autosaveassociation","activerecord::autosaveassociation","activesupport::timewithzone","activesupport::timewithzone","activemodel::massassignmentsecurity","actiondispatch::routing::mapper::base","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::shorthand","activemodel::attributemethods::classmethods::attributemethodmatcher","activerecord::dynamicfindermatch","activerecord::dynamicscopematch","activesupport::callbacks::callback","activerecord::calculations","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::processtime","activesupport::testing::performance::metrics::time","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::base","actiondispatch::request","actiondispatch::routing::mapper::resources","activesupport::memoizable","activesupport::memoizable::instancemethods","activesupport::memoizable","activerecord::spawnmethods","activesupport::hashwithindifferentaccess","actiondispatch::response","actiondispatch::request","abstractcontroller::base","activerecord::callbacks::classmethods","actioncontroller::compatibility","actioncontroller::implicitrender","abstractcontroller::collector","actiondispatch::assertions::routingassertions","actiondispatch::integration::runner","actionmailer::base::deprecatedheaderproxy","activemodel::attributemethods","activerecord::connectionadapters::tabledefinition","activerecord::migration","activerecord::relation","activesupport::logsubscriber::testhelper::mocklogger","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::stringinquirer","activesupport::testing::proxytestresult","activesupport::timewithzone","rails::application","rails::deprecatedconstant","rails::paths::pathparent","activemodel::attributemethods::classmethods::attributemethodmatcher","activemodel::attributemethods::classmethods::attributemethodmatcher","actionview::helpers::prototypehelper","actiondispatch::request","activerecord::connectionadapters::column","actioncontroller::metal","activesupport::cache::strategy::localcache","rails::server","datetime","time","activerecord::migration","rails::generators::migration","activerecord::schema","actionview::template","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activerecord::calculations","time","time","time","actiondispatch::testresponse","nameerror","nameerror","actionview::helpers::formbuilder","activemodel::naming","time","integer","integer","time","time","actiondispatch::routing::mapper::base","integer","activesupport::cache::store","rails::generators::appgenerator","activesupport::callbacks::callback","activesupport::testing::performance::metrics::base","activesupport::timewithzone","actiondispatch::routing::mapper::resources","activerecord::namedscope::classmethods","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::scoping","rails::generators::base","activerecord::connectionadapters::schemastatements","actioncontroller::responder","actioncontroller::responder","actiondispatch::http::mimenegotiation","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","abstractcontroller::doublerendererror","abstractcontroller::layouts","abstractcontroller::rendering","actioncontroller::caching::actions::actioncachepath","actioncontroller::dispatcher","actioncontroller::metal","actioncontroller::middleware","actioncontroller::middleware","actioncontroller::middleware::actionmiddleware","actioncontroller::responder","actioncontroller::urlrewriter","actiondispatch::beststandardssupport","actiondispatch::callbacks","actiondispatch::cookies","actiondispatch::flash","actiondispatch::head","actiondispatch::http::cache::response","actiondispatch::http::headers","actiondispatch::http::parameterfilter","actiondispatch::http::uploadedfile","actiondispatch::integration::session","actiondispatch::middlewarestack","actiondispatch::middlewarestack::middleware","actiondispatch::paramsparser","actiondispatch::remoteip","actiondispatch::remoteip::remoteipgetter","actiondispatch::request","actiondispatch::rescue","actiondispatch::response::setup","actiondispatch::routing::mapper::resources","actiondispatch::session::abstractstore","actiondispatch::session::abstractstore::optionshash","actiondispatch::session::abstractstore::sessionhash","actiondispatch::session::cookiestore","actiondispatch::session::memcachestore","actiondispatch::showexceptions","actiondispatch::static","actiondispatch::testrequest","actiondispatch::testrequest","actionmailer::base","actionmailer::base::deprecatedheaderproxy","actionview::filesystemresolver","actionview::fixtureresolver","actionview::helpers::atomfeedhelper::atombuilder","actionview::helpers::atomfeedhelper::atomfeedbuilder","actionview::helpers::formbuilder","actionview::helpers::numberhelper::invalidnumbererror","actionview::outputbuffer","actionview::partials::partialrenderer","actionview::resolver","actionview::template","actionview::testcase::behavior::classmethods","actionview::testcase::testcontroller","activemodel::attributemethods::classmethods::attributemethodmatcher","activemodel::blockvalidator","activemodel::eachvalidator","activemodel::errors","activemodel::name","activemodel::observer","activemodel::validations::acceptancevalidator","activemodel::validations::lengthvalidator","activemodel::validations::numericalityvalidator","activemodel::validator","activerecord::attributeassignmenterror","activerecord::base","activerecord::connectionadapters::column","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionmanagement","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::sqliteadapter::version","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::dynamicfindermatch","activerecord::dynamicscopematch","activerecord::logsubscriber","activerecord::multiparameterassignmenterrors","activerecord::observer","activerecord::predicatebuilder","activerecord::querycache","activerecord::recordinvalid","activerecord::reflection::macroreflection","activerecord::relation","activerecord::relation","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::validations::uniquenessvalidator","activerecord::wrappeddatabaseexception","activeresource::base","activeresource::connection","activeresource::request","activeresource::response","activeresource::sslerror","activeresource::timeouterror","activesupport::backtracecleaner","activesupport::bufferedlogger","activesupport::cache::compressedmemcachestore","activesupport::cache::entry","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache::localstore","activesupport::cache::synchronizedmemorystore","activesupport::callbacks::callback","activesupport::callbacks::callbackchain","activesupport::dependencies::reference","activesupport::dependencies::watchstack","activesupport::fileupdatechecker","activesupport::gzip::stream","activesupport::hashwithindifferentaccess","activesupport::inflector::inflections","activesupport::inheritableoptions","activesupport::json::encoding::encoder","activesupport::logsubscriber::testhelper::mocklogger","activesupport::messageencryptor","activesupport::messageverifier","activesupport::multibyte::chars","activesupport::multibyte::unicode::unicodedatabase","activesupport::notifications::event","activesupport::notifications::fanout","activesupport::notifications::instrumenter","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activesupport::testing::proxytestresult","activesupport::testing::remoteerror","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","commands::info","commands::install","commands::plugin","commands::remove","fixtures","mime::type","plugin","rails::actionmethods","rails::application::configuration","rails::application::railties","rails::backtracecleaner","rails::console","rails::dbconsole","rails::deprecatedconstant","rails::engine::configuration","rails::generators::activemodel","rails::generators::appgenerator","rails::generators::generatedattribute","rails::initializable::initializer","rails::paths::path","rails::paths::root","rails::plugin","rails::rack::debugger","rails::rack::logtailer","rails::rack::logger","rails::railtie::configuration","rails::server","railsenvironment","recursivehttpfetcher","sourceannotationextractor","activeresource::base","activesupport::dependencies::watchstack","activerecord::connectionadapters::column","activeresource::base","activeresource::base","activesupport::hashwithindifferentaccess","activerecord::persistence","activeresource::base","object","activerecord::connectionadapters::column","activesupport::callbacks::callback","time","time","time","rails::generators","actioncontroller::httpauthentication::digest","activesupport::multibyte::chars","activesupport::multibyte::unicode","actiondispatch::routing::mapper","activesupport::callbacks::callback","actiondispatch::routing::mapper","actiondispatch::http::cache::request","actiondispatch::flash::flashhash","actiondispatch::flash::flashhash","activesupport::notifications","activemodel::observing::classmethods","actiondispatch::flash::flashhash","activesupport::timezone","activerecord::connectionadapters::column","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::activemodelinstancetag","activemodel::observer","activemodel::observer","activemodel::observer","activerecord::observer","activemodel::observing::classmethods","activemodel::observing::classmethods","activerecord::logsubscriber","activerecord::querymethods","activemodel::deprecatederrormethods","activemodel::deprecatederrormethods","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activerecord::spawnmethods","actioncontroller::httpauthentication::digest","actiondispatch::http::uploadedfile","actiondispatch::integration::runner","activerecord::connectionadapters::abstractadapter","rails::server","actionview::helpers::formoptionshelper","commands::info","commands::install","commands::plugin","commands::remove","activesupport::json::encoding::encoder","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activerecord::connectionadapters::schemastatements","activesupport::multibyte::chars","activerecord::querymethods","activesupport::inflector","integer","activeresource::custommethods","rails::generators::resourcehelpers","rails::generators::resourcehelpers","activesupport::testing::performance::benchmarker","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","actiondispatch::http::filterparameters","actiondispatch::http::filterparameters","activesupport::inflector","actiondispatch::http::parameters","actioncontroller::metal","actiondispatch::http::parameters","actioncontroller::metal","activesupport::notifications::event","activesupport::timezone","activesupport::xmlmini_libxmlsax","activesupport::xmlmini_nokogirisax","mime::type","commands::info","commands::install","commands::plugin","commands::plugin","commands::remove","rails::server::options","activemodel::validations::numericalityvalidator","activemodel::validations::numericalityvalidator","activeresource::base","activeresource::base","activeresource::connection","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activesupport::timewithzone","datetime","time","actiondispatch::http::uploadedfile","loaderror","actiondispatch::testrequest","actiondispatch::routing::mapper::resources","actiondispatch::http::parameters","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","rails::application::configuration","rails::engine::configuration","rails::paths::path","activesupport::testing::pending","activerecord::validations","actioncontroller::compatibility","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","activerecord::persistence","activeresource::base","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::generators::actions","rails::generators::plugingenerator","rails::application::railties","activemodel::naming","activesupport::inflector::inflections","rails::generators::namedbase","rails::generators::namedbase","rails::generators::namedbase","actionview::helpers::texthelper","activesupport::inflector","activerecord::base","rails::generators::namedbase","actiondispatch::routing::polymorphicroutes","actiondispatch::routing::polymorphicroutes","recursivehttpfetcher","activesupport::dependencies::watchstack","actiondispatch::http::url","actiondispatch::testrequest","actiondispatch::http::url","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::routing::mapper::httphelpers","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","actiondispatch::request","actiondispatch::integration::requesthelpers","activerecord::connectionadapters::postgresqladapter","float","activerecord::connectionadapters::abstractadapter","activeresource::base","activeresource::base","actiondispatch::routing::mapper::resources","activeresource::base","activerecord::querymethods","activerecord::associationpreload::classmethods","actiondispatch::response","actioncontroller::testcase::behavior::classmethods","rails::generators::testcase","abstractcontroller::viewpaths","abstractcontroller::viewpaths::classmethods","object","object","time","time","activemodel::dirty","activerecord::attributemethods::primarykey::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::tabledefinition","activerecord::relation","activerecord::attributemethods::primarykey::classmethods","activerecord::base","activesupport::memoizable::instancemethods","abstractcontroller::base","actioncontroller::middleware","actioncontroller::templateassertions","actioncontroller::testcase::behavior","abstractcontroller::callbacks","actioncontroller::instrumentation","actioncontroller::logsubscriber","actionview::base","actioncontroller::testing","activesupport::testing::performance::metrics::base","rails::infocontroller","rails::info","actioncontroller::requestforgeryprotection","actioncontroller::requestforgeryprotection::classmethods","activemodel::massassignmentsecurity::classmethods","actiondispatch::http::url","activeresource::base","activeresource::base","activeresource::connection","activesupport::cache::memorystore","activesupport::cache::memorystore","rails::appbuilder","rails","rails","activesupport::notifications::fanout","rails::paths::path","rails::paths::root","recursivehttpfetcher","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::routing::mapper::httphelpers","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","actiondispatch::request","actiondispatch::integration::requesthelpers","actionview::nullresolver","activerecord::attributemethods::query","actiondispatch::request","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","activerecord::connectionadapters::quoting","activerecord::connectionadapters::quoting","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::quoting","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::quoting","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","activerecord::locking::optimistic::classmethods","activerecord::attributemethods::primarykey::classmethods","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::instancetagmethods::classmethods","actionview::helpers::formtaghelper","rails::railtie","rails::application","rails::application::railties","rails::generators::actions","rails::railtie","rails::appbuilder","rails::generators::actions","activesupport::securerandom","activesupport::securerandom","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::rawoutputhelper","activerecord::connectionadapters::abstractadapter","actiondispatch::http::url","actiondispatch::request","activesupport::cache::entry","actiondispatch::http::uploadedfile","activesupport::cache::store","activerecord::attributemethods::read","activerecord::attributemethods::beforetypecast","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","actioncontroller::caching::fragments","activesupport::cache::memcachestore","activesupport::cache::store","datetime","rails::appbuilder","rails::generators::actions","activerecord::querymethods","activerecord::base","activerecord::base","activerecord::base","actionmailer::base","activesupport::callbacks::callback","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::testing::performance::benchmarker","activesupport::testing::performance::profiler","actioncontroller::recordidentifier","actioncontroller::testresponse","actiondispatch::routing::mapper::httphelpers","actiondispatch::testresponse","actioncontroller::flash","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::redirecting","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actiondispatch::testprocess","actiondispatch::response","actiondispatch::testresponse::deprecatedhelpers","actiondispatch::testresponse::deprecatedhelpers","mime::type","rails::generators::generatedattribute","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","mime::type","mime::type","actionmailer::base","actionmailer::base","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionmailer::base","actionmailer::base","actionview::helpers::assettaghelper","activesupport::hashwithindifferentaccess","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::autosaveassociation","activerecord::persistence","activerecord::relation","activeresource::base","object","rails::application","i18n::railtie","activerecord::transactions","actiondispatch::testrequest","actiondispatch::remoteip::remoteipgetter","actionview::helpers::prototypehelper","actiondispatch::request","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::table","activerecord::connectionadapters::table","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::connectionadapters::connectionhandler","activesupport::backtracecleaner","rails::generators::base","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activemodel::massassignmentsecurity::permissionset","activerecord::connectionadapters::table","activesupport::backtracecleaner","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activerecord::connectionadapters::table","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::schemastatements","activesupport::xmlmini","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::schemastatements","abstractcontroller::rendering","actioncontroller::instrumentation","actionview::partials::partialrenderer","actionview::rendering","actionview::template","actionview::template::handler","actionview::testcase::behavior","actionview::logsubscriber","actionview::partials::partialrenderer","actionview::logsubscriber","actionview::partials::partialrenderer","actionview::logsubscriber","abstractcontroller::rendering","actioncontroller::compatibility","actioncontroller::renderers","abstractcontroller::rendering","actiondispatch::testresponse::deprecatedhelpers","activerecord::querymethods","activesupport::multibyte::unicode","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::associations::hasonethroughassociation","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activeresource::logsubscriber","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","actiondispatch::request","actiondispatch::testrequest","actiondispatch::request","actiondispatch::request","actiondispatch::http::url","actiondispatch::testrequest","actiondispatch::integration::requesthelpers","activeresource::connection","activeresource::httpmock","activerecord::testfixtures::classmethods","kernel","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::compatibility","actioncontroller::testcase::behavior","actioncontroller::testcase::raiseactionexceptions","actiondispatch::rescue","activesupport::rescuable::classmethods","actioncontroller::rescue","activesupport::rescuable","activerecord::relation","actiondispatch::integration::runner","actiondispatch::integration::session","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activeresource::httpmock","fixtures","activesupport::callbacks::classmethods","activerecord::base","activerecord::countercache","actionview::helpers::texthelper","actionview::helpers::assettaghelper","activerecord::locking::optimistic::classmethods","activerecord::logsubscriber","activerecord::connectionadapters::databasestatements","actioncontroller::rackdelegation","actiondispatch::request","actiondispatch::routing::mapper::resources","actioncontroller::responder","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","actioncontroller::responder","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","actioncontroller::responder","actioncontroller::mimeresponds::classmethods","activeresource::httpmock","actiondispatch::response","activemodel::attributemethods","activerecord::base","activerecord::relation","activeresource::base","activesupport::multibyte::chars","activesupport::timewithzone","rails::application","rails::railtie::configuration","activemodel::attributemethods","activeresource::base","actioncontroller::metal","actioncontroller::rackdelegation","actiondispatch::response","actiondispatch::assertions::selectorassertions","activeresource::httpmock","activerecord::transactions","activerecord::base","activerecord::connectionadapters::connectionhandler","object","activesupport::multibyte::chars","activesupport::hashwithindifferentaccess","activesupport::hashwithindifferentaccess","activerecord::querymethods","actiondispatch::http::uploadedfile","activesupport::timewithzone","activesupport::timewithzone","activesupport::multibyte::chars","activesupport::multibyte::chars","activerecord::transactions","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databasestatements","actiondispatch::routing::mapper::base","actiondispatch::routing::mapper::resources","rails","rails::engine::configuration","float","rails::generators::actions","rails::generators::namedbase","rails::application","rails::configuration::deprecated","rails::configuration::deprecated","rails::application","activesupport::multibyte::chars","activesupport::testing::isolation::minitest","activesupport::testing::isolation::testunit","activesupport::testing::performance","activesupport::testing::performance::benchmarker","activesupport::testing::performance::profiler","activesupport::testing::setupandteardown::forclassictestunit","activesupport::testing::setupandteardown::forminitest","rails::initializable::initializer","rails::initializer","activesupport::callbacks","rails::generators::testcase","activesupport::testing::isolation::forking","activesupport::testing::isolation::subprocess","activerecord::testfixtures","rails::initializable","activesupport::testing::performance","activesupport::testing::performance","activemodel::validations","activemodel::validations::callbacks","activesupport::testing::performance","activerecord::logsubscriber","activerecord::logsubscriber","actionview::helpers::texthelper","activesupport::safebuffer","actionview::helpers::sanitizehelper","activemodel::massassignmentsecurity::sanitizer","actionview::helpers::sanitizehelper","actioncontroller::recordidentifier","activemodel::massassignmentsecurity","activerecord::connectionadapters::databasestatements","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::persistence","activerecord::sessionstore::sqlbypass","activerecord::validations","activeresource::base","rails::generators::activemodel","activerecord::persistence","activerecord::validations","activeresource::base","activeresource::validations","activerecord::migration","activerecord::migration","activeresource::base","activeresource::base","activeresource::base","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","actiondispatch::http::url","actiondispatch::routing::mapper::scoping","activerecord::namedscope::classmethods","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","activerecord::relation","activerecord::namedscope::classmethods","activerecord::namedscope::classmethods","activerecord::relation","rails::appbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","datetime","time","activesupport::timezone","actioncontroller::httpauthentication::digest","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::databasestatements","activerecord::querymethods","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::querycache","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actionview::helpers::datehelper","actionview::helpers::formtaghelper","actionview::helpers::datehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","actionview::helpers::datehelper","actioncontroller::implicitrender","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::streaming","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::streaming","activemodel::serialization","activerecord::serialization","activerecord::base","activerecord::base","actiondispatch::testresponse","actiondispatch::http::url","actiondispatch::request","actiondispatch::testprocess","actiondispatch::testresponse::deprecatedhelpers","activerecord::sessionstore::sqlbypass","actiondispatch::request","rails::application::configuration","activesupport::callbacks::classmethods","actionmailer::base","rails::generators::appgenerator","activesupport::json","rails::server","activerecord::testfixtures::classmethods","activerecord::base","activerecord::locking::optimistic::classmethods","activesupport::logsubscriber::testhelper","activerecord::attributemethods::primarykey::classmethods","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::base","actioncontroller::testing","actionview::partials::partialrenderer","activemodel::validations::acceptancevalidator","activemodel::validations::confirmationvalidator","activerecord::validations::uniquenessvalidator","activesupport::logsubscriber::testhelper","activesupport::testing::setupandteardown::classmethods","actioncontroller::testcase::behavior","activerecord::testfixtures::classmethods","activerecord::testfixtures","actioncontroller::templateassertions","actionview::testcase::behavior","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","actiondispatch::routing::mapper::resources","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::mysqladapter","activesupport::benchmarkable","activesupport::bufferedlogger","rails::generators::testcase","activesupport::cache::store","kernel","kernel","activesupport::bufferedlogger","actionview::helpers::texthelper","activesupport::duration","activesupport::timewithzone","datetime","time","kernel","activemodel::naming","activesupport::inflector::inflections","rails::generators::namedbase","activesupport::inflector","activeresource::base","activeresource::base","activeresource::connection","actiondispatch::http::uploadedfile","activemodel::errors","activerecord::relation","activesupport::cache::entry","activesupport::multibyte::chars","activesupport::callbacks::classmethods","actionview::lookupcontext::details","abstractcontroller::callbacks::classmethods","activesupport::multibyte::chars","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","rails::generators::base","activesupport::multibyte::chars","commands::plugin","activerecord::logsubscriber","activerecord::associations::throughassociationscope","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::sqliteadapter","actiondispatch::http::url","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::conditionalget","actiondispatch::http::url","actiondispatch::http::url","activesupport::callbacks::callback","rails::console","rails::console","rails::dbconsole","rails::dbconsole","rails::server","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","actioncontroller::logsubscriber","activesupport::cache::memcachestore","actioncontroller::metal","actioncontroller::metal","actiondispatch::response","actiondispatch::response","activerecord::base","activesupport::timewithzone","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activesupport::hashwithindifferentaccess","activesupport::hashwithindifferentaccess","activesupport::multibyte::chars","actionview::helpers::sanitizehelper","actionview::helpers::sanitizehelper","activerecord::connectionadapters::schemastatements","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","rails::appbuilder","activerecord::base","rails::generators","rails::railtie","actiondispatch::http::url","actiondispatch::http::url","actionview::helpers::formbuilder","actionview::helpers::formtaghelper","activesupport::notifications","activesupport::notifications::fanout","actiondispatch::testresponse","activeresource::response","activerecord::calculations","enumerable","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","kernel","activerecord::migration","plugin","actiondispatch::middlewarestack","activesupport::hashwithindifferentaccess","actiondispatch::http::parameters","mime::mimes","abstractcontroller::translation","actionview::helpers::translationhelper","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::postgresqladapter","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::sessionstore::sqlbypass","rails::generators::namedbase","activerecord::connectionadapters::databaselimits","activerecord::base","activerecord::base","activerecord::connectionadapters::sqliteadapter","activesupport::inflector","activerecord::connectionadapters::postgresqladapter","actionview::helpers::activemodelinstancetag","actionview::helpers::taghelper","rails::rack::logtailer","activesupport::logsubscriber::testhelper","activesupport::testing::setupandteardown::classmethods","activerecord::testfixtures","actioncontroller::templateassertions","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actiondispatch::testresponse::deprecatedhelpers","actionview::lookupcontext::viewpaths","actiondispatch::testresponse::deprecatedhelpers","rails::generators","activesupport::testing::declarative","rails::appbuilder","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","actioncontroller::testcase::behavior::classmethods","actionview::testcase::behavior::classmethods","rails::generators::testcase","activerecord::connectionadapters::column","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formhelper","actionview::helpers::formtaghelper","rails::application::configuration","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::timewithzone","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::formbuilder","time","actionview::helpers::formoptionshelper","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","activeresource::base","activeresource::base","activeresource::connection","activerecord::base","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activesupport::multibyte::chars","activesupport::inflector","activesupport::multibyte::chars","rails::appbuilder","actioncontroller::metal","actiondispatch::response","activemodel::errors","activerecord::relation","activesupport::timewithzone","rails::paths::path","bigdecimal","datetime","time","activesupport::timewithzone","datetime","time","datetime","time","activesupport::timewithzone","datetime","actioncontroller::responder","activesupport::timewithzone","bigdecimal","datetime","time","actiondispatch::session::abstractstore::sessionhash","activemodel::errors","activesupport::hashwithindifferentaccess","actioncontroller::responder","rails::info","activesupport::timewithzone","datetime","activeresource::base","activemodel::conversion","activerecord::attributemethods::primarykey","actionview::helpers::formbuilder","activemodel::conversion","activesupport::hashwithindifferentaccess","activemodel::conversion","activerecord::base","object","actiondispatch::response","actionview::pathresolver","actioncontroller::dispatcher","actiondispatch::callbacks","rails::railtie::configuration","rails::railtie::configuration","object","actiondispatch::remoteip::remoteipgetter","actionview::pathresolver","activeresource::request","activeresource::sslerror","activeresource::timeouterror","activesupport::safebuffer","activesupport::timewithzone","activesupport::timezone","bigdecimal","datetime","mime::type","plugin","rails::info","sourceannotationextractor::annotation","time","activerecord::connectionadapters::tabledefinition","activerecord::relation","mime::type","mime::type","activesupport::xmlmini","activesupport::timewithzone","datetime","time","activemodel::errors","activemodel::serializers::xml","activerecord::serialization","activeresource::base","activesupport::safebuffer","activesupport::timewithzone","bigdecimal","activesupport::timezone","activesupport::timewithzone","time","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::persistence","activerecord::persistence","actioncontroller::httpauthentication::token","time","activerecord::persistence","activerecord::connectionadapters::databasestatements","activerecord::transactions","activerecord::transactions::classmethods","activerecord::transactions","activerecord::connectionadapters::abstractadapter","activerecord::transactions","abstractcontroller::translation","actionview::helpers::translationhelper","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activesupport::inflector","actionview::helpers::texthelper","object","activerecord::testfixtures::classmethods","rails::initializable::collection","activesupport::timewithzone","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::multibyte::unicode","activerecord::connectionadapters::querycache","activerecord::querycache::classmethods","activesupport::inflector::inflections","activemodel::naming","rails::generators::namedbase","activemodel::attributemethods::classmethods","activesupport::inflector","object","activerecord::connectionadapters::postgresqladapter","actiondispatch::assertions::selectorassertions","plugin","activesupport::memoizable::instancemethods","activerecord::attributemethods::read","activerecord::attributemethods::read","rails::paths::path","rails::paths::root","activesupport::notifications","activesupport::notifications::fanout","activesupport::duration","activesupport::multibyte::chars","actiondispatch::session::abstractstore::sessionhash","activerecord::connectionadapters::databasestatements","activerecord::relation","activeresource::base","activesupport::hashwithindifferentaccess","activerecord::relation","activerecord::persistence","activeresource::base","activerecord::persistence","activeresource::base","rails::generators::activemodel","activerecord::persistence","activerecord::countercache","activerecord::locking::optimistic::classmethods","actionview::lookupcontext::details","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","actionview::helpers::atomfeedhelper::atomfeedbuilder","activesupport::fileupdatechecker","actiondispatch::http::url","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actioncontroller::metal","actiondispatch::routing::urlfor","actionview::helpers::urlhelper","actioncontroller::urlfor","actiondispatch::integration::runner","actiondispatch::routing::urlfor","actionview::helpers::urlhelper","activesupport::timezone","actioncontroller::metal","actiondispatch::middlewarestack","railsenvironment","railsenvironment","actioncontroller::renderers::classmethods","actioncontroller::renderers::classmethods","railsenvironment","time","activesupport::timewithzone","activeresource::base","activeresource::base","activeresource::connection","actiondispatch::testrequest","actioncontroller::httpauthentication::basic","activerecord::testfixtures::classmethods","activerecord::testfixtures::classmethods","activerecord::findermethods","activesupport::timewithzone","datetime","activesupport::timewithzone","datetime","activesupport::timewithzone","activesupport::timezone","datetime","time","activesupport::timezone","activemodel::validations","activerecord::validations","activeresource::validations","activerecord::connectionadapters::sqliteadapter","rails::generators::appgenerator","activerecord::namedscope::classmethods","activemodel::eachvalidator","activemodel::validations::classmethods","activemodel::validations::presencevalidator","activemodel::validator","actioncontroller::httpauthentication::digest","activemodel::eachvalidator","activemodel::validations::acceptancevalidator","activemodel::validations::confirmationvalidator","activemodel::validations::exclusionvalidator","activemodel::validations::formatvalidator","activemodel::validations::inclusionvalidator","activemodel::validations::inclusionvalidator","activemodel::validations::lengthvalidator","activemodel::validations::numericalityvalidator","activerecord::validations::associatedvalidator","activerecord::validations::uniquenessvalidator","i18n::railtie","actioncontroller::httpauthentication::digest","activemodel::validations::classmethods","activemodel::validations::helpermethods","activerecord::validations::classmethods","activemodel::validations::helpermethods","activemodel::validations::classmethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activerecord::validations::classmethods","activemodel::validations","activemodel::validations::classmethods","activemodel::validations::classmethods","activemodel::validations::classmethods","actionview::helpers::instancetagmethods::classmethods","activesupport::cache::entry","actionview::helpers::instancetagmethods::classmethods","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activesupport::hashwithindifferentaccess","actionview::template","rails::generators::actions","rails::appbuilder","actioncontroller::requestforgeryprotection","activesupport::messageverifier","activerecord::connectionadapters::abstractadapter","actioncontroller::requestforgeryprotection","mime::type","rails","rails::generators::appgenerator","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","abstractcontroller::rendering","actionview::base","abstractcontroller::rendering","abstractcontroller::rendering::classmethods","rails::configuration::deprecated","rails::configuration::deprecated","abstractcontroller::viewpaths::classmethods","abstractcontroller::viewpaths::classmethods","actionview::lookupcontext::viewpaths","actioncontroller::hideactions::classmethods","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","activesupport::logsubscriber::testhelper","activesupport::notifications::fanout","activesupport::multibyte::chars","activemodel::massassignmentsecurity::sanitizer","activesupport::dependencies::watchstack","activerecord::querymethods","activerecord::relation","activesupport::json","activesupport::xmlmini","activerecord::connectionadapters::connectionpool","actiondispatch::routing::mapper::resources","activerecord::base","actionview::lookupcontext::viewpaths","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","actionview::lookupcontext::details","activesupport::cache::strategy::localcache","object","activesupport::testing::performance::benchmarker","actiondispatch::assertions::routingassertions","activerecord::base","actiondispatch::routing::mapper::resources","activerecord::transactions","kernel","actioncontroller::base","actionview::helpers::texthelper","actiondispatch::response","activerecord::migration","activesupport::cache::store","activerecord::attributemethods::write","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","actioncontroller::caching::fragments","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::request","activerecord::connectionadapters::tabledefinition","activerecord::connectionadapters::tabledefinition","actioncontroller::testcase::behavior","actiondispatch::integration::requesthelpers","actiondispatch::request","activesupport::timewithzone","datetime","integer","integer","time","time","time","activesupport::timewithzone","time","time","activesupport::timezone","files\/readme_rdoc.html","files\/readme_rdoc.html","files\/actionmailer\/changelog.html","files\/actionmailer\/readme_rdoc.html","files\/actionmailer\/lib\/action_mailer\/base_rb.html","files\/actionpack\/changelog.html","files\/actionpack\/readme_rdoc.html","files\/actionpack\/lib\/abstract_controller\/asset_paths_rb.html","files\/actionpack\/lib\/abstract_controller\/base_rb.html","files\/actionpack\/lib\/abstract_controller\/callbacks_rb.html","files\/actionpack\/lib\/abstract_controller\/collector_rb.html","files\/actionpack\/lib\/abstract_controller\/helpers_rb.html","files\/actionpack\/lib\/abstract_controller\/layouts_rb.html","files\/actionpack\/lib\/abstract_controller\/logger_rb.html","files\/actionpack\/lib\/abstract_controller\/rendering_rb.html","files\/actionpack\/lib\/abstract_controller\/translation_rb.html","files\/actionpack\/lib\/abstract_controller\/view_paths_rb.html","files\/actionpack\/lib\/action_controller\/base_rb.html","files\/actionpack\/lib\/action_controller\/caching_rb.html","files\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","files\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","files\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","files\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","files\/actionpack\/lib\/action_controller\/deprecated_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/base_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/dispatcher_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/integration_test_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/performance_test_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/url_writer_rb.html","files\/actionpack\/lib\/action_controller\/log_subscriber_rb.html","files\/actionpack\/lib\/action_controller\/metal_rb.html","files\/actionpack\/lib\/action_controller\/metal\/compatibility_rb.html","files\/actionpack\/lib\/action_controller\/metal\/conditional_get_rb.html","files\/actionpack\/lib\/action_controller\/metal\/cookies_rb.html","files\/actionpack\/lib\/action_controller\/metal\/exceptions_rb.html","files\/actionpack\/lib\/action_controller\/metal\/flash_rb.html","files\/actionpack\/lib\/action_controller\/metal\/head_rb.html","files\/actionpack\/lib\/action_controller\/metal\/helpers_rb.html","files\/actionpack\/lib\/action_controller\/metal\/hide_actions_rb.html","files\/actionpack\/lib\/action_controller\/metal\/http_authentication_rb.html","files\/actionpack\/lib\/action_controller\/metal\/implicit_render_rb.html","files\/actionpack\/lib\/action_controller\/metal\/instrumentation_rb.html","files\/actionpack\/lib\/action_controller\/metal\/mime_responds_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rack_delegation_rb.html","files\/actionpack\/lib\/action_controller\/metal\/redirecting_rb.html","files\/actionpack\/lib\/action_controller\/metal\/renderers_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rendering_rb.html","files\/actionpack\/lib\/action_controller\/metal\/request_forgery_protection_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rescue_rb.html","files\/actionpack\/lib\/action_controller\/metal\/responder_rb.html","files\/actionpack\/lib\/action_controller\/metal\/session_management_rb.html","files\/actionpack\/lib\/action_controller\/metal\/streaming_rb.html","files\/actionpack\/lib\/action_controller\/metal\/testing_rb.html","files\/actionpack\/lib\/action_controller\/metal\/url_for_rb.html","files\/actionpack\/lib\/action_controller\/middleware_rb.html","files\/actionpack\/lib\/action_controller\/railtie_rb.html","files\/actionpack\/lib\/action_controller\/record_identifier_rb.html","files\/actionpack\/lib\/action_controller\/test_case_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/cache_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/filter_parameters_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/headers_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_negotiation_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_type_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_types_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/parameter_filter_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/parameters_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/request_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/response_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/upload_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/url_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/best_standards_support_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/callbacks_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/cookies_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/flash_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/head_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/params_parser_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/remote_ip_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/rescue_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/abstract_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cookie_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/mem_cache_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/show_exceptions_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/stack_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/static_rb.html","files\/actionpack\/lib\/action_dispatch\/railtie_rb.html","files\/actionpack\/lib\/action_dispatch\/routing_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/deprecated_mapper_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/mapper_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/polymorphic_routes_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/route_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/route_set_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/url_for_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/dom_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/response_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/routing_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/selector_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/tag_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/integration_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/performance_test_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_process_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_request_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_response_rb.html","files\/actionpack\/lib\/action_view\/base_rb.html","files\/actionpack\/lib\/action_view\/context_rb.html","files\/actionpack\/lib\/action_view\/helpers_rb.html","files\/actionpack\/lib\/action_view\/helpers\/active_model_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/csrf_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/prototype_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/raw_output_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/scriptaculous_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","files\/actionpack\/lib\/action_view\/log_subscriber_rb.html","files\/actionpack\/lib\/action_view\/lookup_context_rb.html","files\/actionpack\/lib\/action_view\/paths_rb.html","files\/actionpack\/lib\/action_view\/railtie_rb.html","files\/actionpack\/lib\/action_view\/render\/layouts_rb.html","files\/actionpack\/lib\/action_view\/render\/partials_rb.html","files\/actionpack\/lib\/action_view\/render\/rendering_rb.html","files\/actionpack\/lib\/action_view\/template_rb.html","files\/actionpack\/lib\/action_view\/template\/error_rb.html","files\/actionpack\/lib\/action_view\/template\/handler_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/builder_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/erb_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/rjs_rb.html","files\/actionpack\/lib\/action_view\/template\/resolver_rb.html","files\/actionpack\/lib\/action_view\/template\/text_rb.html","files\/actionpack\/lib\/action_view\/test_case_rb.html","files\/actionpack\/lib\/action_view\/testing\/resolvers_rb.html","files\/activemodel\/changelog.html","files\/activemodel\/readme_rdoc.html","files\/activemodel\/lib\/active_model\/attribute_methods_rb.html","files\/activemodel\/lib\/active_model\/callbacks_rb.html","files\/activemodel\/lib\/active_model\/conversion_rb.html","files\/activemodel\/lib\/active_model\/deprecated_error_methods_rb.html","files\/activemodel\/lib\/active_model\/dirty_rb.html","files\/activemodel\/lib\/active_model\/errors_rb.html","files\/activemodel\/lib\/active_model\/lint_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security\/permission_set_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security\/sanitizer_rb.html","files\/activemodel\/lib\/active_model\/naming_rb.html","files\/activemodel\/lib\/active_model\/observing_rb.html","files\/activemodel\/lib\/active_model\/railtie_rb.html","files\/activemodel\/lib\/active_model\/serialization_rb.html","files\/activemodel\/lib\/active_model\/serializers\/json_rb.html","files\/activemodel\/lib\/active_model\/serializers\/xml_rb.html","files\/activemodel\/lib\/active_model\/test_case_rb.html","files\/activemodel\/lib\/active_model\/translation_rb.html","files\/activemodel\/lib\/active_model\/validations_rb.html","files\/activemodel\/lib\/active_model\/validations\/acceptance_rb.html","files\/activemodel\/lib\/active_model\/validations\/callbacks_rb.html","files\/activemodel\/lib\/active_model\/validations\/confirmation_rb.html","files\/activemodel\/lib\/active_model\/validations\/exclusion_rb.html","files\/activemodel\/lib\/active_model\/validations\/format_rb.html","files\/activemodel\/lib\/active_model\/validations\/inclusion_rb.html","files\/activemodel\/lib\/active_model\/validations\/length_rb.html","files\/activemodel\/lib\/active_model\/validations\/numericality_rb.html","files\/activemodel\/lib\/active_model\/validations\/presence_rb.html","files\/activemodel\/lib\/active_model\/validations\/validates_rb.html","files\/activemodel\/lib\/active_model\/validations\/with_rb.html","files\/activemodel\/lib\/active_model\/validator_rb.html","files\/activemodel\/lib\/active_model\/version_rb.html","files\/activerecord\/changelog.html","files\/activerecord\/readme_rdoc.html","files\/activerecord\/lib\/active_record\/aggregations_rb.html","files\/activerecord\/lib\/active_record\/association_preload_rb.html","files\/activerecord\/lib\/active_record\/associations_rb.html","files\/activerecord\/lib\/active_record\/associations\/association_collection_rb.html","files\/activerecord\/lib\/active_record\/associations\/association_proxy_rb.html","files\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/through_association_scope_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/before_type_cast_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/dirty_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/primary_key_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/query_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/read_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/time_zone_conversion_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/write_rb.html","files\/activerecord\/lib\/active_record\/autosave_association_rb.html","files\/activerecord\/lib\/active_record\/base_rb.html","files\/activerecord\/lib\/active_record\/callbacks_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","files\/activerecord\/lib\/active_record\/counter_cache_rb.html","files\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","files\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","files\/activerecord\/lib\/active_record\/errors_rb.html","files\/activerecord\/lib\/active_record\/fixtures_rb.html","files\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","files\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","files\/activerecord\/lib\/active_record\/log_subscriber_rb.html","files\/activerecord\/lib\/active_record\/migration_rb.html","files\/activerecord\/lib\/active_record\/named_scope_rb.html","files\/activerecord\/lib\/active_record\/nested_attributes_rb.html","files\/activerecord\/lib\/active_record\/observer_rb.html","files\/activerecord\/lib\/active_record\/persistence_rb.html","files\/activerecord\/lib\/active_record\/query_cache_rb.html","files\/activerecord\/lib\/active_record\/railtie_rb.html","files\/activerecord\/lib\/active_record\/railties\/controller_runtime_rb.html","files\/activerecord\/lib\/active_record\/reflection_rb.html","files\/activerecord\/lib\/active_record\/relation_rb.html","files\/activerecord\/lib\/active_record\/relation\/batches_rb.html","files\/activerecord\/lib\/active_record\/relation\/calculations_rb.html","files\/activerecord\/lib\/active_record\/relation\/finder_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/predicate_builder_rb.html","files\/activerecord\/lib\/active_record\/relation\/query_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/spawn_methods_rb.html","files\/activerecord\/lib\/active_record\/schema_rb.html","files\/activerecord\/lib\/active_record\/schema_dumper_rb.html","files\/activerecord\/lib\/active_record\/serialization_rb.html","files\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","files\/activerecord\/lib\/active_record\/session_store_rb.html","files\/activerecord\/lib\/active_record\/test_case_rb.html","files\/activerecord\/lib\/active_record\/timestamp_rb.html","files\/activerecord\/lib\/active_record\/transactions_rb.html","files\/activerecord\/lib\/active_record\/validations_rb.html","files\/activerecord\/lib\/active_record\/validations\/associated_rb.html","files\/activerecord\/lib\/active_record\/validations\/uniqueness_rb.html","files\/activerecord\/lib\/active_record\/version_rb.html","files\/activeresource\/changelog.html","files\/activeresource\/readme_rdoc.html","files\/activeresource\/lib\/active_resource_rb.html","files\/activeresource\/lib\/active_resource\/base_rb.html","files\/activeresource\/lib\/active_resource\/connection_rb.html","files\/activeresource\/lib\/active_resource\/custom_methods_rb.html","files\/activeresource\/lib\/active_resource\/exceptions_rb.html","files\/activeresource\/lib\/active_resource\/formats_rb.html","files\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","files\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","files\/activeresource\/lib\/active_resource\/http_mock_rb.html","files\/activeresource\/lib\/active_resource\/log_subscriber_rb.html","files\/activeresource\/lib\/active_resource\/observing_rb.html","files\/activeresource\/lib\/active_resource\/railtie_rb.html","files\/activeresource\/lib\/active_resource\/schema_rb.html","files\/activeresource\/lib\/active_resource\/validations_rb.html","files\/activeresource\/lib\/active_resource\/version_rb.html","files\/activesupport\/changelog.html","files\/activesupport\/readme_rdoc.html","files\/activesupport\/lib\/active_support\/all_rb.html","files\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","files\/activesupport\/lib\/active_support\/base64_rb.html","files\/activesupport\/lib\/active_support\/basic_object_rb.html","files\/activesupport\/lib\/active_support\/benchmarkable_rb.html","files\/activesupport\/lib\/active_support\/buffered_logger_rb.html","files\/activesupport\/lib\/active_support\/builder_rb.html","files\/activesupport\/lib\/active_support\/cache_rb.html","files\/activesupport\/lib\/active_support\/cache\/compressed_mem_cache_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","files\/activesupport\/lib\/active_support\/cache\/synchronized_memory_store_rb.html","files\/activesupport\/lib\/active_support\/callbacks_rb.html","files\/activesupport\/lib\/active_support\/concern_rb.html","files\/activesupport\/lib\/active_support\/configurable_rb.html","files\/activesupport\/lib\/active_support\/core_ext_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/uniq_by_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/wrap_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/cgi_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/cgi\/escape_skipping_slashes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/inheritable_attributes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/subclasses_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/freeze_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file\/path_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/multiple_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/requires_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/singleton_class_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/anonymous_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_accessor_with_default_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/method_names_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/reachable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/remove_method_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/duplicable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/returning_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_json_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_param_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_query_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/try_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/with_options_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/regexp_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/encoding_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/exclude_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/interpolation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/strip_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/marshal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/publicize_conversion_methods_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","files\/activesupport\/lib\/active_support\/dependencies_rb.html","files\/activesupport\/lib\/active_support\/dependencies\/autoload_rb.html","files\/activesupport\/lib\/active_support\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/behaviors_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/method_wrappers_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/proxy_wrappers_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/reporting_rb.html","files\/activesupport\/lib\/active_support\/descendants_tracker_rb.html","files\/activesupport\/lib\/active_support\/duration_rb.html","files\/activesupport\/lib\/active_support\/file_update_checker_rb.html","files\/activesupport\/lib\/active_support\/gzip_rb.html","files\/activesupport\/lib\/active_support\/hash_with_indifferent_access_rb.html","files\/activesupport\/lib\/active_support\/i18n_rb.html","files\/activesupport\/lib\/active_support\/i18n_railtie_rb.html","files\/activesupport\/lib\/active_support\/inflections_rb.html","files\/activesupport\/lib\/active_support\/inflector_rb.html","files\/activesupport\/lib\/active_support\/inflector\/inflections_rb.html","files\/activesupport\/lib\/active_support\/inflector\/methods_rb.html","files\/activesupport\/lib\/active_support\/inflector\/transliterate_rb.html","files\/activesupport\/lib\/active_support\/json_rb.html","files\/activesupport\/lib\/active_support\/json\/backends\/jsongem_rb.html","files\/activesupport\/lib\/active_support\/json\/backends\/yajl_rb.html","files\/activesupport\/lib\/active_support\/json\/backends\/yaml_rb.html","files\/activesupport\/lib\/active_support\/json\/decoding_rb.html","files\/activesupport\/lib\/active_support\/json\/encoding_rb.html","files\/activesupport\/lib\/active_support\/json\/variable_rb.html","files\/activesupport\/lib\/active_support\/lazy_load_hooks_rb.html","files\/activesupport\/lib\/active_support\/log_subscriber_rb.html","files\/activesupport\/lib\/active_support\/log_subscriber\/test_helper_rb.html","files\/activesupport\/lib\/active_support\/memoizable_rb.html","files\/activesupport\/lib\/active_support\/message_encryptor_rb.html","files\/activesupport\/lib\/active_support\/message_verifier_rb.html","files\/activesupport\/lib\/active_support\/multibyte_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/unicode_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","files\/activesupport\/lib\/active_support\/notifications_rb.html","files\/activesupport\/lib\/active_support\/notifications\/fanout_rb.html","files\/activesupport\/lib\/active_support\/notifications\/instrumenter_rb.html","files\/activesupport\/lib\/active_support\/option_merger_rb.html","files\/activesupport\/lib\/active_support\/ordered_hash_rb.html","files\/activesupport\/lib\/active_support\/ordered_options_rb.html","files\/activesupport\/lib\/active_support\/railtie_rb.html","files\/activesupport\/lib\/active_support\/rescuable_rb.html","files\/activesupport\/lib\/active_support\/ruby\/shim_rb.html","files\/activesupport\/lib\/active_support\/secure_random_rb.html","files\/activesupport\/lib\/active_support\/string_inquirer_rb.html","files\/activesupport\/lib\/active_support\/test_case_rb.html","files\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","files\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","files\/activesupport\/lib\/active_support\/testing\/default_rb.html","files\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/testing\/isolation_rb.html","files\/activesupport\/lib\/active_support\/testing\/pending_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance_rb.html","files\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","files\/activesupport\/lib\/active_support\/time_rb.html","files\/activesupport\/lib\/active_support\/time\/autoload_rb.html","files\/activesupport\/lib\/active_support\/time_with_zone_rb.html","files\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","files\/activesupport\/lib\/active_support\/version_rb.html","files\/activesupport\/lib\/active_support\/whiny_nil_rb.html","files\/activesupport\/lib\/active_support\/xml_mini_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","files\/railties\/changelog.html","files\/railties\/mit-license.html","files\/railties\/readme_rdoc.html","files\/railties\/lib\/rails_rb.html","files\/railties\/lib\/rails\/all_rb.html","files\/railties\/lib\/rails\/application_rb.html","files\/railties\/lib\/rails\/application\/bootstrap_rb.html","files\/railties\/lib\/rails\/application\/configurable_rb.html","files\/railties\/lib\/rails\/application\/configuration_rb.html","files\/railties\/lib\/rails\/application\/finisher_rb.html","files\/railties\/lib\/rails\/application\/railties_rb.html","files\/railties\/lib\/rails\/backtrace_cleaner_rb.html","files\/railties\/lib\/rails\/cli_rb.html","files\/railties\/lib\/rails\/code_statistics_rb.html","files\/railties\/lib\/rails\/commands_rb.html","files\/railties\/lib\/rails\/commands\/application_rb.html","files\/railties\/lib\/rails\/commands\/benchmarker_rb.html","files\/railties\/lib\/rails\/commands\/console_rb.html","files\/railties\/lib\/rails\/commands\/dbconsole_rb.html","files\/railties\/lib\/rails\/commands\/destroy_rb.html","files\/railties\/lib\/rails\/commands\/generate_rb.html","files\/railties\/lib\/rails\/commands\/plugin_rb.html","files\/railties\/lib\/rails\/commands\/profiler_rb.html","files\/railties\/lib\/rails\/commands\/runner_rb.html","files\/railties\/lib\/rails\/commands\/server_rb.html","files\/railties\/lib\/rails\/commands\/update_rb.html","files\/railties\/lib\/rails\/configuration_rb.html","files\/railties\/lib\/rails\/console\/app_rb.html","files\/railties\/lib\/rails\/console\/helpers_rb.html","files\/railties\/lib\/rails\/console\/sandbox_rb.html","files\/railties\/lib\/rails\/deprecation_rb.html","files\/railties\/lib\/rails\/engine_rb.html","files\/railties\/lib\/rails\/engine\/configurable_rb.html","files\/railties\/lib\/rails\/engine\/configuration_rb.html","files\/railties\/lib\/rails\/generators_rb.html","files\/railties\/lib\/rails\/generators\/actions_rb.html","files\/railties\/lib\/rails\/generators\/active_model_rb.html","files\/railties\/lib\/rails\/generators\/base_rb.html","files\/railties\/lib\/rails\/generators\/erb_rb.html","files\/railties\/lib\/rails\/generators\/erb\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/mailer\/mailer_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/generated_attribute_rb.html","files\/railties\/lib\/rails\/generators\/migration_rb.html","files\/railties\/lib\/rails\/generators\/named_base_rb.html","files\/railties\/lib\/rails\/generators\/rails\/app\/app_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/generator\/generator_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/helper\/helper_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/integration_test\/integration_test_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/migration\/migration_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/model\/model_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/observer\/observer_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/performance_test\/performance_test_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/plugin\/plugin_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/resource\/resource_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/scaffold_controller\/scaffold_controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/session_migration\/session_migration_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/stylesheets\/stylesheets_generator_rb.html","files\/railties\/lib\/rails\/generators\/resource_helpers_rb.html","files\/railties\/lib\/rails\/generators\/test_case_rb.html","files\/railties\/lib\/rails\/generators\/test_unit_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/helper\/helper_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/integration\/integration_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/mailer\/mailer_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/model\/model_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/observer\/observer_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/performance\/performance_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/plugin\/plugin_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/info_rb.html","files\/railties\/lib\/rails\/info_controller_rb.html","files\/railties\/lib\/rails\/info_routes_rb.html","files\/railties\/lib\/rails\/initializable_rb.html","files\/railties\/lib\/rails\/paths_rb.html","files\/railties\/lib\/rails\/performance_test_help_rb.html","files\/railties\/lib\/rails\/plugin_rb.html","files\/railties\/lib\/rails\/rack_rb.html","files\/railties\/lib\/rails\/rack\/debugger_rb.html","files\/railties\/lib\/rails\/rack\/log_tailer_rb.html","files\/railties\/lib\/rails\/rack\/logger_rb.html","files\/railties\/lib\/rails\/rack\/static_rb.html","files\/railties\/lib\/rails\/railtie_rb.html","files\/railties\/lib\/rails\/railtie\/configurable_rb.html","files\/railties\/lib\/rails\/railtie\/configuration_rb.html","files\/railties\/lib\/rails\/ruby_version_check_rb.html","files\/railties\/lib\/rails\/rubyprof_ext_rb.html","files\/railties\/lib\/rails\/script_rails_loader_rb.html","files\/railties\/lib\/rails\/source_annotation_extractor_rb.html","files\/railties\/lib\/rails\/tasks_rb.html","files\/railties\/lib\/rails\/test_help_rb.html","files\/railties\/lib\/rails\/test_unit\/railtie_rb.html","files\/railties\/lib\/rails\/version_rb.html"],"info":[["AbstractController","actionpack\/lib\/abstract_controller\/logger.rb","classes\/AbstractController.html"," < ","",1],["ActionNotFound","AbstractController","classes\/AbstractController\/ActionNotFound.html"," < StandardError","",1],["AssetPaths","AbstractController","classes\/AbstractController\/AssetPaths.html"," < ","",1],["Base","AbstractController","classes\/AbstractController\/Base.html"," < Object","<tt>AbstractController::Base<\/tt> is a low-level API. Nobody should be using it directly, and subclasses",1],["Callbacks","AbstractController","classes\/AbstractController\/Callbacks.html"," < ","",1],["ClassMethods","AbstractController::Callbacks","classes\/AbstractController\/Callbacks\/ClassMethods.html"," < ","",1],["Collector","AbstractController","classes\/AbstractController\/Collector.html"," < ","",1],["DoubleRenderError","AbstractController","classes\/AbstractController\/DoubleRenderError.html"," < Error","",1],["Error","AbstractController","classes\/AbstractController\/Error.html"," < StandardError","",1],["Helpers","AbstractController","classes\/AbstractController\/Helpers.html"," < ","",1],["ClassMethods","AbstractController::Helpers","classes\/AbstractController\/Helpers\/ClassMethods.html"," < ","",1],["Layouts","AbstractController","classes\/AbstractController\/Layouts.html"," < ","Layouts reverse the common pattern of including shared headers and footers in many templates to isolate",1],["ClassMethods","AbstractController::Layouts","classes\/AbstractController\/Layouts\/ClassMethods.html"," < ","",1],["LayoutConditions","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods\/LayoutConditions.html"," < ","This module is mixed in if layout conditions are provided. This means that if no layout conditions are",1],["Logger","AbstractController","classes\/AbstractController\/Logger.html"," < ","",1],["Rendering","AbstractController","classes\/AbstractController\/Rendering.html"," < ","",1],["ClassMethods","AbstractController::Rendering","classes\/AbstractController\/Rendering\/ClassMethods.html"," < ","",1],["Translation","AbstractController","classes\/AbstractController\/Translation.html"," < ","",1],["ViewPaths","AbstractController","classes\/AbstractController\/ViewPaths.html"," < ","",1],["ClassMethods","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths\/ClassMethods.html"," < ","",1],["Base","ActionController","classes\/ActionController\/Base.html"," < Metal","Action Controllers are the core of a web request in \\Rails. They are made up of one or more actions that",1],["Caching","ActionController","classes\/ActionController\/Caching.html"," < ","Caching is a cheap way of speeding up slow applications by keeping the result of calculations, renderings,",1],["Actions","ActionController::Caching","classes\/ActionController\/Caching\/Actions.html"," < ","Action caching is similar to page caching by the fact that the entire output of the response is cached,",1],["ActionCachePath","ActionController::Caching::Actions","classes\/ActionController\/Caching\/Actions\/ActionCachePath.html"," < Object","",1],["ClassMethods","ActionController::Caching::Actions","classes\/ActionController\/Caching\/Actions\/ClassMethods.html"," < ","",1],["ConfigMethods","ActionController::Caching","classes\/ActionController\/Caching\/ConfigMethods.html"," < ","",1],["Fragments","ActionController::Caching","classes\/ActionController\/Caching\/Fragments.html"," < ","Fragment caching is used for caching various blocks within templates without caching the entire action",1],["Pages","ActionController::Caching","classes\/ActionController\/Caching\/Pages.html"," < ","Page caching is an approach to caching where the entire action output of is stored as a HTML file that",1],["ClassMethods","ActionController::Caching::Pages","classes\/ActionController\/Caching\/Pages\/ClassMethods.html"," < ","",1],["Sweeping","ActionController::Caching","classes\/ActionController\/Caching\/Sweeping.html"," < ","Sweepers are the terminators of the caching world and responsible for expiring caches when model objects",1],["Compatibility","ActionController","classes\/ActionController\/Compatibility.html"," < ","",1],["ClassMethods","ActionController::Compatibility","classes\/ActionController\/Compatibility\/ClassMethods.html"," < ","",1],["ConditionalGet","ActionController","classes\/ActionController\/ConditionalGet.html"," < ","",1],["Cookies","ActionController","classes\/ActionController\/Cookies.html"," < ","",1],["Dispatcher","ActionController","classes\/ActionController\/Dispatcher.html"," < Object","",1],["Flash","ActionController","classes\/ActionController\/Flash.html"," < ","",1],["Head","ActionController","classes\/ActionController\/Head.html"," < ","",1],["Helpers","ActionController","classes\/ActionController\/Helpers.html"," < ","The Rails framework provides a large number of helpers for working with +assets+, +dates+, +forms+, +numbers+",1],["ClassMethods","ActionController::Helpers","classes\/ActionController\/Helpers\/ClassMethods.html"," < ","",1],["HideActions","ActionController","classes\/ActionController\/HideActions.html"," < ","ActionController::HideActions adds the ability to prevent public methods on a controller to be called",1],["ClassMethods","ActionController::HideActions","classes\/ActionController\/HideActions\/ClassMethods.html"," < ","",1],["HttpAuthentication","ActionController","classes\/ActionController\/HttpAuthentication.html"," < ","",1],["Basic","ActionController::HttpAuthentication","classes\/ActionController\/HttpAuthentication\/Basic.html"," < ","Makes it dead easy to do HTTP Basic authentication. Simple Basic example: class PostsController < ApplicationController",1],["ControllerMethods","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html"," < ","",1],["Digest","ActionController::HttpAuthentication","classes\/ActionController\/HttpAuthentication\/Digest.html"," < ","",1],["ControllerMethods","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html"," < ","",1],["Token","ActionController::HttpAuthentication","classes\/ActionController\/HttpAuthentication\/Token.html"," < ","Makes it dead easy to do HTTP Token authentication. Simple Token example: class PostsController < ApplicationController",1],["ControllerMethods","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token\/ControllerMethods.html"," < ","",1],["ImplicitRender","ActionController","classes\/ActionController\/ImplicitRender.html"," < ","",1],["Instrumentation","ActionController","classes\/ActionController\/Instrumentation.html"," < ","Adds instrumentation to several ends in ActionController::Base. It also provides some hooks related with",1],["ClassMethods","ActionController::Instrumentation","classes\/ActionController\/Instrumentation\/ClassMethods.html"," < ","",1],["LogSubscriber","ActionController","classes\/ActionController\/LogSubscriber.html"," < ActiveSupport::LogSubscriber","",1],["Metal","ActionController","classes\/ActionController\/Metal.html"," < AbstractController::Base","ActionController::Metal provides a way to get a valid Rack application from a controller. In AbstractController,",1],["Middleware","ActionController","classes\/ActionController\/Middleware.html"," < Metal","",1],["ActionMiddleware","ActionController::Middleware","classes\/ActionController\/Middleware\/ActionMiddleware.html"," < Object","",1],["ClassMethods","ActionController::MimeResponds","classes\/ActionController\/MimeResponds\/ClassMethods.html"," < ","",1],["RackDelegation","ActionController","classes\/ActionController\/RackDelegation.html"," < ","",1],["Railtie","ActionController","classes\/ActionController\/Railtie.html"," < Rails::Railtie","",1],["RecordIdentifier","ActionController","classes\/ActionController\/RecordIdentifier.html"," < ","The record identifier encapsulates a number of naming conventions for dealing with records, like Active",1],["Redirecting","ActionController","classes\/ActionController\/Redirecting.html"," < ","",1],["Renderers","ActionController","classes\/ActionController\/Renderers.html"," < ","",1],["All","ActionController::Renderers","classes\/ActionController\/Renderers\/All.html"," < ","",1],["ClassMethods","ActionController::Renderers","classes\/ActionController\/Renderers\/ClassMethods.html"," < ","",1],["Rendering","ActionController","classes\/ActionController\/Rendering.html"," < ","",1],["RequestForgeryProtection","ActionController","classes\/ActionController\/RequestForgeryProtection.html"," < ","Protecting controller actions from CSRF attacks by ensuring that all forms are coming from the current",1],["ClassMethods","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection\/ClassMethods.html"," < ","",1],["Rescue","ActionController","classes\/ActionController\/Rescue.html"," < ","",1],["Responder","ActionController","classes\/ActionController\/Responder.html"," < Object","Responder is responsible for exposing a resource to different mime requests, usually depending on the",1],["ClassMethods","ActionController::SessionManagement","classes\/ActionController\/SessionManagement\/ClassMethods.html"," < ","",1],["Streaming","ActionController","classes\/ActionController\/Streaming.html"," < ","Methods for sending arbitrary data and for streaming files to the browser, instead of rendering. ",1],["TemplateAssertions","ActionController","classes\/ActionController\/TemplateAssertions.html"," < ","",1],["TestCase","ActionController","classes\/ActionController\/TestCase.html"," < ActiveSupport::TestCase","Superclass for ActionController functional tests. Functional tests allow you to test a single controller",1],["Behavior","ActionController::TestCase","classes\/ActionController\/TestCase\/Behavior.html"," < ","",1],["ClassMethods","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html"," < ","",1],["RaiseActionExceptions","ActionController::TestCase","classes\/ActionController\/TestCase\/RaiseActionExceptions.html"," < ","When the request.remote_addr remains the default for testing, which is 0.0.0.0, the exception is simply",1],["TestResponse","ActionController","classes\/ActionController\/TestResponse.html"," < ActionDispatch::TestResponse","",1],["Testing","ActionController","classes\/ActionController\/Testing.html"," < ","",1],["ClassMethods","ActionController::Testing","classes\/ActionController\/Testing\/ClassMethods.html"," < ","",1],["UrlFor","ActionController","classes\/ActionController\/UrlFor.html"," < ","",1],["ClassMethods","ActionController::UrlFor","classes\/ActionController\/UrlFor\/ClassMethods.html"," < ","",1],["UrlRewriter","ActionController","classes\/ActionController\/UrlRewriter.html"," < Object","",1],["UrlWriter","ActionController","classes\/ActionController\/UrlWriter.html"," < ","",1],["Assertions","ActionDispatch","classes\/ActionDispatch\/Assertions.html"," < ","",1],["DomAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/DomAssertions.html"," < ","",1],["ResponseAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/ResponseAssertions.html"," < ","A small suite of assertions that test responses from \\Rails applications. ",1],["RoutingAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html"," < ","Suite of assertions to test routes generated by \\Rails and the handling of requests made to them. ",1],["SelectorAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html"," < ","Adds the +assert_select+ method for use in Rails functional test cases, which can be used to make assertions",1],["TagAssertions","ActionDispatch::Assertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html"," < ","Pair of assertions to testing elements in the HTML output of the response. ",1],["BestStandardsSupport","ActionDispatch","classes\/ActionDispatch\/BestStandardsSupport.html"," < Object","",1],["Callbacks","ActionDispatch","classes\/ActionDispatch\/Callbacks.html"," < Object","Provide callbacks to be executed before and after the request dispatch. It also provides a to_prepare",1],["Cookies","ActionDispatch","classes\/ActionDispatch\/Cookies.html"," < Object","\\Cookies are read and written through ActionController#cookies. The cookies being read are the ones received",1],["CookieOverflow","ActionDispatch::Cookies","classes\/ActionDispatch\/Cookies\/CookieOverflow.html"," < StandardError","Raised when storing more than 4K of session data. ",1],["Flash","ActionDispatch","classes\/ActionDispatch\/Flash.html"," < Object","The flash provides a way to pass temporary objects between actions. Anything you place in the flash will",1],["FlashHash","ActionDispatch::Flash","classes\/ActionDispatch\/Flash\/FlashHash.html"," < Hash","",1],["Head","ActionDispatch","classes\/ActionDispatch\/Head.html"," < Object","",1],["Http","ActionDispatch","classes\/ActionDispatch\/Http.html"," < ","",1],["Cache","ActionDispatch::Http","classes\/ActionDispatch\/Http\/Cache.html"," < ","",1],["Request","ActionDispatch::Http::Cache","classes\/ActionDispatch\/Http\/Cache\/Request.html"," < ","",1],["Response","ActionDispatch::Http::Cache","classes\/ActionDispatch\/Http\/Cache\/Response.html"," < ","",1],["FilterParameters","ActionDispatch::Http","classes\/ActionDispatch\/Http\/FilterParameters.html"," < ","Allows you to specify sensitive parameters which will be replaced from the request log by looking in",1],["Headers","ActionDispatch::Http","classes\/ActionDispatch\/Http\/Headers.html"," < ::Hash","",1],["MimeNegotiation","ActionDispatch::Http","classes\/ActionDispatch\/Http\/MimeNegotiation.html"," < ","",1],["ParameterFilter","ActionDispatch::Http","classes\/ActionDispatch\/Http\/ParameterFilter.html"," < Object","",1],["Parameters","ActionDispatch::Http","classes\/ActionDispatch\/Http\/Parameters.html"," < ","",1],["URL","ActionDispatch::Http","classes\/ActionDispatch\/Http\/URL.html"," < ","",1],["Upload","ActionDispatch::Http","classes\/ActionDispatch\/Http\/Upload.html"," < ","",1],["UploadedFile","ActionDispatch::Http","classes\/ActionDispatch\/Http\/UploadedFile.html"," < Object","",1],["RequestHelpers","ActionDispatch::Integration","classes\/ActionDispatch\/Integration\/RequestHelpers.html"," < ","",1],["Runner","ActionDispatch::Integration","classes\/ActionDispatch\/Integration\/Runner.html"," < ","",1],["Session","ActionDispatch::Integration","classes\/ActionDispatch\/Integration\/Session.html"," < Object","An instance of this class represents a set of requests and responses performed sequentially by a test",1],["IntegrationTest","ActionDispatch","classes\/ActionDispatch\/IntegrationTest.html"," < ActiveSupport::TestCase","An test that spans multiple controllers and actions, tying them all together to ensure they work together",1],["MiddlewareStack","ActionDispatch","classes\/ActionDispatch\/MiddlewareStack.html"," < Array","",1],["Middleware","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html"," < Object","",1],["ParamsParser","ActionDispatch","classes\/ActionDispatch\/ParamsParser.html"," < Object","",1],["PerformanceTest","ActionDispatch","classes\/ActionDispatch\/PerformanceTest.html"," < ActionDispatch::IntegrationTest","An integration test that runs a code profiler on your test methods. Profiling output for combinations",1],["Railtie","ActionDispatch","classes\/ActionDispatch\/Railtie.html"," < Rails::Railtie","",1],["RemoteIp","ActionDispatch","classes\/ActionDispatch\/RemoteIp.html"," < Object","",1],["IpSpoofAttackError","ActionDispatch::RemoteIp","classes\/ActionDispatch\/RemoteIp\/IpSpoofAttackError.html"," < StandardError","",1],["RemoteIpGetter","ActionDispatch::RemoteIp","classes\/ActionDispatch\/RemoteIp\/RemoteIpGetter.html"," < Object","",1],["Request","ActionDispatch","classes\/ActionDispatch\/Request.html"," < Rack::Request","",1],["Rescue","ActionDispatch","classes\/ActionDispatch\/Rescue.html"," < Object","",1],["Response","ActionDispatch","classes\/ActionDispatch\/Response.html"," < Rack::Response","Represents an HTTP response generated by a controller action. Use it to retrieve the current state of",1],["Setup","ActionDispatch::Response","classes\/ActionDispatch\/Response\/Setup.html"," < ","",1],["Routing","ActionDispatch","classes\/ActionDispatch\/Routing.html"," < ","The routing module provides URL rewriting in native Ruby. It's a way to redirect incoming requests to",1],["Mapper","ActionDispatch::Routing","classes\/ActionDispatch\/Routing\/Mapper.html"," < Object","",1],["Base","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/Base.html"," < ","",1],["HttpHelpers","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html"," < ","",1],["Resources","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html"," < ","Resource routing allows you to quickly declare all of the common routes for a given resourceful controller.",1],["Scoping","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html"," < ","You may wish to organize groups of controllers under a namespace. Most commonly, you might group a number",1],["Shorthand","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper\/Shorthand.html"," < ","",1],["PolymorphicRoutes","ActionDispatch::Routing","classes\/ActionDispatch\/Routing\/PolymorphicRoutes.html"," < ","Polymorphic URL helpers are methods for smart resolution to a named route call when given an Active Record",1],["UrlFor","ActionDispatch::Routing","classes\/ActionDispatch\/Routing\/UrlFor.html"," < ","In <tt>config\/routes.rb<\/tt> you define URL-to-controller mappings, but the reverse is also possible:",1],["Session","ActionDispatch","classes\/ActionDispatch\/Session.html"," < ","",1],["AbstractStore","ActionDispatch::Session","classes\/ActionDispatch\/Session\/AbstractStore.html"," < Object","",1],["OptionsHash","ActionDispatch::Session::AbstractStore","classes\/ActionDispatch\/Session\/AbstractStore\/OptionsHash.html"," < Hash","thin wrapper around Hash that allows us to lazily load session id into session_options ",1],["SessionHash","ActionDispatch::Session::AbstractStore","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html"," < Hash","",1],["CookieStore","ActionDispatch::Session","classes\/ActionDispatch\/Session\/CookieStore.html"," < AbstractStore","This cookie-based session store is the Rails default. Sessions typically contain at most a user_id and",1],["MemCacheStore","ActionDispatch::Session","classes\/ActionDispatch\/Session\/MemCacheStore.html"," < AbstractStore","",1],["ShowExceptions","ActionDispatch","classes\/ActionDispatch\/ShowExceptions.html"," < Object","This middleware rescues any exception returned by the application and renders nice exception pages if",1],["Static","ActionDispatch","classes\/ActionDispatch\/Static.html"," < Object","",1],["TestProcess","ActionDispatch","classes\/ActionDispatch\/TestProcess.html"," < ","",1],["TestRequest","ActionDispatch","classes\/ActionDispatch\/TestRequest.html"," < Request","",1],["TestResponse","ActionDispatch","classes\/ActionDispatch\/TestResponse.html"," < Response","Integration test methods such as ActionDispatch::Integration::Session#get and ActionDispatch::Integration::Session#post",1],["DeprecatedHelpers","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html"," < ","",1],["Base","ActionMailer","classes\/ActionMailer\/Base.html"," < AbstractController::Base","Action Mailer allows you to send email from your application using a mailer model and views. = Mailer",1],["DeprecatedHeaderProxy","ActionMailer::Base","classes\/ActionMailer\/Base\/DeprecatedHeaderProxy.html"," < ActiveSupport::BasicObject","",1],["DeprecatedUrlOptions","ActionMailer::Base","classes\/ActionMailer\/Base\/DeprecatedUrlOptions.html"," < ","",1],["Base","ActionView","classes\/ActionView\/Base.html"," < Object","= Action View Base Action View templates can be written in three ways. If the template file has a <tt>.erb<\/tt>",1],["Subclasses","ActionView::Base","classes\/ActionView\/Base\/Subclasses.html"," < ","",1],["Context","ActionView","classes\/ActionView\/Context.html"," < ","= Action View Context Action View contexts are supplied to Action Controller to render template. The",1],["FileSystemResolver","ActionView","classes\/ActionView\/FileSystemResolver.html"," < PathResolver","",1],["FixtureResolver","ActionView","classes\/ActionView\/FixtureResolver.html"," < PathResolver","Use FixtureResolver in your tests to simulate the presence of files on the file system. This is used",1],["ActiveModelFormBuilder","ActionView::Helpers","classes\/ActionView\/Helpers\/ActiveModelFormBuilder.html"," < ","",1],["ActiveModelHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/ActiveModelHelper.html"," < ","",1],["ActiveModelInstanceTag","ActionView::Helpers","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html"," < ","",1],["AssetTagHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/AssetTagHelper.html"," < ","This module provides methods for generating HTML that links views to assets such as images, javascripts,",1],["AtomFeedHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/AtomFeedHelper.html"," < ","",1],["AtomBuilder","ActionView::Helpers::AtomFeedHelper","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomBuilder.html"," < Object","",1],["AtomFeedBuilder","ActionView::Helpers::AtomFeedHelper","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html"," < AtomBuilder","",1],["CacheHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/CacheHelper.html"," < ","",1],["CaptureHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/CaptureHelper.html"," < ","CaptureHelper exposes methods to let you extract generated markup which can be used in other parts of",1],["CsrfHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/CsrfHelper.html"," < ","",1],["DateHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/DateHelper.html"," < ","= Action View Date Helpers The Date Helper primarily creates select\/option tags for different kinds of",1],["DebugHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/DebugHelper.html"," < ","",1],["FormBuilder","ActionView::Helpers","classes\/ActionView\/Helpers\/FormBuilder.html"," < Object","",1],["FormHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/FormHelper.html"," < ","Form helpers are designed to make working with resources much easier compared to using vanilla HTML.",1],["FormOptionsHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/FormOptionsHelper.html"," < ","Provides a number of methods for turning different kinds of containers into a set of option tags. ==",1],["FormTagHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/FormTagHelper.html"," < ","Provides a number of methods for creating form tags that doesn't rely on an Active Record object assigned",1],["ClassMethods","ActionView::Helpers::InstanceTagMethods","classes\/ActionView\/Helpers\/InstanceTagMethods\/ClassMethods.html"," < ","",1],["JavaScriptHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/JavaScriptHelper.html"," < ","Provides functionality for working with JavaScript in your views. == Ajax, controls and visual effects",1],["NumberHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/NumberHelper.html"," < ","Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers,",1],["InvalidNumberError","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper\/InvalidNumberError.html"," < StandardError","Raised when argument +number+ param given to the helpers is invalid and the option :raise is set to ",1],["PrototypeHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/PrototypeHelper.html"," < ","Prototype[http:\/\/www.prototypejs.org\/] is a JavaScript library that provides DOM[http:\/\/en.wikipedia.org\/wiki\/Document_Object_Model]",1],["GeneratorMethods","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html"," < ","JavaScriptGenerator generates blocks of JavaScript code that allow you to change the content and presentation",1],["RawOutputHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/RawOutputHelper.html"," < ","",1],["RecordTagHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/RecordTagHelper.html"," < ","",1],["SanitizeHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/SanitizeHelper.html"," < ","The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements. These",1],["ScriptaculousHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/ScriptaculousHelper.html"," < ","Provides a set of helpers for calling Scriptaculous[http:\/\/script.aculo.us\/] JavaScript functions, including",1],["TagHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/TagHelper.html"," < ","Provides methods to generate HTML tags programmatically when you can't use a Builder. By default, they",1],["TextHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/TextHelper.html"," < ","The TextHelper module provides a set of methods for filtering, formatting and transforming strings, which",1],["TranslationHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/TranslationHelper.html"," < ","",1],["UrlHelper","ActionView::Helpers","classes\/ActionView\/Helpers\/UrlHelper.html"," < ","Provides a set of methods for making links and getting URLs that depend on the routing subsystem (see",1],["Layouts","ActionView","classes\/ActionView\/Layouts.html"," < ","= Action View Layouts ",1],["LogSubscriber","ActionView","classes\/ActionView\/LogSubscriber.html"," < ActiveSupport::LogSubscriber","= Action View Log Subscriber Provides functionality so that Rails can output logs from Action View. ",1],["Details","ActionView::LookupContext","classes\/ActionView\/LookupContext\/Details.html"," < ","",1],["ViewPaths","ActionView::LookupContext","classes\/ActionView\/LookupContext\/ViewPaths.html"," < ","",1],["NonConcattingString","ActionView","classes\/ActionView\/NonConcattingString.html"," < ActiveSupport::SafeBuffer","",1],["NullResolver","ActionView","classes\/ActionView\/NullResolver.html"," < ActionView::PathResolver","",1],["OutputBuffer","ActionView","classes\/ActionView\/OutputBuffer.html"," < ActiveSupport::SafeBuffer","",1],["Partials","ActionView","classes\/ActionView\/Partials.html"," < ","= Action View Partials There's also a convenience method for rendering sub templates within the current",1],["PartialRenderer","ActionView::Partials","classes\/ActionView\/Partials\/PartialRenderer.html"," < Object","",1],["PathResolver","ActionView","classes\/ActionView\/PathResolver.html"," < Resolver","",1],["Railtie","ActionView","classes\/ActionView\/Railtie.html"," < Rails::Railtie","= Action View Railtie ",1],["Rendering","ActionView","classes\/ActionView\/Rendering.html"," < ","= Action View Rendering ",1],["Resolver","ActionView","classes\/ActionView\/Resolver.html"," < Object","= Action View Resolver ",1],["Template","ActionView","classes\/ActionView\/Template.html"," < Object","= Action View Template ",1],["Handler","ActionView::Template","classes\/ActionView\/Template\/Handler.html"," < Object","",1],["Builder","ActionView::Template::Handlers","classes\/ActionView\/Template\/Handlers\/Builder.html"," < Template::Handler","",1],["Compilable","ActionView::Template::Handlers","classes\/ActionView\/Template\/Handlers\/Compilable.html"," < ","",1],["ClassMethods","ActionView::Template::Handlers::Compilable","classes\/ActionView\/Template\/Handlers\/Compilable\/ClassMethods.html"," < ","",1],["ERB","ActionView::Template::Handlers","classes\/ActionView\/Template\/Handlers\/ERB.html"," < Handler","",1],["Erubis","ActionView::Template::Handlers","classes\/ActionView\/Template\/Handlers\/Erubis.html"," < ::Erubis::Eruby","",1],["RJS","ActionView::Template::Handlers","classes\/ActionView\/Template\/Handlers\/RJS.html"," < Template::Handler","",1],["TestCase","ActionView","classes\/ActionView\/TestCase.html"," < ActiveSupport::TestCase","= Action View Test Case ",1],["Behavior","ActionView::TestCase","classes\/ActionView\/TestCase\/Behavior.html"," < ","",1],["ClassMethods","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html"," < ","",1],["Locals","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior\/Locals.html"," < ","",1],["TestController","ActionView::TestCase","classes\/ActionView\/TestCase\/TestController.html"," < ActionController::Base","",1],["AttributeMethods","ActiveModel","classes\/ActiveModel\/AttributeMethods.html"," < ","== Active Model Attribute Methods <tt>ActiveModel::AttributeMethods<\/tt> provides a way to add prefixes",1],["ClassMethods","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html"," < ","",1],["AttributeMethodMatcher","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html"," < Object","",1],["BlockValidator","ActiveModel","classes\/ActiveModel\/BlockValidator.html"," < EachValidator","BlockValidator is a special EachValidator which receives a block on initialization and call this block",1],["Callbacks","ActiveModel","classes\/ActiveModel\/Callbacks.html"," < ","== Active Model Callbacks Provides an interface for any class to have Active Record like callbacks. Like",1],["Conversion","ActiveModel","classes\/ActiveModel\/Conversion.html"," < ","== Active Model Conversions Handles default conversions: to_model, to_key and to_param. == Example Let's",1],["DeprecatedErrorMethods","ActiveModel","classes\/ActiveModel\/DeprecatedErrorMethods.html"," < ","",1],["Dirty","ActiveModel","classes\/ActiveModel\/Dirty.html"," < ","== Active Model Dirty Provides a way to track changes in your object in the same way as Active Record",1],["EachValidator","ActiveModel","classes\/ActiveModel\/EachValidator.html"," < Validator","EachValidator is a validator which iterates through the attributes given in the options hash invoking",1],["Errors","ActiveModel","classes\/ActiveModel\/Errors.html"," < ActiveSupport::OrderedHash","== Active Model Errors Provides a modified +OrderedHash+ that you can include in your object for handling",1],["Lint","ActiveModel","classes\/ActiveModel\/Lint.html"," < ","",1],["Tests","ActiveModel::Lint","classes\/ActiveModel\/Lint\/Tests.html"," < ","== Active Model Lint Tests You can test whether an object is compliant with the Active Model API by including",1],["MassAssignmentSecurity","ActiveModel","classes\/ActiveModel\/MassAssignmentSecurity.html"," < ","= Active Model Mass-Assignment Security ",1],["BlackList","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/BlackList.html"," < PermissionSet","",1],["ClassMethods","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html"," < ","Mass assignment security provides an interface for protecting attributes from end-user assignment. For",1],["PermissionSet","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html"," < Set","",1],["Sanitizer","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html"," < ","",1],["WhiteList","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity\/WhiteList.html"," < PermissionSet","",1],["MissingAttributeError","ActiveModel","classes\/ActiveModel\/MissingAttributeError.html"," < NoMethodError","",1],["Name","ActiveModel","classes\/ActiveModel\/Name.html"," < String","",1],["Naming","ActiveModel","classes\/ActiveModel\/Naming.html"," < ","== Active Model Naming Creates a +model_name+ method on your object. To implement, just extend ActiveModel::Naming",1],["Observer","ActiveModel","classes\/ActiveModel\/Observer.html"," < Object","== Active Model Observers Observer classes respond to life cycle callbacks to implement trigger-like",1],["Observing","ActiveModel","classes\/ActiveModel\/Observing.html"," < ","",1],["ClassMethods","ActiveModel::Observing","classes\/ActiveModel\/Observing\/ClassMethods.html"," < ","",1],["Serialization","ActiveModel","classes\/ActiveModel\/Serialization.html"," < ","== Active Model Serialization Provides a basic serialization to a serializable_hash for your object.",1],["Serializers","ActiveModel","classes\/ActiveModel\/Serializers.html"," < ","== Active Model XML Serializer --- == Active Model JSON Serializer ",1],["JSON","ActiveModel::Serializers","classes\/ActiveModel\/Serializers\/JSON.html"," < ","",1],["Xml","ActiveModel::Serializers","classes\/ActiveModel\/Serializers\/Xml.html"," < ","",1],["Translation","ActiveModel","classes\/ActiveModel\/Translation.html"," < ","== Active Model Translation Provides integration between your object and the Rails internationalization",1],["Validations","ActiveModel","classes\/ActiveModel\/Validations.html"," < ","== Active Model Numericality Validator --- == Active Model Exclusion Validator --- == Active Model validates",1],["AcceptanceValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/AcceptanceValidator.html"," < EachValidator","",1],["Callbacks","ActiveModel::Validations","classes\/ActiveModel\/Validations\/Callbacks.html"," < ","",1],["ClassMethods","ActiveModel::Validations::Callbacks","classes\/ActiveModel\/Validations\/Callbacks\/ClassMethods.html"," < ","",1],["ClassMethods","ActiveModel::Validations","classes\/ActiveModel\/Validations\/ClassMethods.html"," < ","",1],["ConfirmationValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/ConfirmationValidator.html"," < EachValidator","",1],["ExclusionValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/ExclusionValidator.html"," < EachValidator","",1],["FormatValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/FormatValidator.html"," < EachValidator","",1],["HelperMethods","ActiveModel::Validations","classes\/ActiveModel\/Validations\/HelperMethods.html"," < ","",1],["InclusionValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/InclusionValidator.html"," < EachValidator","",1],["LengthValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/LengthValidator.html"," < EachValidator","",1],["NumericalityValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/NumericalityValidator.html"," < EachValidator","",1],["PresenceValidator","ActiveModel::Validations","classes\/ActiveModel\/Validations\/PresenceValidator.html"," < EachValidator","",1],["Validator","ActiveModel","classes\/ActiveModel\/Validator.html"," < Object","== Active Model Validator A simple base class that can be used along with ActiveModel::Validations::ClassMethods.validates_with",1],["ActiveRecordError","ActiveRecord","classes\/ActiveRecord\/ActiveRecordError.html"," < StandardError","= Active Record Errors Generic Active Record exception class. ",1],["AdapterNotFound","ActiveRecord","classes\/ActiveRecord\/AdapterNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find database adapter specified in <tt>config\/database.yml<\/tt> or programmatically.",1],["AdapterNotSpecified","ActiveRecord","classes\/ActiveRecord\/AdapterNotSpecified.html"," < ActiveRecordError","Raised when adapter not specified on connection (or configuration file <tt>config\/database.yml<\/tt> misses",1],["ClassMethods","ActiveRecord::Aggregations","classes\/ActiveRecord\/Aggregations\/ClassMethods.html"," < ","Active Record implements aggregation through a macro-like class method called +composed_of+ for representing",1],["ClassMethods","ActiveRecord::AssociationPreload","classes\/ActiveRecord\/AssociationPreload\/ClassMethods.html"," < ","Implements the details of eager loading of Active Record associations. Application developers should",1],["AssociationTypeMismatch","ActiveRecord","classes\/ActiveRecord\/AssociationTypeMismatch.html"," < ActiveRecordError","Raised when an object assigned to an association has an incorrect type. class Ticket < ActiveRecord::Base",1],["ClassMethods","ActiveRecord::Associations","classes\/ActiveRecord\/Associations\/ClassMethods.html"," < ","Associations are a set of macro-like class methods for tying objects together through foreign keys. They",1],["HasOneThroughAssociation","ActiveRecord::Associations","classes\/ActiveRecord\/Associations\/HasOneThroughAssociation.html"," < HasOneAssociation","",1],["ThroughAssociationScope","ActiveRecord::Associations","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html"," < ","",1],["AttributeAssignmentError","ActiveRecord","classes\/ActiveRecord\/AttributeAssignmentError.html"," < ActiveRecordError","Raised when an error occurred while doing a mass assignment to an attribute through the <tt>attributes=<\/tt>",1],["BeforeTypeCast","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/BeforeTypeCast.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/ClassMethods.html"," < ","",1],["Dirty","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Dirty.html"," < ","",1],["PrimaryKey","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::PrimaryKey","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html"," < ","",1],["Query","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Query.html"," < ","",1],["Read","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Read.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::Read","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html"," < ","",1],["TimeZoneConversion","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/TimeZoneConversion.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::TimeZoneConversion","classes\/ActiveRecord\/AttributeMethods\/TimeZoneConversion\/ClassMethods.html"," < ","",1],["Write","ActiveRecord::AttributeMethods","classes\/ActiveRecord\/AttributeMethods\/Write.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::Write","classes\/ActiveRecord\/AttributeMethods\/Write\/ClassMethods.html"," < ","",1],["AutosaveAssociation","ActiveRecord","classes\/ActiveRecord\/AutosaveAssociation.html"," < ","= Active Record Autosave Association +AutosaveAssociation+ is a module that takes care of automatically",1],["ClassMethods","ActiveRecord::AutosaveAssociation","classes\/ActiveRecord\/AutosaveAssociation\/ClassMethods.html"," < ","",1],["Base","ActiveRecord","classes\/ActiveRecord\/Base.html"," < Object","= Active Record Active Record objects don't specify their attributes directly, but rather infer them",1],["Calculations","ActiveRecord","classes\/ActiveRecord\/Calculations.html"," < ","",1],["Callbacks","ActiveRecord","classes\/ActiveRecord\/Callbacks.html"," < ","= Active Record Callbacks Callbacks are hooks into the life cycle of an Active Record object that allow",1],["ClassMethods","ActiveRecord::Callbacks","classes\/ActiveRecord\/Callbacks\/ClassMethods.html"," < ","",1],["ConfigurationError","ActiveRecord","classes\/ActiveRecord\/ConfigurationError.html"," < ActiveRecordError","Raised when association is being configured improperly or user tries to use offset and limit together",1],["AbstractAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html"," < Object","Active Record supports multiple database systems. AbstractAdapter and related classes form the abstraction",1],["Column","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/Column.html"," < Object","An abstract definition of a column in a table. ",1],["Format","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column\/Format.html"," < ","",1],["ConnectionHandler","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html"," < Object","ConnectionHandler is a collection of ConnectionPool objects. It is used for keeping separate connection",1],["ConnectionManagement","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html"," < Object","",1],["ConnectionPool","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html"," < Object","Connection pool base class for managing Active Record database connections. == Introduction A connection",1],["DatabaseLimits","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html"," < ","",1],["DatabaseStatements","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html"," < ","",1],["MysqlAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html"," < AbstractAdapter","The MySQL adapter will work with both Ruby\/MySQL, which is a Ruby-based MySQL adapter that comes bundled",1],["PostgreSQLAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html"," < AbstractAdapter","The PostgreSQL adapter works both with the native C (http:\/\/ruby.scripting.ca\/postgres\/) and the pure",1],["PostgreSQLColumn","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLColumn.html"," < Column","PostgreSQL-specific extensions to column definitions in a table. ",1],["QueryCache","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html"," < ","",1],["Quoting","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html"," < ","",1],["SQLiteAdapter","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html"," < AbstractAdapter","The SQLite adapter works with both the 2.x and 3.x series of SQLite with the sqlite-ruby drivers (available",1],["Version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html"," < Object","",1],["SchemaStatements","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html"," < ","",1],["Table","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/Table.html"," < Object","Represents an SQL table in an abstract way for updating a table. Also see TableDefinition and SchemaStatements#create_table",1],["TableDefinition","ActiveRecord::ConnectionAdapters","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html"," < Object","Represents the schema of an SQL table in an abstract way. This class provides methods for manipulating",1],["ConnectionNotEstablished","ActiveRecord","classes\/ActiveRecord\/ConnectionNotEstablished.html"," < ActiveRecordError","Raised when connection to the database could not been established (for example when <tt>connection=<\/tt>",1],["ConnectionTimeoutError","ActiveRecord","classes\/ActiveRecord\/ConnectionTimeoutError.html"," < ConnectionNotEstablished","Raised when a connection could not be obtained within the connection acquisition timeout period. ",1],["CounterCache","ActiveRecord","classes\/ActiveRecord\/CounterCache.html"," < ","= Active Record Counter Cache ",1],["DangerousAttributeError","ActiveRecord","classes\/ActiveRecord\/DangerousAttributeError.html"," < ActiveRecordError","Raised when attribute has a name reserved by Active Record (when attribute has name of one of Active",1],["DynamicFinderMatch","ActiveRecord","classes\/ActiveRecord\/DynamicFinderMatch.html"," < Object","= Active Record Dynamic Finder Match Refer to ActiveRecord::Base documentation for Dynamic attribute-based",1],["DynamicScopeMatch","ActiveRecord","classes\/ActiveRecord\/DynamicScopeMatch.html"," < Object","= Active Record Dynamic Scope Match Provides dynamic attribute-based scopes such as <tt>scoped_by_price(4.99)<\/tt>",1],["FinderMethods","ActiveRecord","classes\/ActiveRecord\/FinderMethods.html"," < ","",1],["InvalidForeignKey","ActiveRecord","classes\/ActiveRecord\/InvalidForeignKey.html"," < WrappedDatabaseException","Raised when a record cannot be inserted or updated because it references a non-existent record. ",1],["IrreversibleMigration","ActiveRecord","classes\/ActiveRecord\/IrreversibleMigration.html"," < ActiveRecordError","Exception that can be raised to stop migrations from going backwards. ",1],["Locking","ActiveRecord","classes\/ActiveRecord\/Locking.html"," < ","",1],["Optimistic","ActiveRecord::Locking","classes\/ActiveRecord\/Locking\/Optimistic.html"," < ","== What is Optimistic Locking Optimistic locking allows multiple users to access the same record for",1],["ClassMethods","ActiveRecord::Locking::Optimistic","classes\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html"," < ","",1],["Pessimistic","ActiveRecord::Locking","classes\/ActiveRecord\/Locking\/Pessimistic.html"," < ","Locking::Pessimistic provides support for row-level locking using SELECT ... FOR UPDATE and other lock",1],["LogSubscriber","ActiveRecord","classes\/ActiveRecord\/LogSubscriber.html"," < ActiveSupport::LogSubscriber","",1],["Migration","ActiveRecord","classes\/ActiveRecord\/Migration.html"," < Object","= Active Record Migrations Migrations can manage the evolution of a schema used by several physical databases.",1],["MigrationProxy","ActiveRecord","classes\/ActiveRecord\/MigrationProxy.html"," < Object","MigrationProxy is used to defer loading of the actual migration classes until they are needed ",1],["MultiparameterAssignmentErrors","ActiveRecord","classes\/ActiveRecord\/MultiparameterAssignmentErrors.html"," < ActiveRecordError","Raised when there are multiple errors while doing a mass assignment through the +attributes+ method.",1],["NamedScope","ActiveRecord","classes\/ActiveRecord\/NamedScope.html"," < ","= Active Record Named \\Scopes ",1],["ClassMethods","ActiveRecord::NamedScope","classes\/ActiveRecord\/NamedScope\/ClassMethods.html"," < ","",1],["ClassMethods","ActiveRecord::NestedAttributes","classes\/ActiveRecord\/NestedAttributes\/ClassMethods.html"," < ","= Active Record Nested Attributes Nested attributes allow you to save attributes on associated records",1],["TooManyRecords","ActiveRecord::NestedAttributes","classes\/ActiveRecord\/NestedAttributes\/TooManyRecords.html"," < ActiveRecordError","",1],["Observer","ActiveRecord","classes\/ActiveRecord\/Observer.html"," < ActiveModel::Observer","= Active Record Observer Observer classes respond to life cycle callbacks to implement trigger-like behavior",1],["Persistence","ActiveRecord","classes\/ActiveRecord\/Persistence.html"," < ","= Active Record Persistence ",1],["PredicateBuilder","ActiveRecord","classes\/ActiveRecord\/PredicateBuilder.html"," < Object","",1],["PreparedStatementInvalid","ActiveRecord","classes\/ActiveRecord\/PreparedStatementInvalid.html"," < ActiveRecordError","Raised when number of bind variables in statement given to <tt>:condition<\/tt> key (for example, when",1],["QueryCache","ActiveRecord","classes\/ActiveRecord\/QueryCache.html"," < Object","= Active Record Query Cache ",1],["ClassMethods","ActiveRecord::QueryCache","classes\/ActiveRecord\/QueryCache\/ClassMethods.html"," < ","",1],["QueryMethods","ActiveRecord","classes\/ActiveRecord\/QueryMethods.html"," < ","",1],["Railtie","ActiveRecord","classes\/ActiveRecord\/Railtie.html"," < Rails::Railtie","= Active Record Railtie ",1],["Railties","ActiveRecord","classes\/ActiveRecord\/Railties.html"," < ","",1],["ControllerRuntime","ActiveRecord::Railties","classes\/ActiveRecord\/Railties\/ControllerRuntime.html"," < ","",1],["ClassMethods","ActiveRecord::Railties::ControllerRuntime","classes\/ActiveRecord\/Railties\/ControllerRuntime\/ClassMethods.html"," < ","",1],["ReadOnlyRecord","ActiveRecord","classes\/ActiveRecord\/ReadOnlyRecord.html"," < ActiveRecordError","Raised on attempt to update record that is instantiated as read only. ",1],["RecordInvalid","ActiveRecord","classes\/ActiveRecord\/RecordInvalid.html"," < ActiveRecordError","= Active Record Validations Raised by <tt>save!<\/tt> and <tt>create!<\/tt> when the record is invalid.",1],["RecordNotFound","ActiveRecord","classes\/ActiveRecord\/RecordNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find record by given id or set of ids. ",1],["RecordNotSaved","ActiveRecord","classes\/ActiveRecord\/RecordNotSaved.html"," < ActiveRecordError","Raised by ActiveRecord::Base.save! and ActiveRecord::Base.create! methods when record cannot be saved",1],["RecordNotUnique","ActiveRecord","classes\/ActiveRecord\/RecordNotUnique.html"," < WrappedDatabaseException","Raised when a record cannot be inserted because it would violate a uniqueness constraint. ",1],["ClassMethods","ActiveRecord::Reflection","classes\/ActiveRecord\/Reflection\/ClassMethods.html"," < ","Reflection enables to interrogate Active Record classes and objects about their associations and aggregations.",1],["MacroReflection","ActiveRecord::Reflection","classes\/ActiveRecord\/Reflection\/MacroReflection.html"," < Object","Abstract base class for AggregateReflection and AssociationReflection. Objects of AggregateReflection",1],["Relation","ActiveRecord","classes\/ActiveRecord\/Relation.html"," < Object","= Active Record Relation ",1],["Rollback","ActiveRecord","classes\/ActiveRecord\/Rollback.html"," < ActiveRecordError","ActiveRecord::Transactions::ClassMethods.transaction uses this exception to distinguish a deliberate",1],["Schema","ActiveRecord","classes\/ActiveRecord\/Schema.html"," < Migration","= Active Record Schema Allows programmers to programmatically define a schema in a portable DSL. This",1],["Serialization","ActiveRecord","classes\/ActiveRecord\/Serialization.html"," < ","= Active Record Serialization ",1],["SerializationTypeMismatch","ActiveRecord","classes\/ActiveRecord\/SerializationTypeMismatch.html"," < ActiveRecordError","Raised when unserialized object's type mismatches one specified for serializable field. ",1],["SessionStore","ActiveRecord","classes\/ActiveRecord\/SessionStore.html"," < ActionDispatch::Session::AbstractStore","= Active Record Session Store A session store backed by an Active Record class.  A default class is provided,",1],["Session","ActiveRecord::SessionStore","classes\/ActiveRecord\/SessionStore\/Session.html"," < ActiveRecord::Base","The default Active Record class. ",1],["SqlBypass","ActiveRecord::SessionStore","classes\/ActiveRecord\/SessionStore\/SqlBypass.html"," < Object","A barebones session store which duck-types with the default session store but bypasses Active Record",1],["SpawnMethods","ActiveRecord","classes\/ActiveRecord\/SpawnMethods.html"," < ","",1],["StaleObjectError","ActiveRecord","classes\/ActiveRecord\/StaleObjectError.html"," < ActiveRecordError","Raised on attempt to save stale record. Record is stale when it's being saved in another query after",1],["StatementInvalid","ActiveRecord","classes\/ActiveRecord\/StatementInvalid.html"," < ActiveRecordError","Raised when SQL statement cannot be executed by the database (for example, it's often the case for MySQL",1],["TestFixtures","ActiveRecord","classes\/ActiveRecord\/TestFixtures.html"," < ","",1],["ClassMethods","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html"," < ","",1],["ThrowResult","ActiveRecord","classes\/ActiveRecord\/ThrowResult.html"," < ActiveRecordError","Raised when SQL statement is invalid and the application gets a blank result. ",1],["Timestamp","ActiveRecord","classes\/ActiveRecord\/Timestamp.html"," < ","= Active Record Timestamp Active Record automatically timestamps create and update operations if the",1],["Transactions","ActiveRecord","classes\/ActiveRecord\/Transactions.html"," < ","See ActiveRecord::Transactions::ClassMethods for documentation. ",1],["ClassMethods","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions\/ClassMethods.html"," < ","= Active Record Transactions Transactions are protective blocks where SQL statements are only permanent",1],["UnknownAttributeError","ActiveRecord","classes\/ActiveRecord\/UnknownAttributeError.html"," < NoMethodError","Raised when unknown attributes are supplied via mass assignment. ",1],["Validations","ActiveRecord","classes\/ActiveRecord\/Validations.html"," < ","",1],["AssociatedValidator","ActiveRecord::Validations","classes\/ActiveRecord\/Validations\/AssociatedValidator.html"," < ActiveModel::EachValidator","",1],["ClassMethods","ActiveRecord::Validations","classes\/ActiveRecord\/Validations\/ClassMethods.html"," < ","",1],["UniquenessValidator","ActiveRecord::Validations","classes\/ActiveRecord\/Validations\/UniquenessValidator.html"," < ActiveModel::EachValidator","",1],["WrappedDatabaseException","ActiveRecord","classes\/ActiveRecord\/WrappedDatabaseException.html"," < StatementInvalid","Parent class for all specific exceptions which wrap database driver exceptions provides access to the",1],["BadRequest","ActiveResource","classes\/ActiveResource\/BadRequest.html"," < ClientError","400 Bad Request ",1],["Base","ActiveResource","classes\/ActiveResource\/Base.html"," < Object","ActiveResource::Base is the main class for mapping RESTful resources as models in a Rails application.",1],["ClientError","ActiveResource","classes\/ActiveResource\/ClientError.html"," < ConnectionError","4xx Client Error ",1],["Connection","ActiveResource","classes\/ActiveResource\/Connection.html"," < Object","Class to handle connections to remote web services. This class is used by ActiveResource::Base to interface",1],["CustomMethods","ActiveResource","classes\/ActiveResource\/CustomMethods.html"," < ","A module to support custom REST methods and sub-resources, allowing you to break out of the \"default\"",1],["ClassMethods","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods\/ClassMethods.html"," < ","",1],["InstanceMethods","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods\/InstanceMethods.html"," < ","",1],["Errors","ActiveResource","classes\/ActiveResource\/Errors.html"," < ActiveModel::Errors","Active Resource validation is reported to and from this object, which is used by Base#save to determine",1],["ForbiddenAccess","ActiveResource","classes\/ActiveResource\/ForbiddenAccess.html"," < ClientError","403 Forbidden ",1],["Formats","ActiveResource","classes\/ActiveResource\/Formats.html"," < ","",1],["JsonFormat","ActiveResource::Formats","classes\/ActiveResource\/Formats\/JsonFormat.html"," < ","",1],["XmlFormat","ActiveResource::Formats","classes\/ActiveResource\/Formats\/XmlFormat.html"," < ","",1],["HttpMock","ActiveResource","classes\/ActiveResource\/HttpMock.html"," < Object","One thing that has always been a pain with remote web services is testing.  The HttpMock class makes",1],["InvalidRequestError","ActiveResource","classes\/ActiveResource\/InvalidRequestError.html"," < StandardError","",1],["LogSubscriber","ActiveResource","classes\/ActiveResource\/LogSubscriber.html"," < ActiveSupport::LogSubscriber","",1],["Observing","ActiveResource","classes\/ActiveResource\/Observing.html"," < ","",1],["Railtie","ActiveResource","classes\/ActiveResource\/Railtie.html"," < Rails::Railtie","",1],["Request","ActiveResource","classes\/ActiveResource\/Request.html"," < Object","",1],["ResourceConflict","ActiveResource","classes\/ActiveResource\/ResourceConflict.html"," < ClientError","409 Conflict ",1],["ResourceGone","ActiveResource","classes\/ActiveResource\/ResourceGone.html"," < ClientError","410 Gone ",1],["ResourceNotFound","ActiveResource","classes\/ActiveResource\/ResourceNotFound.html"," < ClientError","404 Not Found ",1],["Response","ActiveResource","classes\/ActiveResource\/Response.html"," < Object","",1],["SSLError","ActiveResource","classes\/ActiveResource\/SSLError.html"," < ConnectionError","Raised when a OpenSSL::SSL::SSLError occurs. ",1],["ServerError","ActiveResource","classes\/ActiveResource\/ServerError.html"," < ConnectionError","5xx Server Error ",1],["TimeoutError","ActiveResource","classes\/ActiveResource\/TimeoutError.html"," < ConnectionError","Raised when a Timeout::Error occurs. ",1],["UnauthorizedAccess","ActiveResource","classes\/ActiveResource\/UnauthorizedAccess.html"," < ClientError","401 Unauthorized ",1],["Validations","ActiveResource","classes\/ActiveResource\/Validations.html"," < ","Module to support validation and errors with Active Resource objects. The module overrides Base#save",1],["Autoload","ActiveSupport","classes\/ActiveSupport\/Autoload.html"," < ","",1],["BacktraceCleaner","ActiveSupport","classes\/ActiveSupport\/BacktraceCleaner.html"," < Object","Many backtraces include too much information that's not relevant for the context. This makes it hard",1],["Base64","ActiveSupport","classes\/ActiveSupport\/Base64.html"," < ","Base64 provides utility methods for encoding and de-coding binary data using a base 64 representation.",1],["Benchmarkable","ActiveSupport","classes\/ActiveSupport\/Benchmarkable.html"," < ","",1],["BufferedLogger","ActiveSupport","classes\/ActiveSupport\/BufferedLogger.html"," < Object","Inspired by the buffered logger idea by Ezra ",1],["Severity","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger\/Severity.html"," < ","",1],["Cache","ActiveSupport","classes\/ActiveSupport\/Cache.html"," < ","See ActiveSupport::Cache::Store for documentation. ",1],["CompressedMemCacheStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/CompressedMemCacheStore.html"," < MemCacheStore","",1],["Entry","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/Entry.html"," < Object","Entry that is put into caches. It supports expiration time on entries and can compress values to save",1],["FileStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/FileStore.html"," < Store","A cache store implementation which stores everything on the filesystem. FileStore implements the Strategy::LocalCache",1],["MemCacheStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/MemCacheStore.html"," < Store","A cache store implementation which stores data in Memcached: http:\/\/www.danga.com\/memcached\/ This is",1],["MemoryStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/MemoryStore.html"," < Store","A cache store implementation which stores everything into memory in the same process. If you're running",1],["Store","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/Store.html"," < Object","An abstract cache store class. There are multiple cache store implementations, each having its own additional",1],["Strategy","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/Strategy.html"," < ","",1],["LocalCache","ActiveSupport::Cache::Strategy","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache.html"," < ","Caches that implement LocalCache will be backed by an in memory cache for the duration of a block. Repeated",1],["LocalStore","ActiveSupport::Cache::Strategy::LocalCache","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html"," < Store","Simple memory backed cache. This cache is not thread safe and is intended only for serving as a temporary",1],["SynchronizedMemoryStore","ActiveSupport::Cache","classes\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html"," < MemoryStore","Like MemoryStore, but thread-safe. ",1],["Callbacks","ActiveSupport","classes\/ActiveSupport\/Callbacks.html"," < ","Callbacks are hooks into the life cycle of an object that allow you to trigger logic before or after",1],["Callback","ActiveSupport::Callbacks","classes\/ActiveSupport\/Callbacks\/Callback.html"," < Object","",1],["CallbackChain","ActiveSupport::Callbacks","classes\/ActiveSupport\/Callbacks\/CallbackChain.html"," < Array","An Array with a compile method ",1],["ClassMethods","ActiveSupport::Callbacks","classes\/ActiveSupport\/Callbacks\/ClassMethods.html"," < ","",1],["Concern","ActiveSupport","classes\/ActiveSupport\/Concern.html"," < ","",1],["Configurable","ActiveSupport","classes\/ActiveSupport\/Configurable.html"," < ","",1],["ClassMethods","ActiveSupport::Configurable","classes\/ActiveSupport\/Configurable\/ClassMethods.html"," < ","",1],["Reference","ActiveSupport::Dependencies","classes\/ActiveSupport\/Dependencies\/Reference.html"," < Object","",1],["WatchStack","ActiveSupport::Dependencies","classes\/ActiveSupport\/Dependencies\/WatchStack.html"," < Hash","The WatchStack keeps a stack of the modules being watched as files are loaded. If a file in the process",1],["DescendantsTracker","ActiveSupport","classes\/ActiveSupport\/DescendantsTracker.html"," < ","This module provides an internal implementation to track descendants which is faster than iterating through",1],["Duration","ActiveSupport","classes\/ActiveSupport\/Duration.html"," < BasicObject","Provides accurate date and time measurements using Date#advance and Time#advance, respectively. It mainly",1],["FileUpdateChecker","ActiveSupport","classes\/ActiveSupport\/FileUpdateChecker.html"," < Object","This class is responsible to track files and invoke the given block whenever one of these files are changed.",1],["Gzip","ActiveSupport","classes\/ActiveSupport\/Gzip.html"," < ","A convenient wrapper for the zlib standard library that allows compression\/decompression of strings with",1],["Stream","ActiveSupport::Gzip","classes\/ActiveSupport\/Gzip\/Stream.html"," < StringIO","",1],["HashWithIndifferentAccess","ActiveSupport","classes\/ActiveSupport\/HashWithIndifferentAccess.html"," < Hash","",1],["Inflector","ActiveSupport","classes\/ActiveSupport\/Inflector.html"," < ","The Inflector transforms words from singular to plural, class names to table names, modularized class",1],["Inflections","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector\/Inflections.html"," < Object","A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify",1],["InheritableOptions","ActiveSupport","classes\/ActiveSupport\/InheritableOptions.html"," < OrderedOptions","",1],["JSON","ActiveSupport","classes\/ActiveSupport\/JSON.html"," < ","",1],["Backends","ActiveSupport::JSON","classes\/ActiveSupport\/JSON\/Backends.html"," < ","",1],["JSONGem","ActiveSupport::JSON::Backends","classes\/ActiveSupport\/JSON\/Backends\/JSONGem.html"," < ","",1],["Yajl","ActiveSupport::JSON::Backends","classes\/ActiveSupport\/JSON\/Backends\/Yajl.html"," < ","",1],["Yaml","ActiveSupport::JSON::Backends","classes\/ActiveSupport\/JSON\/Backends\/Yaml.html"," < ","",1],["CircularReferenceError","ActiveSupport::JSON::Encoding","classes\/ActiveSupport\/JSON\/Encoding\/CircularReferenceError.html"," < StandardError","",1],["Encoder","ActiveSupport::JSON::Encoding","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html"," < Object","",1],["Variable","ActiveSupport::JSON","classes\/ActiveSupport\/JSON\/Variable.html"," < String","A string that returns itself as its JSON-encoded form. ",1],["LogSubscriber","ActiveSupport","classes\/ActiveSupport\/LogSubscriber.html"," < Object","ActiveSupport::LogSubscriber is an object set to consume ActiveSupport::Notifications with solely purpose",1],["TestHelper","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html"," < ","Provides some helpers to deal with testing log subscribers by setting up notifications. Take for instance",1],["MockLogger","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html"," < Object","",1],["Memoizable","ActiveSupport","classes\/ActiveSupport\/Memoizable.html"," < ","",1],["InstanceMethods","ActiveSupport::Memoizable","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html"," < ","",1],["MessageEncryptor","ActiveSupport","classes\/ActiveSupport\/MessageEncryptor.html"," < Object","MessageEncryptor is a simple way to encrypt values which get stored somewhere you don't trust. The cipher",1],["InvalidMessage","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor\/InvalidMessage.html"," < StandardError","",1],["MessageVerifier","ActiveSupport","classes\/ActiveSupport\/MessageVerifier.html"," < Object","MessageVerifier makes it easy to generate and verify messages which are signed to prevent tampering.",1],["InvalidSignature","ActiveSupport::MessageVerifier","classes\/ActiveSupport\/MessageVerifier\/InvalidSignature.html"," < StandardError","",1],["Chars","ActiveSupport::Multibyte","classes\/ActiveSupport\/Multibyte\/Chars.html"," < Object","Chars enables you to work transparently with UTF-8 encoding in the Ruby String class without having extensive",1],["EncodingError","ActiveSupport::Multibyte","classes\/ActiveSupport\/Multibyte\/EncodingError.html"," < StandardError","Raised when a problem with the encoding was found. ",1],["Unicode","ActiveSupport::Multibyte","classes\/ActiveSupport\/Multibyte\/Unicode.html"," < ","",1],["Codepoint","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode\/Codepoint.html"," < Object","Holds data about a codepoint in the Unicode database ",1],["UnicodeDatabase","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html"," < Object","Holds static data from the Unicode database ",1],["Notifications","ActiveSupport","classes\/ActiveSupport\/Notifications.html"," < ","Notifications provides an instrumentation API for Ruby. To instrument an action in Ruby you just need",1],["Event","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications\/Event.html"," < Object","",1],["Fanout","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications\/Fanout.html"," < Object","This is a default queue implementation that ships with Notifications. It just pushes events to all registered",1],["Instrumenter","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications\/Instrumenter.html"," < Object","",1],["OrderedOptions","ActiveSupport","classes\/ActiveSupport\/OrderedOptions.html"," < OrderedHash","",1],["Railtie","ActiveSupport","classes\/ActiveSupport\/Railtie.html"," < Rails::Railtie","",1],["Rescuable","ActiveSupport","classes\/ActiveSupport\/Rescuable.html"," < ","Rescuable module adds support for easier exception handling. ",1],["ClassMethods","ActiveSupport::Rescuable","classes\/ActiveSupport\/Rescuable\/ClassMethods.html"," < ","",1],["SafeBuffer","ActiveSupport","classes\/ActiveSupport\/SafeBuffer.html"," < String","",1],["SecureRandom","ActiveSupport","classes\/ActiveSupport\/SecureRandom.html"," < ","= Secure random number generator interface. This library is an interface for secure random number generator",1],["StringInquirer","ActiveSupport","classes\/ActiveSupport\/StringInquirer.html"," < String","Wrapping a string in this class gives you a prettier way to test for equality. The value returned by",1],["TestCase","ActiveSupport","classes\/ActiveSupport\/TestCase.html"," < ::Test::Unit::TestCase","",1],["Testing","ActiveSupport","classes\/ActiveSupport\/Testing.html"," < ","",1],["Assertions","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Assertions.html"," < ","",1],["Declarative","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Declarative.html"," < ","",1],["Isolation","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Isolation.html"," < ","",1],["Forking","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation\/Forking.html"," < ","",1],["MiniTest","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation\/MiniTest.html"," < ","",1],["Subprocess","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation\/Subprocess.html"," < ","",1],["TestUnit","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation\/TestUnit.html"," < ","",1],["Pending","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Pending.html"," < ","",1],["Performance","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/Performance.html"," < ","",1],["Benchmarker","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html"," < Performer","",1],["Metrics","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/Metrics.html"," < ","",1],["Base","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html"," < Object","",1],["CpuTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html"," < Time","",1],["GcRuns","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html"," < Base","",1],["GcTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html"," < Base","",1],["Memory","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html"," < Base","",1],["Objects","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html"," < Base","",1],["ProcessTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/ProcessTime.html"," < Time","",1],["Time","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html"," < Base","",1],["WallTime","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/WallTime.html"," < Time","",1],["Performer","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/Performer.html"," < Object","",1],["Profiler","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html"," < Performer","",1],["ProxyTestResult","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/ProxyTestResult.html"," < Object","",1],["RemoteError","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/RemoteError.html"," < StandardError","",1],["SetupAndTeardown","ActiveSupport::Testing","classes\/ActiveSupport\/Testing\/SetupAndTeardown.html"," < ","",1],["ClassMethods","ActiveSupport::Testing::SetupAndTeardown","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ClassMethods.html"," < ","",1],["ForClassicTestUnit","ActiveSupport::Testing::SetupAndTeardown","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ForClassicTestUnit.html"," < ","",1],["ForMiniTest","ActiveSupport::Testing::SetupAndTeardown","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ForMiniTest.html"," < ","",1],["TimeWithZone","ActiveSupport","classes\/ActiveSupport\/TimeWithZone.html"," < Object","A Time-like class that can represent a time in any time zone. Necessary because standard Ruby Time instances",1],["TimeZone","ActiveSupport","classes\/ActiveSupport\/TimeZone.html"," < Object","",1],["XmlMini","ActiveSupport","classes\/ActiveSupport\/XmlMini.html"," < ","= XmlMini To use the much faster libxml parser: gem 'libxml-ruby', '=0.9.7' XmlMini.backend = 'LibXML'",1],["XmlMini_LibXMLSAX","ActiveSupport","classes\/ActiveSupport\/XmlMini_LibXMLSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_LibXMLSAX","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html"," < Object","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["XmlMini_NokogiriSAX","ActiveSupport","classes\/ActiveSupport\/XmlMini_NokogiriSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_NokogiriSAX","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html"," < Nokogiri::XML::SAX::Document","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["BigDecimal","activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions.rb","classes\/BigDecimal.html"," < Object","",1],["Commands","railties\/lib\/rails\/commands\/plugin.rb","classes\/Commands.html"," < ","",1],["Info","Commands","classes\/Commands\/Info.html"," < Object","",1],["Install","Commands","classes\/Commands\/Install.html"," < Object","",1],["Plugin","Commands","classes\/Commands\/Plugin.html"," < Object","",1],["Remove","Commands","classes\/Commands\/Remove.html"," < Object","",1],["DateTime","activesupport\/lib\/active_support\/core_ext\/date_time\/calculations.rb","classes\/DateTime.html"," < Object","",1],["ERB","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","classes\/ERB.html"," < Object","",1],["Util","ERB","classes\/ERB\/Util.html"," < ","",1],["Enumerable","activesupport\/lib\/active_support\/core_ext\/enumerable.rb","classes\/Enumerable.html"," < ","",1],["Erb","railties\/lib\/rails\/generators\/erb\/controller\/controller_generator.rb","classes\/Erb.html"," < ","",1],["Generators","Erb","classes\/Erb\/Generators.html"," < ","",1],["ControllerGenerator","Erb::Generators","classes\/Erb\/Generators\/ControllerGenerator.html"," < Base","",1],["MailerGenerator","Erb::Generators","classes\/Erb\/Generators\/MailerGenerator.html"," < ControllerGenerator","",1],["ScaffoldGenerator","Erb::Generators","classes\/Erb\/Generators\/ScaffoldGenerator.html"," < Base","",1],["File","activesupport\/lib\/active_support\/core_ext\/file\/path.rb","classes\/File.html"," < Object","",1],["Fixnum","activesupport\/lib\/active_support\/core_ext\/string\/output_safety.rb","classes\/Fixnum.html"," < Object","",1],["Fixtures","activerecord\/lib\/active_record\/fixtures.rb","classes\/Fixtures.html"," < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)","Fixtures are a way of organizing data that you want to test against; in short, sample data. = Fixture",1],["FixturesFileNotFound","activerecord\/lib\/active_record\/fixtures.rb","classes\/FixturesFileNotFound.html"," < StandardError","",1],["Float","activesupport\/lib\/active_support\/core_ext\/float\/rounding.rb","classes\/Float.html"," < Object","",1],["I18n","activesupport\/lib\/active_support\/i18n_railtie.rb","classes\/I18n.html"," < ","",1],["ExceptionHandler","I18n","classes\/I18n\/ExceptionHandler.html"," < Object","",1],["Railtie","I18n","classes\/I18n\/Railtie.html"," < Rails::Railtie","",1],["Integer","activesupport\/lib\/active_support\/core_ext\/integer\/time.rb","classes\/Integer.html"," < Object","",1],["Kernel","activesupport\/lib\/active_support\/core_ext\/kernel\/debugger.rb","classes\/Kernel.html"," < ","",1],["LoadError","activesupport\/lib\/active_support\/core_ext\/load_error.rb","classes\/LoadError.html"," < Object","",1],["SimpleFormatter","Logger","classes\/Logger\/SimpleFormatter.html"," < Logger::Formatter","Simple formatter which only displays the message. ",1],["Mime","actionpack\/lib\/action_dispatch\/http\/mime_type.rb","classes\/Mime.html"," < ","",1],["Mimes","Mime","classes\/Mime\/Mimes.html"," < Array","",1],["Type","Mime","classes\/Mime\/Type.html"," < Object","Encapsulates the notion of a mime type. Can be used at render time, for example, with: class PostsController",1],["NameError","activesupport\/lib\/active_support\/core_ext\/name_error.rb","classes\/NameError.html"," < Object","",1],["Object","activesupport\/lib\/active_support\/core_ext\/object\/to_query.rb","classes\/Object.html"," < Object","Most objects are cloneable, but not all. For example you can't dup +nil+: nil.dup # => TypeError: can't",1],["Plugin","railties\/lib\/rails\/commands\/plugin.rb","classes\/Plugin.html"," < Object","",1],["Process","activesupport\/lib\/active_support\/core_ext\/process\/daemon.rb","classes\/Process.html"," < ","",1],["Rails","railties\/lib\/rails\/info.rb","classes\/Rails.html"," < ","",1],["ActionMethods","Rails","classes\/Rails\/ActionMethods.html"," < ","",1],["AppBuilder","Rails","classes\/Rails\/AppBuilder.html"," < Object","",1],["Application","Rails","classes\/Rails\/Application.html"," < Engine","In Rails 3.0, a Rails::Application object was introduced which is nothing more than an Engine but with",1],["Bootstrap","Rails::Application","classes\/Rails\/Application\/Bootstrap.html"," < ","",1],["Configurable","Rails::Application","classes\/Rails\/Application\/Configurable.html"," < ","",1],["ClassMethods","Rails::Application::Configurable","classes\/Rails\/Application\/Configurable\/ClassMethods.html"," < ","",1],["Configuration","Rails::Application","classes\/Rails\/Application\/Configuration.html"," < ::Rails::Engine::Configuration","",1],["Finisher","Rails::Application","classes\/Rails\/Application\/Finisher.html"," < ","",1],["Railties","Rails::Application","classes\/Rails\/Application\/Railties.html"," < Object","",1],["BacktraceCleaner","Rails","classes\/Rails\/BacktraceCleaner.html"," < ActiveSupport::BacktraceCleaner","",1],["Configuration","Rails","classes\/Rails\/Configuration.html"," < ","",1],["Deprecated","Rails::Configuration","classes\/Rails\/Configuration\/Deprecated.html"," < ","",1],["Console","Rails","classes\/Rails\/Console.html"," < Object","",1],["DBConsole","Rails","classes\/Rails\/DBConsole.html"," < Object","",1],["DeprecatedConstant","Rails","classes\/Rails\/DeprecatedConstant.html"," < ActiveSupport::BasicObject","",1],["Engine","Rails","classes\/Rails\/Engine.html"," < Railtie","Rails::Engine allows you to wrap a specific Rails application and share it accross different applications.",1],["Configurable","Rails::Engine","classes\/Rails\/Engine\/Configurable.html"," < ","",1],["ClassMethods","Rails::Engine::Configurable","classes\/Rails\/Engine\/Configurable\/ClassMethods.html"," < ","",1],["Configuration","Rails::Engine","classes\/Rails\/Engine\/Configuration.html"," < ::Rails::Railtie::Configuration","",1],["Generators","Rails","classes\/Rails\/Generators.html"," < ","",1],["Actions","Rails::Generators","classes\/Rails\/Generators\/Actions.html"," < ","",1],["ActiveModel","Rails::Generators","classes\/Rails\/Generators\/ActiveModel.html"," < Object","ActiveModel is a class to be implemented by each ORM to allow Rails to generate customized controller",1],["AppGenerator","Rails::Generators","classes\/Rails\/Generators\/AppGenerator.html"," < Base","",1],["Base","Rails::Generators","classes\/Rails\/Generators\/Base.html"," < Thor::Group","",1],["ControllerGenerator","Rails::Generators","classes\/Rails\/Generators\/ControllerGenerator.html"," < NamedBase","",1],["Error","Rails::Generators","classes\/Rails\/Generators\/Error.html"," < Thor::Error","",1],["GeneratedAttribute","Rails::Generators","classes\/Rails\/Generators\/GeneratedAttribute.html"," < Object","",1],["GeneratorGenerator","Rails::Generators","classes\/Rails\/Generators\/GeneratorGenerator.html"," < NamedBase","",1],["HelperGenerator","Rails::Generators","classes\/Rails\/Generators\/HelperGenerator.html"," < NamedBase","",1],["IntegrationTestGenerator","Rails::Generators","classes\/Rails\/Generators\/IntegrationTestGenerator.html"," < NamedBase","",1],["Migration","Rails::Generators","classes\/Rails\/Generators\/Migration.html"," < ","Holds common methods for migrations. It assumes that migrations has the [0-9]*_name format and can be",1],["ClassMethods","Rails::Generators::Migration","classes\/Rails\/Generators\/Migration\/ClassMethods.html"," < ","",1],["MigrationGenerator","Rails::Generators","classes\/Rails\/Generators\/MigrationGenerator.html"," < NamedBase","",1],["ModelGenerator","Rails::Generators","classes\/Rails\/Generators\/ModelGenerator.html"," < NamedBase","",1],["NamedBase","Rails::Generators","classes\/Rails\/Generators\/NamedBase.html"," < Base","",1],["ObserverGenerator","Rails::Generators","classes\/Rails\/Generators\/ObserverGenerator.html"," < NamedBase","",1],["PerformanceTestGenerator","Rails::Generators","classes\/Rails\/Generators\/PerformanceTestGenerator.html"," < NamedBase","",1],["PluginGenerator","Rails::Generators","classes\/Rails\/Generators\/PluginGenerator.html"," < NamedBase","",1],["ResourceGenerator","Rails::Generators","classes\/Rails\/Generators\/ResourceGenerator.html"," < ModelGenerator","",1],["ResourceHelpers","Rails::Generators","classes\/Rails\/Generators\/ResourceHelpers.html"," < ","Deal with controller names on scaffold and add some helpers to deal with ActiveModel. ",1],["ScaffoldControllerGenerator","Rails::Generators","classes\/Rails\/Generators\/ScaffoldControllerGenerator.html"," < NamedBase","",1],["ScaffoldGenerator","Rails::Generators","classes\/Rails\/Generators\/ScaffoldGenerator.html"," < ResourceGenerator","",1],["SessionMigrationGenerator","Rails::Generators","classes\/Rails\/Generators\/SessionMigrationGenerator.html"," < NamedBase","",1],["StylesheetsGenerator","Rails::Generators","classes\/Rails\/Generators\/StylesheetsGenerator.html"," < Base","",1],["TestCase","Rails::Generators","classes\/Rails\/Generators\/TestCase.html"," < ActiveSupport::TestCase","This class provides a TestCase for testing generators. To setup, you need just to configure the destination",1],["Info","Rails","classes\/Rails\/Info.html"," < ","",1],["InfoController","Rails","classes\/Rails\/InfoController.html"," < ActionController::Base","",1],["Initializable","Rails","classes\/Rails\/Initializable.html"," < ","",1],["ClassMethods","Rails::Initializable","classes\/Rails\/Initializable\/ClassMethods.html"," < ","",1],["Collection","Rails::Initializable","classes\/Rails\/Initializable\/Collection.html"," < Array","",1],["Initializer","Rails::Initializable","classes\/Rails\/Initializable\/Initializer.html"," < Object","",1],["Initializer","Rails","classes\/Rails\/Initializer.html"," < ","",1],["Paths","Rails","classes\/Rails\/Paths.html"," < ","",1],["Path","Rails::Paths","classes\/Rails\/Paths\/Path.html"," < Object","",1],["PathParent","Rails::Paths","classes\/Rails\/Paths\/PathParent.html"," < ","",1],["Root","Rails::Paths","classes\/Rails\/Paths\/Root.html"," < Object","",1],["Plugin","Rails","classes\/Rails\/Plugin.html"," < Engine","Rails::Plugin is nothing more than a Rails::Engine, but since it's loaded too late in the boot process,",1],["Rack","Rails","classes\/Rails\/Rack.html"," < ","",1],["Debugger","Rails::Rack","classes\/Rails\/Rack\/Debugger.html"," < Object","",1],["LogTailer","Rails::Rack","classes\/Rails\/Rack\/LogTailer.html"," < Object","",1],["Logger","Rails::Rack","classes\/Rails\/Rack\/Logger.html"," < ActiveSupport::LogSubscriber","Log the request started and flush all loggers after it. ",1],["Railtie","Rails","classes\/Rails\/Railtie.html"," < Object","Railtie is the core of the Rails Framework and provides several hooks to extend Rails and\/or modify the",1],["Configurable","Rails::Railtie","classes\/Rails\/Railtie\/Configurable.html"," < ","",1],["ClassMethods","Rails::Railtie::Configurable","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html"," < ","",1],["Configuration","Rails::Railtie","classes\/Rails\/Railtie\/Configuration.html"," < Object","",1],["ScriptRailsLoader","Rails","classes\/Rails\/ScriptRailsLoader.html"," < ","",1],["Server","Rails","classes\/Rails\/Server.html"," < ::Rack::Server","",1],["Options","Rails::Server","classes\/Rails\/Server\/Options.html"," < Object","",1],["TestUnitRailtie","Rails","classes\/Rails\/TestUnitRailtie.html"," < Rails::Railtie","",1],["RailsEnvironment","railties\/lib\/rails\/commands\/plugin.rb","classes\/RailsEnvironment.html"," < Object","",1],["RecursiveHTTPFetcher","railties\/lib\/rails\/commands\/plugin.rb","classes\/RecursiveHTTPFetcher.html"," < Object","",1],["SourceAnnotationExtractor","railties\/lib\/rails\/source_annotation_extractor.rb","classes\/SourceAnnotationExtractor.html"," < Object","Implements the logic behind the rake tasks for annotations like rake notes rake notes:optimize and friends.",1],["Annotation","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor\/Annotation.html"," < Struct.new(:line, :tag, :text)","",1],["Test","activesupport\/lib\/active_support\/testing\/deprecation.rb","classes\/Test.html"," < ","",1],["Unit","Test","classes\/Test\/Unit.html"," < ","",1],["Collector","Test::Unit","classes\/Test\/Unit\/Collector.html"," < ","",1],["ObjectSpace","Test::Unit::Collector","classes\/Test\/Unit\/Collector\/ObjectSpace.html"," < Object","",1],["TestUnit","railties\/lib\/rails\/generators\/test_unit.rb","classes\/TestUnit.html"," < ","",1],["Generators","TestUnit","classes\/TestUnit\/Generators.html"," < ","",1],["ControllerGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/ControllerGenerator.html"," < Base","",1],["HelperGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/HelperGenerator.html"," < Base","",1],["IntegrationGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/IntegrationGenerator.html"," < Base","",1],["MailerGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/MailerGenerator.html"," < Base","",1],["ModelGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/ModelGenerator.html"," < Base","",1],["ObserverGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/ObserverGenerator.html"," < Base","",1],["PerformanceGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/PerformanceGenerator.html"," < Base","",1],["PluginGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/PluginGenerator.html"," < Base","",1],["ScaffoldGenerator","TestUnit::Generators","classes\/TestUnit\/Generators\/ScaffoldGenerator.html"," < Base","",1],["Time","activesupport\/lib\/active_support\/core_ext\/time\/calculations.rb","classes\/Time.html"," < Object","",1],["&","ActiveRecord::SpawnMethods","classes\/ActiveRecord\/SpawnMethods.html#M004826","(r)","",2],["+","ActiveModel::MassAssignmentSecurity::PermissionSet","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html#M007722","(values)","",2],["+","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M007413","(other)","Adds another Duration or a Numeric to this Duration. Numeric values are treated as seconds. ",2],["+","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006761","(other)","Returns a new Chars object containing the _other_ object concatenated to the string. Example: ('Caf\u00e9'.mb_chars",2],["+","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M007057","(other)","",2],["+","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006715","(other)","",2],["+","Rails::Initializable::Collection","classes\/Rails\/Initializable\/Collection.html#M004302","(other)","",2],["-","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M007414","(other)","Subtracts another Duration or a Numeric from this Duration. Numeric values are treated as seconds. ",2],["-","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006716","(other)","",2],["-","Time","classes\/Time.html#M007339","(other)","Alias for #minus_with_coercion",2],["<<","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006458","(javascript)","Writes raw JavaScript to the page. Example: page << \"alert('JavaScript with Prototype.');\" ",2],["<<","ActionView::OutputBuffer","classes\/ActionView\/OutputBuffer.html#M006241","(value)","",2],["<<","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M007056","(value)","Alias for #concat",2],["<<","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M004279","(path)","Alias for #push",2],["<<","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004273","(*)","Alias for #push",2],["<=>","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html#M004409","(version_string)","",2],["<=>","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006759","(other)","Returns -1, 0, or 1, depending on whether the Chars object is to be sorted before, equal or after the",2],["<=>","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006709","(other)","Use the time in UTC for comparisons. ",2],["<=>","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006876","(zone)","Compare this time zone to the parameter. The two are compared first on their offsets, and then by name.",2],["<=>","DateTime","classes\/DateTime.html#M007124","(other)","Alias for #compare_with_coercion",2],["<=>","Time","classes\/Time.html#M007343","(other)","Alias for #compare_with_coercion",2],["==","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M005995","(middleware)","",2],["==","ActionView::FileSystemResolver","classes\/ActionView\/FileSystemResolver.html#M006270","(resolver)","Alias for #eql?",2],["==","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005113","(comparison_object)","Returns true if +comparison_object+ is the same exact object, or +comparison_object+ is of the same type",2],["==","ActiveRecord::Reflection::MacroReflection","classes\/ActiveRecord\/Reflection\/MacroReflection.html#M005152","(other_aggregation)","Returns +true+ if +self+ and +other_aggregation+ have the same +name+ attribute, +active_record+ attribute,",2],["==","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005007","(other)","",2],["==","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005399","(other)","Test for equality.  Resource are equal if and only if +other+ is the same object or is an instance of",2],["==","ActiveResource::Request","classes\/ActiveResource\/Request.html#M005496","(req)","",2],["==","ActiveResource::Response","classes\/ActiveResource\/Response.html#M005503","(other)","",2],["==","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M007417","(other)","Returns true if <tt>other<\/tt> is also a Duration instance with the same <tt>value<\/tt>, or if <tt>other",2],["==","Mime::Type","classes\/Mime\/Type.html#M005843","(mime_type)","",2],["===","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005057","(object)","Overwrite the default class equality method to provide support for association proxies. ",2],["===","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M006803","(other)","",2],["===","Mime::Type","classes\/Mime\/Type.html#M005842","(list)","",2],["===","Time","classes\/Time.html#M007281","(other)","Overriding case equality method so that it returns true for ActiveSupport::TimeWithZone instances ",2],["=~","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006775","(other)","",2],["=~","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006762","(other)","Like <tt>String#=~<\/tt> only it returns the character offset (in codepoints) instead of the byte offset.",2],["=~","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006877","(re)","Compare #name and TZInfo identifier to a supplied regexp, returning true if a match is found. ",2],["=~","Mime::Type","classes\/Mime\/Type.html#M005844","(mime_type)","",2],["GET","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005876","()","Override Rack's GET method to support indifferent access ",2],["POST","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005878","()","Override Rack's POST method to support indifferent access ",2],["[]","ActionDispatch::Http::Headers","classes\/ActionDispatch\/Http\/Headers.html#M005789","(header_name)","",2],["[]","ActionDispatch::Session::AbstractStore::OptionsHash","classes\/ActionDispatch\/Session\/AbstractStore\/OptionsHash.html#M005951","(key)","",2],["[]","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005955","(key)","",2],["[]","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006443","(id)","Returns a element reference by finding it through +id+ in the DOM. This element can then be used for",2],["[]","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007765","(attribute)","When passed a symbol or a name of a method, returns an array of errors for the method. p.errors[:name]",2],["[]","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005106","(attr_name)","Returns the value of the attribute identified by <tt>attr_name<\/tt> after it has been typecast (for example,",2],["[]","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004529","(name)","Returns a ColumnDefinition for the column with name +name+. ",2],["[]","ActiveResource::Formats","classes\/ActiveResource\/Formats.html#M005449","(mime_type_reference)","Lookup the format class from a mime type reference symbol. Example: ActiveResource::Formats[:xml]  #",2],["[]","ActiveResource::Response","classes\/ActiveResource\/Response.html#M005501","(key)","",2],["[]","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006780","(*args)","Alias for #slice",2],["[]","ActiveSupport::OrderedOptions","classes\/ActiveSupport\/OrderedOptions.html#M006809","(key)","",2],["[]","ActiveSupport::Testing::Performance::Metrics","classes\/ActiveSupport\/Testing\/Performance\/Metrics.html#M007508","(name)","",2],["[]","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006893","(arg)","Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of",2],["[]","Mime","classes\/Mime.html#M005812","(type)","",2],["[]=","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005957","(key, value)","",2],["[]=","ActionMailer::Base::DeprecatedHeaderProxy","classes\/ActionMailer\/Base\/DeprecatedHeaderProxy.html#M006642","(key, value)","",2],["[]=","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007767","(attribute, error)","Adds to the supplied attribute the supplied error message. p.errors[:name] = \"must be set\" p.errors[:name]",2],["[]=","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005107","(attr_name, value)","Updates the attribute identified by <tt>attr_name<\/tt> with the specified +value+. (Alias for the protected",2],["[]=","ActiveResource::Response","classes\/ActiveResource\/Response.html#M005502","(key, value)","",2],["[]=","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007441","(key, value)","Assigns a new value to the hash: hash = HashWithIndifferentAccess.new hash[:key] = \"value\" ",2],["[]=","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006777","(*args)","Like <tt>String#[]=<\/tt>, except instead of byte offsets you specify character offsets. Example: s =",2],["[]=","ActiveSupport::OrderedOptions","classes\/ActiveSupport\/OrderedOptions.html#M006808","(key, value)","",2],["__replay__","ActiveSupport::Testing::ProxyTestResult","classes\/ActiveSupport\/Testing\/ProxyTestResult.html#M007471","(result)","",2],["_all_autoload_paths","Rails::Engine","classes\/Rails\/Engine.html#M004368","()","",2],["_all_load_paths","Rails::Engine","classes\/Rails\/Engine.html#M004369","()","",2],["_compile_per_key_options","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007391","()","",2],["_dasherize","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M006900","(key)","",2],["_dump","Time","classes\/Time.html#M007274","(*args)","",2],["_dump","Time","classes\/Time.html#M007269","(*args)","",2],["_dump_without_utc_flag","Time","classes\/Time.html#M007270","(*args)","Alias for #_dump",2],["_dump_without_zone","Time","classes\/Time.html#M007273","(*args)","Alias for #_dump",2],["_handle_method_missing","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M005675","()","",2],["_implied_layout_name","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods.html#M005562","()","If no layout is supplied, look for a template named the return value of this method. ==== Returns * <tt>String<\/tt>",2],["_insert_callbacks","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M005549","(callbacks, block)","Take callback names and an optional callback proc, normalize them, then call the block with each callback.",2],["_load","Time","classes\/Time.html#M007271","(marshaled_time)","",2],["_load","Time","classes\/Time.html#M007267","(marshaled_time)","",2],["_load_without_utc_flag","Time","classes\/Time.html#M007268","(marshaled_time)","Alias for #_load",2],["_load_without_zone","Time","classes\/Time.html#M007272","(marshaled_time)","Alias for #_load",2],["_normalize_callback_options","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M005547","(options)","If :only or :except are used, convert the options into the primitive form (:per_key) used by ActiveSupport::Callbacks.",2],["_normalize_options","AbstractController::Layouts","classes\/AbstractController\/Layouts.html#M005564","(options)","",2],["_normalize_options","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M005673","(options)","",2],["_original_to_s","BigDecimal","classes\/BigDecimal.html#M007185","(format = DEFAULT_STRING_FORMAT)","Alias for #to_s",2],["_parse_file","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M006902","(file, entity)","",2],["_prefix","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M005515","()","The prefix used in render \"foo\" shortcuts. ",2],["_read_attribute","ActiveRecord::AttributeMethods::Read","classes\/ActiveRecord\/AttributeMethods\/Read.html#M005230","(attr_name)","",2],["_render_partial","ActionView::TestCase::Behavior::Locals","classes\/ActionView\/TestCase\/Behavior\/Locals.html#M006314","(options)","",2],["_routes","ActionController::UrlFor","classes\/ActionController\/UrlFor.html#M005704","()","",2],["_run_class_setup","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation.html#M007475","()","",2],["_save_fragment","ActionController::Caching::Actions","classes\/ActionController\/Caching\/Actions.html#M005577","(name, options)","",2],["_set_detail","ActionView::LookupContext::Details","classes\/ActionView\/LookupContext\/Details.html#M006348","(key, value)","",2],["_update_filter","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007389","(filter_options, new_options)","",2],["_write_layout_method","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods.html#M005563","()","Creates a _layout method to be called by _default_layout . If a layout is not explicitly mentioned then",2],["_write_render_options","ActionController::Renderers::All","classes\/ActionController\/Renderers\/All.html#M005669","()","",2],["_write_render_options","ActionController::Renderers::ClassMethods","classes\/ActionController\/Renderers\/ClassMethods.html#M005664","()","",2],["abstract!","AbstractController::Base","classes\/AbstractController\/Base.html#M005528","()","Define a controller as abstract. See internal_methods for more details. ",2],["abstract_class?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005059","()","Returns whether this class is an abstract class or not. ",2],["abstract_railtie?","Rails::Railtie","classes\/Rails\/Railtie.html#M004316","()","",2],["accept=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006061","(mime_types)","",2],["accepts","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M005891","()","Returns the accepted MIME type for the request. ",2],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","classes\/ActiveRecord\/NestedAttributes\/ClassMethods.html#M005305","(*attr_names)","Defines an attributes writer for the specified association(s). If you are using <tt>attr_protected<\/tt>",2],["accessible_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M007634","()","",2],["action","ActionController::Metal","classes\/ActionController\/Metal.html#M005644","(name, klass = ActionDispatch::Request)","Return a rack endpoint for the given action. Memoize the endpoint, so multiple calls into MyController.action",2],["action=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006056","(action_name)","",2],["action_has_layout?","AbstractController::Layouts","classes\/AbstractController\/Layouts.html#M005566","()","",2],["action_has_layout?","AbstractController::Layouts::ClassMethods::LayoutConditions","classes\/AbstractController\/Layouts\/ClassMethods\/LayoutConditions.html#M005560","()","Determines whether the current action has a layout by checking the action name against the :only and",2],["action_methods","AbstractController::Base","classes\/AbstractController\/Base.html#M005537","()","",2],["action_methods","AbstractController::Base","classes\/AbstractController\/Base.html#M005531","()","A list of method names that should be considered actions. This includes all public instance methods on",2],["action_methods","ActionController::HideActions::ClassMethods","classes\/ActionController\/HideActions\/ClassMethods.html#M005783","()","Overrides AbstractController::Base#action_methods to remove any methods that are listed as hidden methods.",2],["action_methods","ActionController::UrlFor::ClassMethods","classes\/ActionController\/UrlFor\/ClassMethods.html#M005705","()","",2],["action_options?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006208","(options)","",2],["action_path","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006222","(name, path = nil)","",2],["active","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M006005","()","",2],["active?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004759","()","Checks whether the connection to the database is still active. This includes checking whether the database",2],["active?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004394","()","CONNECTION MANAGEMENT ==================================== ",2],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004678","()","Is this connection alive and ready for queries? ",2],["active_authorizer","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M007635","()","",2],["acts_like?","Object","classes\/Object.html#M007365","(duck)","A duck-type assistant method. For example, Active Support extends Date to define an acts_like_date? method,",2],["acts_like_date?","DateTime","classes\/DateTime.html#M007102","()","Duck-types as a Date-like class. See Object#acts_like?. ",2],["acts_like_string?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006757","()","Enable more predictable duck-typing on String-like classes. See Object#acts_like?. ",2],["acts_like_time?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006728","()","So that +self+ <tt>acts_like?(:time)<\/tt>. ",2],["acts_like_time?","DateTime","classes\/DateTime.html#M007103","()","Duck-types as a Time-like class. See Object#acts_like?. ",2],["acts_like_time?","Time","classes\/Time.html#M007280","()","Duck-types as a Time-like class. See Object#acts_like?. ",2],["adapter_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004749","()","Returns the human-readable name of the adapter.  Use mixed case - one can always use downcase if needed.",2],["adapter_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004676","()","Returns 'PostgreSQL' as adapter name for identification purposes. ",2],["add","ActionController::Renderers","classes\/ActionController\/Renderers.html#M005668","(key, &block)","",2],["add","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007777","(attribute, message = nil, options = {})","Adds +message+ to the error messages on +attribute+, which will be returned on a call to <tt>on(attribute)<\/tt>",2],["add","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006859","(severity, message = nil, progname = nil, &block)","",2],["add_column","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004471","(table_name, column_name, type, options = {})","",2],["add_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004730","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004577","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column_position!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004484","(sql, options)","",2],["add_error","ActiveSupport::Testing::ProxyTestResult","classes\/ActiveSupport\/Testing\/ProxyTestResult.html#M007470","(e)","",2],["add_expr_escaped","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M006248","(src, code)","",2],["add_expr_literal","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M006246","(src, code)","",2],["add_filter","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M006830","(&block)","Adds a filter from the block provided. Each line in the backtrace will be mapped against this filter.",2],["add_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004583","(table_name, column_name, options = {})","Adds a new index to the table.  +column_name+ can be a single Symbol, or an Array of Symbols. The index",2],["add_limit_offset!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004604","(sql, options)","Appends +LIMIT+ and +OFFSET+ options to an SQL statement, or some SQL fragment that has the same semantics",2],["add_observer","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M007748","(observer)","",2],["add_observer!","ActiveRecord::Observer","classes\/ActiveRecord\/Observer.html#M005299","(klass)","",2],["add_on_blank","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007779","(attributes, options = {})","Will add an error message to each of the attributes in +attributes+ that is blank (using Object#blank?).",2],["add_on_empty","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007778","(attributes, options = {})","Will add an error message to each of the attributes in +attributes+ that is empty. ",2],["add_postamble","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M006249","(src)","",2],["add_preamble","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M006244","(src)","",2],["add_resource_route","Rails::Generators::ResourceGenerator","classes\/Rails\/Generators\/ResourceGenerator.html#M004133","()","",2],["add_routes","Rails::Generators::ControllerGenerator","classes\/Rails\/Generators\/ControllerGenerator.html#M004136","()","",2],["add_shebang_option!","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004240","()","Small macro to add ruby as an option to the generator with proper default value plus an instance helper",2],["add_silencer","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M006831","(&block)","Adds a silencer from the block provided. If the silencer returns true for a given line, it'll be excluded",2],["add_source","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004224","(source, options={})","Add the given source to Gemfile ==== Example add_source \"http:\/\/gems.github.com\/\" ",2],["add_stmt","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M006247","(src, code)","",2],["add_text","ActionView::Template::Handlers::Erubis","classes\/ActionView\/Template\/Handlers\/Erubis.html#M006245","(src, text)","",2],["add_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004621","(table_name)","Adds timestamps (created_at and updated_at) columns to the named table. ===== Examples add_timestamps(:suppliers)",2],["add_to_base","ActiveModel::DeprecatedErrorMethods","classes\/ActiveModel\/DeprecatedErrorMethods.html#M007610","(msg)","",2],["add_to_transaction","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004793","()","Add the record to the current transaction so that the :after_rollback and :after_commit callbacks can",2],["add_transaction_record","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004600","(record)","Register a record with the current transaction so that its after_commit and after_rollback callbacks",2],["advance","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006719","(options)","",2],["advance","DateTime","classes\/DateTime.html#M007110","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["advance","Time","classes\/Time.html#M007299","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["after","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M005990","(*args, &block)","",2],["after","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M004298","()","",2],["after_commit","ActiveRecord::Transactions::ClassMethods","classes\/ActiveRecord\/Transactions\/ClassMethods.html#M004784","(*args, &block)","",2],["after_dispatch","ActionController::Dispatcher","classes\/ActionController\/Dispatcher.html#M005648","(*args, &block)","",2],["after_dispatch","Rails::Rack::Logger","classes\/Rails\/Rack\/Logger.html#M004050","(env)","",2],["after_initialize","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003985","(&block)","",2],["after_rollback","ActiveRecord::Transactions::ClassMethods","classes\/ActiveRecord\/Transactions\/ClassMethods.html#M004785","(*args, &block)","",2],["after_validation","ActiveModel::Validations::Callbacks::ClassMethods","classes\/ActiveModel\/Validations\/Callbacks\/ClassMethods.html#M007692","(*args, &block)","",2],["aggregate_mapping","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005087","(reflection)","",2],["ago","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M007421","(time = ::Time.current)","Calculates a new Time or Date that is as far in the past as this Duration represents. ",2],["ago","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006718","(other)","",2],["ago","DateTime","classes\/DateTime.html#M007111","(seconds)","Returns a new DateTime representing the time a number of seconds ago Do not use this method in combination",2],["ago","Time","classes\/Time.html#M007300","(seconds)","Returns a new Time representing the time a number of seconds ago, this is basically a wrapper around",2],["alert","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M006017","()","Convenience accessor for flash[:alert] ",2],["alert","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006453","(message)","Displays an alert dialog with the given +message+. Example: # Generates: alert('This message is from",2],["alert=","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M006018","(message)","Convenience accessor for flash[:alert]= ",2],["alias_attribute","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007643","(new_name, old_name)","",2],["all","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004803","(*args)","A convenience wrapper for <tt>find(:all, *args)<\/tt>. You can pass in all the same arguments to this",2],["all","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005376","(*args)","This is an alias for find(:all).  You can pass in all the same arguments to this method as you can to",2],["all","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006891","()","Return an array of all TimeZone objects. There are multiple TimeZone objects per time zone, in many cases,",2],["all","Rails::Application::Railties","classes\/Rails\/Application\/Railties.html#M004360","(&block)","",2],["all","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M004080","(klass)","GET index ",2],["all","Rails::Plugin","classes\/Rails\/Plugin.html#M004340","(list, paths)","",2],["all_paths","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004266","()","",2],["announce","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M004947","(message)","",2],["any?","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004991","()","",2],["api_behavior","ActionController::Responder","classes\/ActionController\/Responder.html#M005761","(error)","This is the common behavior for \"API\" requests, like :xml and :json. ",2],["api_location","ActionController::Responder","classes\/ActionController\/Responder.html#M005765","()","Alias for #resource_location",2],["app","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M006120","()","",2],["app","ActionDispatch::IntegrationTest","classes\/ActionDispatch\/IntegrationTest.html#M006128","()","",2],["app","ActionDispatch::IntegrationTest","classes\/ActionDispatch\/IntegrationTest.html#M006126","()","",2],["app","Object","classes\/Object.html#M003996","(create=false)","reference the global \"app\" instance, created on demand. To recreate the instance, pass a non-false value",2],["app","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004149","()","",2],["app","Rails::Application","classes\/Rails\/Application.html#M004015","()","",2],["app=","ActionDispatch::IntegrationTest","classes\/ActionDispatch\/IntegrationTest.html#M006127","(app)","",2],["app_const","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004196","()","",2],["app_const_base","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004195","()","",2],["app_generators","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003980","()","Holds generators configuration: config.app_generators do |g| g.orm             :datamapper, :migration",2],["app_middleware","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003979","()","This allows you to modify the application's middlewares from Engines. All operations you run on the app_middleware",2],["app_name","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004191","()","",2],["app_secret","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004198","()","",2],["append=","ActionView::OutputBuffer","classes\/ActionView\/OutputBuffer.html#M006242","(value)","Alias for #<<",2],["append_features","ActiveSupport::Concern","classes\/ActiveSupport\/Concern.html#M006978","(base)","",2],["append_if_string=","ActionView::OutputBuffer","classes\/ActionView\/OutputBuffer.html#M006243","(value)","",2],["append_info_to_payload","ActiveRecord::Railties::ControllerRuntime","classes\/ActiveRecord\/Railties\/ControllerRuntime.html#M005318","(payload)","",2],["append_view_path","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M005522","(path)","",2],["append_view_path","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M005524","(path)","Append a path to the list of view paths for this controller. ==== Parameters * <tt>path<\/tt> - If a String",2],["application","Rails","classes\/Rails.html#M003893","()","",2],["application","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004226","(data=nil, options={}, &block)","Alias for #environment",2],["application=","Rails","classes\/Rails.html#M003894","(application)","",2],["application_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004258","()","Tries to retrieve the application name or simple return application. ",2],["apply_common_behavior_for","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006207","(method, resources, options, &block)","",2],["apply_finder_options","ActiveRecord::SpawnMethods","classes\/ActiveRecord\/SpawnMethods.html#M004829","(options)","",2],["apply_join_dependency","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004809","(relation, join_dependency)","",2],["apply_rails_template","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004184","()","",2],["arel","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004848","()","",2],["arel_engine","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005063","()","",2],["arel_table","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005062","()","",2],["arguments","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004108","(array)","Sets default arguments on generator invocation. This can be overwritten when invoking it. arguments %w(app_name",2],["array_or_string_for_javascript","ActionView::Helpers::ScriptaculousHelper","classes\/ActionView\/Helpers\/ScriptaculousHelper.html#M006374","(option)","",2],["as_json","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007775","(options=nil)","Returns an ActiveSupport::OrderedHash that can be used as the JSON representation for this object. ",2],["as_json","ActiveModel::Serializers::JSON","classes\/ActiveModel\/Serializers\/JSON.html#M007619","(options = nil)","Returns a JSON string representing the model. Some configuration can be passed through +options+. The",2],["as_json","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M007002","(value)","like encode, but only calls as_json, without encoding to string ",2],["as_json","ActiveSupport::JSON::Variable","classes\/ActiveSupport\/JSON\/Variable.html#M006985","(options = nil)","",2],["as_json","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006700","(options = nil)","Coerces time to a string for JSON encoding. The default format is ISO 8601. You can get %Y\/%m\/%d %H:%M:%S",2],["as_json","BigDecimal","classes\/BigDecimal.html#M007019","(options = nil)","A BigDecimal would be naturally represented as a JSON number. Most libraries, however, parse non-integer",2],["as_json","Enumerable","classes\/Enumerable.html#M007021","(options = nil)","",2],["assert_blank","ActiveSupport::Testing::Assertions","classes\/ActiveSupport\/Testing\/Assertions.html#M007465","(object, message=nil)","Test if an expression is blank. Passes if object.blank? is true. assert_blank [] # => true ",2],["assert_class_method","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004118","(method, content, &block)","Asserts the given class method exists in the given content. This method does not detect class methods",2],["assert_difference","ActiveSupport::Testing::Assertions","classes\/ActiveSupport\/Testing\/Assertions.html#M007463","(expression, difference = 1, message = nil, &block)","Test numeric difference between the return value of an expression as a result of what is evaluated in",2],["assert_directory","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004113","(relative, *contents)","Alias for #assert_file",2],["assert_dom_equal","ActionDispatch::Assertions::DomAssertions","classes\/ActionDispatch\/Assertions\/DomAssertions.html#M006069","(expected, actual, message = \"\")","\\Test two HTML strings for equivalency (e.g., identical up to reordering of attributes) ==== Examples",2],["assert_dom_not_equal","ActionDispatch::Assertions::DomAssertions","classes\/ActionDispatch\/Assertions\/DomAssertions.html#M006070","(expected, actual, message = \"\")","The negated form of +assert_dom_equivalent+. ==== Examples # assert that the referenced method does not",2],["assert_field_default_value","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004122","(attribute_type, value)","Asserts the given attribute type gets a proper default value: assert_field_type :string, \"MyString\" ",2],["assert_field_type","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004121","(attribute_type, field_type)","Asserts the given attribute type gets translated to a field type properly: assert_field_type :date, :date_select",2],["assert_file","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004112","(relative, *contents)","Asserts a given file exists. You need to supply an absolute path or a path relative to the configured",2],["assert_generates","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M006066","(expected_path, options, defaults={}, extras = {}, message=nil)","Asserts that the provided options can be used to generate the provided path.  This is the inverse of",2],["assert_index","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M006007","(index, where)","",2],["assert_instance_method","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004119","(method, content)","Asserts the given method exists in the given content. When a block is given, it yields the content of",2],["assert_method","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004120","(method, content)","Alias for #assert_instance_method",2],["assert_migration","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004116","(relative, *contents, &block)","Asserts a given file does not exist. You need to supply an absolute path or a path relative to the configured",2],["assert_no_difference","ActiveSupport::Testing::Assertions","classes\/ActiveSupport\/Testing\/Assertions.html#M007464","(expression, message = nil, &block)","Assertion that the numeric result of evaluating an expression is not changed before and after invoking",2],["assert_no_directory","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004115","(relative)","Alias for #assert_no_file",2],["assert_no_file","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004114","(relative)","Asserts a given file does not exist. You need to supply an absolute path or a path relative to the configured",2],["assert_no_migration","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004117","(relative)","Asserts a given migration does not exist. You need to supply an absolute path or a path relative to the",2],["assert_no_tag","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M006081","(*opts)","Identical to +assert_tag+, but asserts that a matching tag does _not_ exist. (See +assert_tag+ for a",2],["assert_present","ActiveSupport::Testing::Assertions","classes\/ActiveSupport\/Testing\/Assertions.html#M007466","(object, message=nil)","Test if an expression is not blank. Passes if object.present? is true. assert_present {:data => 'x' }",2],["assert_recognizes","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M006065","(expected_options, path, extras={}, message=nil)","Asserts that the routing of the given +path+ was handled correctly and that the parsed options (given",2],["assert_redirected_to","ActionDispatch::Assertions::ResponseAssertions","classes\/ActionDispatch\/Assertions\/ResponseAssertions.html#M006074","(options = {}, message=nil)","Assert that the redirection options passed in match those of the redirect called in the latest action.",2],["assert_response","ActionDispatch::Assertions::ResponseAssertions","classes\/ActionDispatch\/Assertions\/ResponseAssertions.html#M006073","(type, message = nil)","Asserts that the response is one of the following types: * <tt>:success<\/tt>   - Status code was 200",2],["assert_routing","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M006067","(path, options, defaults={}, extras={}, message=nil)","Asserts that path and options match both ways; in other words, it verifies that <tt>path<\/tt> generates",2],["assert_select","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M006079","(*args, &block)","An assertion that selects elements and makes one or more equality tests. If the first argument is an",2],["assert_select_email","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M006088","(&block)","Extracts the body of an email and runs nested assertions on it. You must enable deliveries for this assertion",2],["assert_select_encoded","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M006087","(element = nil, &block)","Extracts the content of an element, treats it as encoded HTML and runs nested assertion on it. You typically",2],["assert_select_rjs","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M006086","(*args, &block)","Selects content from the RJS response. === Narrowing down With no arguments, asserts that one or more",2],["assert_tag","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M006080","(*opts)","Asserts that there is a tag\/node\/element in the body of the response that meets all of the given conditions.",2],["assert_template","ActionController::TemplateAssertions","classes\/ActionController\/TemplateAssertions.html#M005605","(options = {}, message = nil)","Asserts that the request was rendered with the appropriate template file or partials. ==== Examples #",2],["assign","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006457","(variable, value)","Assigns the JavaScript +variable+ the given +value+. Examples: # Generates: my_string = \"This is mine!\";",2],["assign_shortcuts","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M005672","(*)","",2],["assigns","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M006091","(key = nil)","",2],["assigns","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006132","()","",2],["assume_migrated_upto_version","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004592","(version, migrations_path = ActiveRecord::Migrator.migrations_path)","",2],["at","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006880","(secs)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from number of seconds",2],["at_beginning_of_day","DateTime","classes\/DateTime.html#M007117","()","Alias for #beginning_of_day",2],["at_beginning_of_day","Time","classes\/Time.html#M007320","()","Alias for #beginning_of_day",2],["at_beginning_of_month","Time","classes\/Time.html#M007323","()","Alias for #beginning_of_month",2],["at_beginning_of_quarter","Time","classes\/Time.html#M007327","()","Alias for #beginning_of_quarter",2],["at_beginning_of_week","Time","classes\/Time.html#M007313","()","Alias for #beginning_of_week",2],["at_beginning_of_year","Time","classes\/Time.html#M007331","()","Alias for #beginning_of_year",2],["at_end_of_month","Time","classes\/Time.html#M007325","()","Alias for #end_of_month",2],["at_end_of_quarter","Time","classes\/Time.html#M007329","()","Alias for #end_of_quarter",2],["at_end_of_week","Time","classes\/Time.html#M007315","()","Alias for #end_of_week",2],["at_end_of_year","Time","classes\/Time.html#M007333","()","Alias for #end_of_year",2],["at_midnight","DateTime","classes\/DateTime.html#M007116","()","Alias for #beginning_of_day",2],["at_midnight","Time","classes\/Time.html#M007319","()","Alias for #beginning_of_day",2],["atom_feed","ActionView::Helpers::AtomFeedHelper","classes\/ActionView\/Helpers\/AtomFeedHelper.html#M006397","(options = {}, &block)","Adds easy defaults to writing Atom feeds with the Builder template engine (this does not work on ERb",2],["atomic_write","File","classes\/File.html#M007186","(file_name, temp_dir = Dir.tmpdir)","Write to a file atomically.  Useful for situations where you don't want other processes or threads to",2],["attach_to","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M006813","(namespace, log_subscriber=new, notifier=ActiveSupport::Notifications)","",2],["attachments","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006646","()","Allows you to add attachments to an email, like so: mail.attachments['filename.jpg'] = File.read('\/path\/to\/filename.jpg')",2],["attr_accessible","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M007632","(*names)","Specifies a white list of model attributes that can be set via mass-assignment. This is the opposite",2],["attr_protected","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M007631","(*names)","Attributes named in this macro are protected from mass-assignment whenever attributes are sanitized before",2],["attr_readonly","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005027","(*attributes)","Attributes listed as readonly will be used to create a new record but update operations will ignore these",2],["attribute_for_inspect","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005110","(attr_name)","Returns an <tt>#inspect<\/tt>-like string for the value of the attribute +attr_name+. String attributes",2],["attribute_method?","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M007657","(attr_name)","",2],["attribute_method?","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M007713","(attribute)","Check if method is an attribute method or not. ",2],["attribute_method?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005049","(attribute)","",2],["attribute_method_affix","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007642","(*affixes)","Declares a method available for all attributes with the given prefix and suffix. Uses +method_missing+",2],["attribute_method_prefix","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007640","(*prefixes)","Declares a method available for all attributes with the given prefix. Uses +method_missing+ and <tt>respond_to?<\/tt>",2],["attribute_method_suffix","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007641","(*suffixes)","Declares a method available for all attributes with the given suffix. Uses +method_missing+ and <tt>respond_to?<\/tt>",2],["attribute_methods_generated?","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007647","()","Returns true if the attribute methods defined have been generated. ",2],["attribute_names","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005105","()","Returns an array of names for the attributes available on this object sorted alphabetically. ",2],["attribute_present?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005111","(attribute)","Returns true if the specified +attribute+ has been set by the user or by a database load and is neither",2],["attributes","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005109","()","Returns a hash of all the attributes with their names as keys and the values of the attributes as values.",2],["attributes=","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005108","(new_attributes, guard_protected_attributes = true)","Allows you to set all the attributes at once by passing in a hash with keys matching the attribute names",2],["attributes_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","classes\/ActiveRecord\/AttributeMethods\/BeforeTypeCast.html#M005214","()","Returns a hash of attributes before typecasting and deserialization. ",2],["attributes_protected_by_default","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M007636","()","",2],["audio_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006569","(source)","Computes the path to an audio asset in the public audios directory. Full paths from the document root",2],["audio_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006573","(source, options = {})","Returns an html audio tag for the +source+. The +source+ can be full path or file that exists in your",2],["auth_type","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005355","()","",2],["auth_type=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005356","(auth_type)","",2],["auth_type=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005442","(auth_type)","Sets the auth type for remote service. ",2],["authenticate","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M005710","(request, &login_procedure)","",2],["authenticate","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005718","(request, realm, &password_procedure)","Returns false on a valid response, true otherwise ",2],["authenticate","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token.html#M005735","(controller, &login_procedure)","If token Authorization header is present, call the login procedure with the present token and options.",2],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M005707","(realm = \"Application\", &login_procedure)","",2],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M005715","(realm = \"Application\", &password_procedure)","",2],["authenticate_or_request_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Token\/ControllerMethods.html#M005732","(realm = \"Application\", &login_procedure)","",2],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M005708","(&login_procedure)","",2],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M005716","(realm = \"Application\", &password_procedure)","Authenticate with HTTP Digest, returns true or false ",2],["authenticate_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Token\/ControllerMethods.html#M005733","(&login_procedure)","",2],["authentication_header","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005726","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M005714","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005727","(controller, realm, message = nil)","",2],["authentication_request","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token.html#M005738","(controller, realm)","Sets a WWW-Authenticate to let the client know a token is desired. controller - ActionController::Base",2],["authorization","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005880","()","Returns the authorization header regardless of whether it was specified directly or through one of the",2],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006553","(type = :rss, url_options = {}, tag_options = {})","Returns a link tag that browsers and news readers can use to auto-detect an RSS or ATOM feed. The +type+",2],["auto_flush","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006863","()","",2],["auto_flushing=","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006860","(period)","Set the auto-flush period. Set to true to flush after every log message, to an integer to flush every",2],["auto_link","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006387","(text, *args, &block)","Turns all URLs and e-mail addresses into clickable links. The <tt>:link<\/tt> option will limit what should",2],["autoload","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M007536","(const_name, path = @@at_path)","",2],["autoload_at","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M007538","(path)","",2],["autoload_once","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004267","()","",2],["autoload_once_paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004060","()","",2],["autoload_paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004061","()","",2],["autoload_paths","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004269","()","",2],["autoload_under","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M007537","(path)","",2],["autoloads","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M007541","()","",2],["available_views","Erb::Generators::ScaffoldGenerator","classes\/Erb\/Generators\/ScaffoldGenerator.html#M004243","()","",2],["average","ActiveRecord::Calculations","classes\/ActiveRecord\/Calculations.html#M004861","(column_name, options = {})","Calculates the average value on a given column. Returns +nil+ if there's no row. See +calculate+ for",2],["backend","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M006987","()","",2],["backend=","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M006988","(name)","",2],["backend=","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M006896","(name)","",2],["backtrace_cleaner","Rails","classes\/Rails.html#M003901","()","",2],["bang?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M005188","()","",2],["banner","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004186","()","",2],["banner","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004214","()","Use Rails default banner. ",2],["base64","ActiveSupport::SecureRandom","classes\/ActiveSupport\/SecureRandom.html#M006982","(n=nil)","SecureRandom.base64 generates a random base64 string. The argument n specifies the length of the random",2],["base_class","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005058","()","Returns the base AR subclass that this class descends from. If A extends AR::Base, A.base_class will",2],["base_name","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004215","()","Sets the base_name taking into account the current class namespace. ",2],["base_root","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004211","()","Returns the base root for a common set of generators. This is used to dynamically guess the default source",2],["becomes","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004922","(klass)","Returns an instance of the specified +klass+ with the attributes of the current record. This is mostly",2],["before","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M005989","(*args, &block)","",2],["before","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M004297","()","",2],["before_configuration","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003982","(&block)","",2],["before_dispatch","ActionController::Dispatcher","classes\/ActionController\/Dispatcher.html#M005647","(*args, &block)","",2],["before_dispatch","Rails::Rack::Logger","classes\/Rails\/Rack\/Logger.html#M004049","(env)","",2],["before_eager_load","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003983","(&block)","",2],["before_filters","ActionController::Testing::ClassMethods","classes\/ActionController\/Testing\/ClassMethods.html#M005681","()","",2],["before_initialize","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003984","(&block)","",2],["before_validation","ActiveModel::Validations::Callbacks::ClassMethods","classes\/ActiveModel\/Validations\/Callbacks\/ClassMethods.html#M007691","(*args, &block)","",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004601","()","Begins the transaction (and turns off auto-committing). ",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004705","()","Begins a transaction. ",2],["beginning_of_day","DateTime","classes\/DateTime.html#M007114","()","Returns a new DateTime representing the start of the day (0:00) ",2],["beginning_of_day","Time","classes\/Time.html#M007317","()","Returns a new Time representing the start of the day (0:00) ",2],["beginning_of_month","Time","classes\/Time.html#M007322","()","Returns a new Time representing the start of the month (1st of the month, 0:00) ",2],["beginning_of_quarter","Time","classes\/Time.html#M007326","()","Returns  a new Time representing the start of the quarter (1st of january, april, july, october, 0:00)",2],["beginning_of_week","Time","classes\/Time.html#M007311","()","Returns a new Time representing the \"start\" of this week (Monday, 0:00) ",2],["beginning_of_year","Time","classes\/Time.html#M007330","()","Returns  a new Time representing the start of the year (1st of january, 0:00) ",2],["belongs_to","ActiveRecord::Associations::ClassMethods","classes\/ActiveRecord\/Associations\/ClassMethods.html#M004958","(association_id, options = {})","Specifies a one-to-one association with another class. This method should only be used if this class",2],["belongs_to","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004549","(*args)","Alias for #references",2],["belongs_to","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004533","(*args)","Alias for #references",2],["benchmark","ActiveSupport::Benchmarkable","classes\/ActiveSupport\/Benchmarkable.html#M006657","(message = \"Benchmarking\", options = {})","Allows you to measure the execution time of a block in a template and records the result to the log.",2],["benchmark","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007513","()","",2],["best_install_method","RailsEnvironment","classes\/RailsEnvironment.html#M003917","()","",2],["between?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006710","(min, max)","",2],["binary_content","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006144","()","Returns binary content (downloadable file), converted to a String ",2],["binary_to_string","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004508","(value)","Used to convert from BLOBs to Strings ",2],["bind","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M004300","(context)","",2],["blank?","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007773","()","Alias for #empty?",2],["blank?","Object","classes\/Object.html#M007350","()","An object is blank if it's false, empty, or a whitespace string. For example, \"\", \"   \", +nil+, [], and",2],["body","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005870","()","The request body is an IO input stream. If the RAW_POST_DATA environment variable is already set, wrap",2],["body","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005820","()","",2],["body=","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005821","(body)","",2],["body_parts","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005822","()","",2],["breakpoint","Kernel","classes\/Kernel.html#M007144","()","",2],["buffer","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006864","()","",2],["build","ActionController::Middleware","classes\/ActionController\/Middleware.html#M005656","(app)","Alias for #new",2],["build","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M006006","(app = nil, &block)","",2],["build","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M005997","(app)","",2],["build","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004983","(*args, &block)","Alias for #new",2],["build","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005371","(attributes = {})","Builds a new, unsaved record using the default values from the remote server so that it can be used with",2],["build","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M004082","(klass, params=nil)","GET new POST create ",2],["build","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004188","(meth, *args)","",2],["build_arel","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004850","()","",2],["build_callbacks","ActionView::Helpers::PrototypeHelper","classes\/ActionView\/Helpers\/PrototypeHelper.html#M006474","(options)","",2],["build_conditions","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005275","()","",2],["build_from_hash","ActiveRecord::PredicateBuilder","classes\/ActiveRecord\/PredicateBuilder.html#M004859","(attributes, default_table)","",2],["build_mem_cache","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M006934","(*addresses)","",2],["build_middleware_stack","Rails::Application","classes\/Rails\/Application.html#M004016","()","Alias for #app",2],["build_sti_condition","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005277","()","",2],["build_through_conditions","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005276","()","",2],["builder","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004187","()","",2],["builtin_controller","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004351","()","",2],["bundle_if_dev_or_edge","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004185","()","",2],["button_to","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006606","(name, options = {}, html_options = {})","Generates a form containing a single button that submits to the URL created by the set of +options+.",2],["button_to_function","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M006439","(name, *args, &block)","Returns a button with the given +name+ text that'll trigger a JavaScript +function+ using the onclick",2],["cache","ActionController::Caching","classes\/ActionController\/Caching.html#M005601","(key, options = {}, &block)","Convenience accessor ",2],["cache","ActionView::Helpers::CacheHelper","classes\/ActionView\/Helpers\/CacheHelper.html#M006485","(name = {}, options = nil, &block)","This helper to exposes a method for caching of view fragments. See ActionController::Caching::Fragments",2],["cache","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M004627","()","Enable the query cache within the block. ",2],["cache","ActiveRecord::QueryCache::ClassMethods","classes\/ActiveRecord\/QueryCache\/ClassMethods.html#M005301","(&block)","Enable the query cache within the block if Active Record is configured. ",2],["cache","Rails","classes\/Rails.html#M003905","()","",2],["cache_attribute?","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M005225","(attr_name)","Returns +true+ if the provided attribute is being cached. ",2],["cache_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M005223","(*attribute_names)","+cache_attributes+ allows you to declare which converted attribute values should be cached. Usually caching",2],["cache_fixtures","Fixtures","classes\/Fixtures.html#M004880","(connection, fixtures_map)","",2],["cache_for_connection","Fixtures","classes\/Fixtures.html#M004877","(connection)","",2],["cache_key","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005102","()","Returns a cache key that can be used to identify this record. ==== Examples Product.new.cache_key   ",2],["cache_page","ActionController::Caching::Pages","classes\/ActionController\/Caching\/Pages.html#M005589","(content = nil, options = nil)","Manually cache the +content+ in the key determined by +options+. If no content is provided, the contents",2],["cache_page","ActionController::Caching::Pages::ClassMethods","classes\/ActionController\/Caching\/Pages\/ClassMethods.html#M005583","(content, path, extension = nil)","Manually cache the +content+ in the key determined by +path+. Example: cache_page \"I'm the cached content\",",2],["cache_store","ActionController::Caching::ConfigMethods","classes\/ActionController\/Caching\/ConfigMethods.html#M005597","()","",2],["cache_store","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004350","()","",2],["cache_store=","ActionController::Caching::ConfigMethods","classes\/ActionController\/Caching\/ConfigMethods.html#M005598","(store)","",2],["cached_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M005224","()","Returns the attributes which are cached. By default time related columns with datatype <tt>:datetime,",2],["cached_fixtures","Fixtures","classes\/Fixtures.html#M004879","(connection, keys_to_fetch = nil)","",2],["caches_action","ActionController::Caching::Actions::ClassMethods","classes\/ActionController\/Caching\/Actions\/ClassMethods.html#M005576","(*actions)","Declares that +actions+ should be cached. See ActionController::Caching::Actions for details. ",2],["caches_page","ActionController::Caching::Pages::ClassMethods","classes\/ActionController\/Caching\/Pages\/ClassMethods.html#M005584","(*actions)","Caches the +actions+ using the page-caching approach that'll store the cache in a path within the page_cache_directory",2],["caching_allowed?","ActionController::Caching","classes\/ActionController\/Caching.html#M005600","()","",2],["calculate","ActiveRecord::Calculations","classes\/ActiveRecord\/Calculations.html#M004865","(operation, column_name, options = {})","This calculates aggregate values in the given column.  Methods for count, sum, average, minimum, and",2],["call","ActionController::Metal","classes\/ActionController\/Metal.html#M005643","(env)","",2],["call","ActionController::Middleware::ActionMiddleware","classes\/ActionController\/Middleware\/ActionMiddleware.html#M005654","(env)","",2],["call","ActionController::Responder","classes\/ActionController\/Responder.html#M005756","(*args)","Initializes a new responder an invoke the proper format. If the format is not defined, call to_format.",2],["call","ActionDispatch::BestStandardsSupport","classes\/ActionDispatch\/BestStandardsSupport.html#M006025","(env)","",2],["call","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M005992","(env)","",2],["call","ActionDispatch::Cookies","classes\/ActionDispatch\/Cookies.html#M005987","(env)","",2],["call","ActionDispatch::Flash","classes\/ActionDispatch\/Flash.html#M006023","(env)","",2],["call","ActionDispatch::Head","classes\/ActionDispatch\/Head.html#M005984","(env)","",2],["call","ActionDispatch::ParamsParser","classes\/ActionDispatch\/ParamsParser.html#M006044","(env)","",2],["call","ActionDispatch::RemoteIp","classes\/ActionDispatch\/RemoteIp.html#M005937","(env)","",2],["call","ActionDispatch::Rescue","classes\/ActionDispatch\/Rescue.html#M006041","(env)","",2],["call","ActionDispatch::Session::AbstractStore","classes\/ActionDispatch\/Session\/AbstractStore.html#M005970","(env)","",2],["call","ActionDispatch::ShowExceptions","classes\/ActionDispatch\/ShowExceptions.html#M006027","(env)","",2],["call","ActionDispatch::Static","classes\/ActionDispatch\/Static.html#M005930","(env)","",2],["call","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006456","(function, *arguments, &block)","Calls the JavaScript +function+, optionally with the given +arguments+. If a block is given, the block",2],["call","ActionView::Template::Handler","classes\/ActionView\/Template\/Handler.html#M006237","(template)","",2],["call","ActionView::Template::Handlers::Compilable::ClassMethods","classes\/ActionView\/Template\/Handlers\/Compilable\/ClassMethods.html#M006235","(template)","",2],["call","ActiveRecord::ConnectionAdapters::ConnectionManagement","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html#M004662","(env)","",2],["call","ActiveRecord::QueryCache","classes\/ActiveRecord\/QueryCache.html#M005304","(env)","",2],["call","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M006817","(message, *args)","",2],["call","I18n::ExceptionHandler","classes\/I18n\/ExceptionHandler.html#M006478","(exception, locale, key, options)","",2],["call","Logger::SimpleFormatter","classes\/Logger\/SimpleFormatter.html#M007348","(severity, timestamp, progname, msg)","This method is invoked when a log event occurs ",2],["call","Rails::Application","classes\/Rails\/Application.html#M004017","(env)","",2],["call","Rails::Rack::Debugger","classes\/Rails\/Rack\/Debugger.html#M004052","(env)","",2],["call","Rails::Rack::LogTailer","classes\/Rails\/Rack\/LogTailer.html#M004045","(env)","",2],["call","Rails::Rack::Logger","classes\/Rails\/Rack\/Logger.html#M004048","(env)","",2],["callback","ActiveSupport::Callbacks","classes\/ActiveSupport\/Callbacks.html#M007382","(kind)","",2],["camelize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007600","(lower_case_and_underscored_word, first_letter_in_uppercase = true)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to +camelize+ is set to <tt>:lower<\/tt>",2],["canonical_action?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006219","(action, flag)","",2],["capify!","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004234","()","Just run the capify command in root ==== Example capify! ",2],["capitalize","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006784","()","Converts the first character to uppercase and the remainder to lowercase. Example: '\u00fcber'.mb_chars.capitalize.to_s",2],["capture","ActionView::Helpers::CaptureHelper","classes\/ActionView\/Helpers\/CaptureHelper.html#M006598","(*args)","The capture method allows you to extract part of a template into a variable. You can then use this variable",2],["capture","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004110","(stream)","Captures the given stream and returns it: stream = capture(:stdout){ puts \"Cool\" } stream # => \"Cool\\n\"",2],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004609","()","",2],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004488","()","",2],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M006666","(string)","Alias for #characters",2],["cdata_section","ActionView::Helpers::TagHelper","classes\/ActionView\/Helpers\/TagHelper.html#M006621","(content)","Returns a CDATA section with the given +content+.  CDATA sections are used to escape blocks of text containing",2],["center","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006774","(integer, padstr=' ')","Works just like <tt>String#center<\/tt>, only integer specifies characters instead of bytes. Example:",2],["change","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004542","(column_name, type, options = {})","Changes the column's definition according to the new options. See TableDefinition#column for details",2],["change","DateTime","classes\/DateTime.html#M007109","(options)","Returns a new DateTime where one or more of the elements have been changed according to the +options+",2],["change","Time","classes\/Time.html#M007298","(options)","Returns a new Time where one or more of the elements have been changed according to the +options+ parameter.",2],["change_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004731","(table_name, column_name, type, options = {})","Changes the column of a table. ",2],["change_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004580","(table_name, column_name, type, options = {})","Changes the column's definition according to the new options. See TableDefinition#column for details",2],["change_column_default","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004732","(table_name, column_name, default)","Changes the default value of a table column. ",2],["change_column_default","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004581","(table_name, column_name, default)","Sets a new default value for a column.  If you want to set the default value to +NULL+, you are out of",2],["change_column_null","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004473","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004733","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004442","(table_name, column_name, null, default = nil)","",2],["change_default","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004543","(column_name, default)","Sets a new default value for a column. See SchemaStatements#change_column_default ===== Examples t.change_default(:qualification,",2],["change_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004574","(table_name)","A block for changing columns in +table+. === Example # change_table() yields a Table instance change_table(:suppliers)",2],["changed","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M007728","()","List of attributes with unsaved changes. person.changed # => [] person.name = 'bob' person.changed #",2],["changed?","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M007727","()","Do any attributes have unsaved changes? person.changed? # => false person.name = 'bob' person.changed?",2],["changed_attributes","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M007731","()","Map of change <tt>attr => original value<\/tt>. ",2],["changed_for_autosave?","ActiveRecord::AutosaveAssociation","classes\/ActiveRecord\/AutosaveAssociation.html#M005327","()","Returns whether or not this record has been changed in any way (including whether any of its nested autosave",2],["changes","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M007729","()","Map of changed attrs => [original value, new value]. person.changes # => {} person.name = 'bob' person.changes",2],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M006665","(string)","",2],["charset","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004462","()","Returns the database character set. ",2],["check_box","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006522","(method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","",2],["check_box","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006504","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","Returns a checkbox tag tailored for accessing a specified attribute (identified by +method+) on an object",2],["check_box_checked?","ActionView::Helpers::InstanceTagMethods::ClassMethods","classes\/ActionView\/Helpers\/InstanceTagMethods\/ClassMethods.html#M006515","(value, checked_value)","",2],["check_box_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006412","(name, value = \"1\", checked = false, options = {})","Creates a check box form input tag. ==== Options * <tt>:disabled<\/tt> - If set to true, the user will",2],["check_class_collision","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004262","(options={})","Add a class collisions name to be checked on class initialization. You can supply a hash with a :prefix",2],["check_validity!","ActiveModel::EachValidator","classes\/ActiveModel\/EachValidator.html#M007628","()","Hook method that gets called by the initializer allowing verification that the arguments supplied are",2],["check_validity!","ActiveModel::Validations::ExclusionValidator","classes\/ActiveModel\/Validations\/ExclusionValidator.html#M007677","()","",2],["check_validity!","ActiveModel::Validations::FormatValidator","classes\/ActiveModel\/Validations\/FormatValidator.html#M007698","()","",2],["check_validity!","ActiveModel::Validations::InclusionValidator","classes\/ActiveModel\/Validations\/InclusionValidator.html#M007682","()","",2],["check_validity!","ActiveModel::Validations::LengthValidator","classes\/ActiveModel\/Validations\/LengthValidator.html#M007687","()","",2],["check_validity!","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M007666","()","",2],["checkin","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004645","(conn)","Check-in a database connection back into the pool, indicating that you no longer need this connection.",2],["checkout","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004644","()","Check-out a database connection from the pool, indicating that you want to use it. You should call #checkin",2],["civil_from_format","DateTime","classes\/DateTime.html#M007097","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0)","",2],["class_eval","Kernel","classes\/Kernel.html#M007141","(*args, &block)","class_eval on an object acts like singleton_class.class_eval. ",2],["class_name","ActiveRecord::Reflection::MacroReflection","classes\/ActiveRecord\/Reflection\/MacroReflection.html#M005151","()","Returns the class name for the macro. <tt>composed_of :balance, :class_name => 'Money'<\/tt> returns <tt>'Money'<\/tt>",2],["class_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004247","()","",2],["class_of_active_record_descendant","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005084","(klass)","Returns the class descending directly from ActiveRecord::Base or an abstract class, if any, in the inheritance",2],["classify","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007597","(table_name)","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["clean","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M006829","(backtrace, kind = :silent)","Returns the backtrace after all filters and silencers has been run against it. Filters run first, then",2],["cleanup","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006961","(options = nil)","",2],["cleanup","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M006948","(options = nil)","",2],["cleanup","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007562","(options = nil)","Cleanup the cache by removing expired entries. Options are passed to the underlying cache implementation.",2],["cleanup_view_runtime","ActiveRecord::Railties::ControllerRuntime","classes\/ActiveRecord\/Railties\/ControllerRuntime.html#M005317","()","",2],["clear","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005958","()","",2],["clear","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006960","(options = nil)","",2],["clear","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M006939","(options = nil)","Clear the entire cache on all memcached servers. This method should be used with care when shared cache",2],["clear","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M006947","(options = nil)","",2],["clear","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007563","(options = nil)","Clear the entire cache. Be careful with this method since it could affect other processes if shared cache",2],["clear","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M006918","(options = nil)","",2],["clear","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M007433","()","",2],["clear","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M007590","(scope = :all)","Clears the loaded inflections within a given scope (default is <tt>:all<\/tt>). Give the scope as a symbol",2],["clear!","ActiveSupport::Dependencies::Reference","classes\/ActiveSupport\/Dependencies\/Reference.html#M007380","()","",2],["clear_action_methods!","AbstractController::Base","classes\/AbstractController\/Base.html#M005532","()","action_methods are cached and there is sometimes need to refresh them. clear_action_methods! allows you",2],["clear_active_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M004653","()","Returns any connections in use by the current thread back to the pool, and also returns connections to",2],["clear_all_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M004655","()","",2],["clear_buffer","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006865","()","",2],["clear_cache","ActionView::Resolver","classes\/ActionView\/Resolver.html#M006257","()","",2],["clear_helpers","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M005555","()","Clears up all existing helpers in this class, only keeping the helper with the same name as this class.",2],["clear_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M004629","()","Clears the query cache. One reason you may wish to call this method explicitly is between queries that",2],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M004654","()","Clears the cache which maps classes ",2],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004641","()","Clears the cache which maps classes ",2],["clear_respond_to","ActionController::MimeResponds::ClassMethods","classes\/ActionController\/MimeResponds\/ClassMethods.html#M005743","()","Clear all mime types in <tt>respond_to<\/tt>. ",2],["clear_stale_cached_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004643","()","Return any checked-out connections back to the pool by threads that are no longer alive. ",2],["clear_transaction_record_state","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004796","()","Clear the new record state and id of a record. ",2],["client_error?","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse.html#M006150","()","Was there a client client? ",2],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004723","()","Returns the current client message level. ",2],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004724","(level)","Set the client message level. ",2],["clone","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005393","()","Returns a \\clone of the resource that hasn't been assigned an +id+ yet and is treated as a \\new resource.",2],["clone","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007384","(chain, klass)","",2],["clone_attribute_value","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005123","(reader_method, attribute_name)","",2],["clone_attributes","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005122","(reader_method = :read_attribute, attributes = {})","",2],["close","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006862","()","",2],["close","ActiveSupport::Gzip::Stream","classes\/ActiveSupport\/Gzip\/Stream.html#M007007","()","",2],["code","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005815","()","Returns a String to ensure compatibility with Net::HTTPResponse ",2],["collation","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004463","()","Returns the database collation strategy. ",2],["collection","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006197","()","To add a route to the collection: resources :photos do collection do get 'search' end end This will enable",2],["collection_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005423","(options = nil)","",2],["collection_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005370","(prefix_options = {}, query_options = nil)","Gets the collection path for the REST resources.  If the +query_options+ parameter is omitted, Rails",2],["collection_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006365","(method, collection, value_method, text_method, options = {}, html_options = {})","",2],["collection_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006351","(object, method, collection, value_method, text_method, options = {}, html_options = {})","Returns <tt><select><\/tt> and <tt><option><\/tt> tags for the collection of existing return values of",2],["collection_with_template","ActionView::Partials::PartialRenderer","classes\/ActionView\/Partials\/PartialRenderer.html#M006278","(template = @template)","",2],["collection_without_template","ActionView::Partials::PartialRenderer","classes\/ActionView\/Partials\/PartialRenderer.html#M006279","(collection_paths = @collection_paths)","",2],["color","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M006818","(text, color, bold=false)","Set color by using a string or one of the defined constants. If a third option is set to true, it also",2],["colorize_logging","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005023","(*args)","",2],["colorize_logging","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004353","()","",2],["colorize_logging=","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004354","(val)","",2],["column","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004537","(column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["column","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004530","(name, type, options = {})","Instantiates a new column for the table. The +type+ parameter is normally one of the migrations native",2],["column_aliases","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004818","(join_dependency)","",2],["column_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004572","(table_name, column_name, type = nil, options = {})","Checks to see if a column exists in a given table. === Examples # Check a column exists column_exists?(:suppliers,",2],["column_exists?","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004538","(column_name, type = nil, options = nil)","Checks to see if a column exists. See SchemaStatements#column_exists? ",2],["column_for_attribute","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005112","(name)","Returns the column object for the named attribute. ",2],["column_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004554","()","the maximum length of a column name ",2],["column_names","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005044","()","Returns an array of column names as strings. ",2],["columns","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005042","()","Returns an array of column objects for the table associated with this class. ",2],["columns","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004718","(table_name, name = nil)","Returns the list of all column definitions for a table. ",2],["columns","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004571","(table_name, name = nil)","Returns an array of Column objects for the table specified by +table_name+. See the concrete implementation",2],["columns_hash","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005043","()","Returns a hash of column objects for the table associated with this class. ",2],["columns_per_multicolumn_index","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004559","()","the maximum number of columns in a multicolumn index ",2],["columns_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004557","()","the maximum number of columns per table ",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004602","()","Commits the transaction (and turns on auto-committing). ",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004706","()","Commits a transaction. ",2],["commit_transaction_records","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004617","()","Send a commit message to all records after they have been committed. ",2],["comparable_time","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006680","()","Alias for #utc",2],["compare_with_coercion","DateTime","classes\/DateTime.html#M007123","(other)","Layers additional behavior on DateTime#<=> so that Time and ActiveSupport::TimeWithZone instances can",2],["compare_with_coercion","Time","classes\/Time.html#M007342","(other)","Layers additional behavior on Time#<=> so that DateTime and ActiveSupport::TimeWithZone instances can",2],["compare_without_coercion","DateTime","classes\/DateTime.html#M007125","(other)","Alias for #<=>",2],["compare_without_coercion","Time","classes\/Time.html#M007344","(other)","Alias for #<=>",2],["compile","ActionView::Template::Handlers::Builder","classes\/ActionView\/Template\/Handlers\/Builder.html#M006239","(template)","",2],["compile","ActionView::Template::Handlers::Compilable","classes\/ActionView\/Template\/Handlers\/Compilable.html#M006236","(template)","",2],["compile","ActionView::Template::Handlers::ERB","classes\/ActionView\/Template\/Handlers\/ERB.html#M006252","(template)","",2],["compile","ActionView::Template::Handlers::RJS","classes\/ActionView\/Template\/Handlers\/RJS.html#M006254","(template)","",2],["compile","ActiveSupport::Callbacks::CallbackChain","classes\/ActiveSupport\/Callbacks\/CallbackChain.html#M007399","(key=nil, object=nil)","",2],["compose","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006789","()","Performs composition on all the characters. Example: '\u00e9'.length                       # => 3 '\u00e9'.mb_chars.compose.to_s.length",2],["compose_codepoints","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006797","(codepoints)","Compose decomposed characters to the composed form. ",2],["composed_of","ActiveRecord::Aggregations::ClassMethods","classes\/ActiveRecord\/Aggregations\/ClassMethods.html#M005306","(part_id, options = {})","Adds reader and writer methods for manipulating a value object: <tt>composed_of :address<\/tt> adds <tt>address<\/tt>",2],["compress","ActiveSupport::Gzip","classes\/ActiveSupport\/Gzip.html#M007009","(source)","Compresses a string using gzip. ",2],["compressed?","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007577","()","",2],["compute_type","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005083","(type_name)","Returns the class type of the record using the current module as a prefix. So descendants of MyApp::Business::Account",2],["concat","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006379","(string)","The preferred method of outputting text in your views is to use the <%= \"text\" %> eRuby syntax. The regular",2],["concat","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M007054","(value)","",2],["concat","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M004281","(paths)","",2],["concat","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004274","(*)","Alias for #push",2],["conditions","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005274","()","",2],["config","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior.html#M006298","()","",2],["config","ActiveSupport::Configurable","classes\/ActiveSupport\/Configurable.html#M007545","()","",2],["config","ActiveSupport::Configurable::ClassMethods","classes\/ActiveSupport\/Configurable\/ClassMethods.html#M007542","()","",2],["config","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004150","()","",2],["config","Rails::Application::Configurable","classes\/Rails\/Application\/Configurable.html#M004358","()","",2],["config","Rails::Engine::Configurable","classes\/Rails\/Engine\/Configurable.html#M004068","()","",2],["config","Rails::Engine::Configurable::ClassMethods","classes\/Rails\/Engine\/Configurable\/ClassMethods.html#M004066","()","",2],["config","Rails::Plugin","classes\/Rails\/Plugin.html#M004344","()","",2],["config","Rails::Railtie::Configurable","classes\/Rails\/Railtie\/Configurable.html#M003993","()","",2],["config","Rails::Railtie::Configurable::ClassMethods","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html#M003991","()","",2],["config_accessor","ActiveSupport::Configurable::ClassMethods","classes\/ActiveSupport\/Configurable\/ClassMethods.html#M007544","(*names)","Allows you to add shortcut so that you don't have to refer to attribute through config. Also look at",2],["configru","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004147","()","",2],["configuration","Rails","classes\/Rails.html#M003895","()","The Configuration instance used to configure the Rails environment ",2],["configurations","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005015","","Contains the database configuration - as is typically stored in config\/database.yml - as a Hash. For",2],["configure","ActiveSupport::Configurable::ClassMethods","classes\/ActiveSupport\/Configurable\/ClassMethods.html#M007543","()","",2],["configure","Rails::Application","classes\/Rails\/Application.html#M003997","(&block)","",2],["connected?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M004666","()","Returns true if Active Record is connected. ",2],["connected?","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M004658","(klass)","Returns true if a connection that's accessible to this class has already been opened. ",2],["connected?","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004639","()","Returns true if a connection has already been opened. ",2],["connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M004663","()","Returns the connection currently associated with the class. This can also be used to \"borrow\" the connection",2],["connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M004633","()","Returns the connection currently associated with the class. This can also be used to \"borrow\" the connection",2],["connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004636","()","Retrieve the connection associated with the current thread, or call #checkout to obtain one if necessary.",2],["connection","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M004952","()","",2],["connection","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005177","","Use the ActiveRecord::Base.connection by default. ",2],["connection","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005181","()","",2],["connection","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005363","(refresh = false)","An instance of ActiveResource::Connection that is the base \\connection to the remote service. The +refresh+",2],["connection","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005416","(refresh = false)","",2],["connection_handler","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M004632","","The connection handler ",2],["connection_pool","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M004664","()","",2],["consider_all_requests_local?","Rails::InfoController","classes\/Rails\/InfoController.html#M004054","()","",2],["console","Rails::Railtie","classes\/Rails\/Railtie.html#M004314","(&blk)","",2],["constantize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007605","(camel_cased_word)","Tries to find a constant with the name specified in the argument string: \"Module\".constantize     # =>",2],["constraints","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M006177","(constraints = {})","=== Parameter Restriction Allows you to constrain the nested routes based on a set of rules. For instance,",2],["construct_conditions","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005267","()","Build SQL conditions from attributes, qualified by table name. ",2],["construct_from","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005269","()","",2],["construct_join_attributes","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005273","(associate)","Construct attributes for :through pointing to owner and associate. ",2],["construct_join_dependency_for_association_find","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004806","()","",2],["construct_joins","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005271","(custom_joins = nil)","",2],["construct_limited_ids_condition","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004810","(relation)","",2],["construct_owner_attributes","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005272","(reflection)","Construct attributes for associate pointing to owner. ",2],["construct_quoted_owner_attributes","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005268","(reflection)","Associate attributes pointing to owner, quoted. ",2],["construct_relation_for_association_calculations","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004807","()","",2],["construct_relation_for_association_find","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004808","(join_dependency)","",2],["construct_scope","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005266","()","",2],["construct_select","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005270","(custom_select = nil)","",2],["consumes?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006758","(string)","Returns +true+ when the proxy class can handle the string. Returns +false+ otherwise. ",2],["content_columns","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005045","()","Returns an array of column objects where the primary id, all columns ending in \"_id\" or \"_count\", and",2],["content_for","ActionView::Helpers::CaptureHelper","classes\/ActionView\/Helpers\/CaptureHelper.html#M006599","(name, content = nil, &block)","Calling content_for stores a block of markup in an identifier for later use. You can make subsequent",2],["content_for?","ActionView::Helpers::CaptureHelper","classes\/ActionView\/Helpers\/CaptureHelper.html#M006600","(name)","content_for? simply checks whether any content has been captured yet using content_for Useful to render",2],["content_length","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005863","()","Returns the content length of the request as an integer. ",2],["content_mime_type","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M005889","()","The MIME type of the HTTP request, such as Mime::XML. For backward compatibility, the post \\format is",2],["content_tag","ActionView::Helpers::TagHelper","classes\/ActionView\/Helpers\/TagHelper.html#M006620","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","Returns an HTML block tag of type +name+ surrounding the +content+. Add HTML attributes by passing an",2],["content_tag_for","ActionView::Helpers::RecordTagHelper","classes\/ActionView\/Helpers\/RecordTagHelper.html#M006476","(tag_name, record, *args, &block)","content_tag_for creates an HTML element with id and class parameters that relate to the specified Active",2],["content_type","ActionController::Metal","classes\/ActionController\/Metal.html#M005629","()","",2],["content_type","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M005890","()","",2],["content_type=","ActionController::Metal","classes\/ActionController\/Metal.html#M005628","(type)","Basic implementations for content_type=, location=, and headers are provided to reduce the dependency",2],["controller","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M006175","(controller, options={})","Scopes routes to a specific controller Example: controller \"food\" do match \"bacon\", :action => \"bacon\"",2],["controller","Object","classes\/Object.html#M003995","()","",2],["controller_class","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M005609","()","",2],["controller_class=","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M005608","(new_class)","",2],["controller_class_name","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M004098","()","",2],["controller_class_path","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M004095","()","",2],["controller_file_name","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M004096","()","",2],["controller_file_path","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M004097","()","",2],["controller_i18n_scope","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M004099","()","",2],["controller_name","ActionController::Metal","classes\/ActionController\/Metal.html#M005623","()","Returns the last part of the controller's name, underscored, without the ending \"Controller\". For instance,",2],["controller_name","ActionController::Metal","classes\/ActionController\/Metal.html#M005624","()","Delegates to the class' #controller_name ",2],["controller_path","AbstractController::Base","classes\/AbstractController\/Base.html#M005533","()","Returns the full controller name, underscored, without the ending Controller. For instance, MyApp::MyPostsController",2],["controller_path","AbstractController::Base","classes\/AbstractController\/Base.html#M005536","()","Delegates to the class' #controller_path ",2],["controller_path","ActionView::Base","classes\/ActionView\/Base.html#M006330","()","",2],["controller_path=","ActionView::TestCase::TestController","classes\/ActionView\/TestCase\/TestController.html#M006289","(path)","",2],["controller_paths","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004332","()","",2],["controller_paths=","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004331","(value)","",2],["convert_key","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007457","(key)","",2],["convert_to_model","ActionView::Context","classes\/ActionView\/Context.html#M006233","(object)","",2],["convert_value","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007458","(value)","",2],["cookie_jar","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005985","()","",2],["cookie_secret","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004334","()","",2],["cookie_secret=","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004333","(value)","",2],["cookies","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M006111","()","A map of the cookies returned by the last response, and which will be sent with the next request. ",2],["cookies","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005830","()","Returns the response cookies, converted to a Hash of (name => value) pairs assert_equal 'AuthorOfNewPage',",2],["cookies","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M006094","()","",2],["cookies","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006062","()","",2],["copy_stylesheets_file","Rails::Generators::StylesheetsGenerator","classes\/Rails\/Generators\/StylesheetsGenerator.html#M004141","()","",2],["copy_view_files","Erb::Generators::ControllerGenerator","classes\/Erb\/Generators\/ControllerGenerator.html#M004263","()","",2],["copy_view_files","Erb::Generators::ScaffoldGenerator","classes\/Erb\/Generators\/ScaffoldGenerator.html#M004242","()","",2],["count","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007771","()","Returns the number of error messages. p.errors.add(:name, \"can't be blank\") p.errors.count # => 1 p.errors.add(:name,",2],["count","ActiveRecord::Calculations","classes\/ActiveRecord\/Calculations.html#M004860","(column_name = nil, options = {})","Count operates using three different approaches. * Count all: By not passing any parameters to count,",2],["count_by_sql","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005026","(sql)","Returns the result of an SQL statement that should only include a COUNT(*) in the SELECT part. The use",2],["count_observers","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M007750","()","",2],["counter_name","ActionView::Template","classes\/ActionView\/Template.html#M006307","()","",2],["create","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005025","(attributes = nil, &block)","Creates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["create","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004700","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Alias for #insert",2],["create","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004984","(*args, &block)","",2],["create","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005372","(attributes = {})","Creates a new resource instance and makes a request to the remote service that it be saved, making it",2],["create","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005418","()","Create (i.e., \\save to the remote service) the \\new resource. ",2],["create","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007573","(raw_value, created_at, options = {})","Create an entry with internal attributes set. This method is intended to be used by implementations that",2],["create","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006890","(name)","Alias for #new",2],["create!","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004985","(*args, &block)","",2],["create!","ActiveRecord::Validations::ClassMethods","classes\/ActiveRecord\/Validations\/ClassMethods.html#M005208","(attributes = nil, &block)","Creates an object just like Base.create but calls save! instead of save so an exception is raised if",2],["create_active_record_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004170","()","",2],["create_app_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004167","()","",2],["create_boot_file","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004169","()","",2],["create_config_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004168","()","",2],["create_controller_files","Rails::Generators::ControllerGenerator","classes\/Rails\/Generators\/ControllerGenerator.html#M004135","()","",2],["create_controller_files","Rails::Generators::ScaffoldControllerGenerator","classes\/Rails\/Generators\/ScaffoldControllerGenerator.html#M004134","()","",2],["create_database","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004459","(name, options = {})","Create a new MySQL database with optional <tt>:charset<\/tt> and <tt>:collation<\/tt>. Charset defaults",2],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004713","(name, options = {})","Create a new PostgreSQL database.  Options include <tt>:owner<\/tt>, <tt>:template<\/tt>, <tt>:encoding<\/tt>,",2],["create_db_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004171","()","",2],["create_doc_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004172","()","",2],["create_fixture_file","TestUnit::Generators::ModelGenerator","classes\/TestUnit\/Generators\/ModelGenerator.html#M004072","()","",2],["create_fixtures","Fixtures","classes\/Fixtures.html#M004883","(fixtures_directory, table_names, class_names = {})","",2],["create_fixtures","Object","classes\/Object.html#M004287","(*table_names, &block)","",2],["create_generated_attribute","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004125","(attribute_type, name = 'test')","Create a Rails::Generators::GeneratedAttribute by supplying the attribute type and, optionally, the attribute",2],["create_generator_files","Rails::Generators::GeneratorGenerator","classes\/Rails\/Generators\/GeneratorGenerator.html#M004131","()","",2],["create_helper_files","Rails::Generators::HelperGenerator","classes\/Rails\/Generators\/HelperGenerator.html#M004130","()","",2],["create_helper_files","TestUnit::Generators::HelperGenerator","classes\/TestUnit\/Generators\/HelperGenerator.html#M004070","()","",2],["create_lib_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004173","()","",2],["create_lib_files","Rails::Generators::PluginGenerator","classes\/Rails\/Generators\/PluginGenerator.html#M004138","()","",2],["create_log_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004174","()","",2],["create_prototype_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004178","()","",2],["create_public_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004175","()","",2],["create_public_image_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004176","()","",2],["create_public_stylesheets_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004177","()","",2],["create_reflection","ActiveRecord::Reflection::ClassMethods","classes\/ActiveRecord\/Reflection\/ClassMethods.html#M005142","(macro, name, options, active_record)","",2],["create_root","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004165","()","",2],["create_root_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004166","()","",2],["create_root_files","Rails::Generators::PluginGenerator","classes\/Rails\/Generators\/PluginGenerator.html#M004137","()","",2],["create_root_folder","Erb::Generators::ScaffoldGenerator","classes\/Erb\/Generators\/ScaffoldGenerator.html#M004241","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004770","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004405","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004709","()","",2],["create_script_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004179","()","",2],["create_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004573","(table_name, options = {})","Creates a new table with the name +table_name+. +table_name+ may either be a String or a Symbol. There",2],["create_tasks_files","Rails::Generators::PluginGenerator","classes\/Rails\/Generators\/PluginGenerator.html#M004139","()","",2],["create_test_file","TestUnit::Generators::ModelGenerator","classes\/TestUnit\/Generators\/ModelGenerator.html#M004071","()","",2],["create_test_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004180","()","",2],["create_test_files","TestUnit::Generators::ControllerGenerator","classes\/TestUnit\/Generators\/ControllerGenerator.html#M004077","()","",2],["create_test_files","TestUnit::Generators::IntegrationGenerator","classes\/TestUnit\/Generators\/IntegrationGenerator.html#M004076","()","",2],["create_test_files","TestUnit::Generators::MailerGenerator","classes\/TestUnit\/Generators\/MailerGenerator.html#M004075","()","",2],["create_test_files","TestUnit::Generators::ObserverGenerator","classes\/TestUnit\/Generators\/ObserverGenerator.html#M004074","()","",2],["create_test_files","TestUnit::Generators::PerformanceGenerator","classes\/TestUnit\/Generators\/PerformanceGenerator.html#M004069","()","",2],["create_test_files","TestUnit::Generators::PluginGenerator","classes\/TestUnit\/Generators\/PluginGenerator.html#M004078","()","",2],["create_test_files","TestUnit::Generators::ScaffoldGenerator","classes\/TestUnit\/Generators\/ScaffoldGenerator.html#M004073","()","",2],["create_tmp_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004181","()","",2],["create_vendor_files","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004182","()","",2],["create_with","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004844","(value)","",2],["creator?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M005187","()","",2],["csrf_meta_tag","ActionView::Helpers::CsrfHelper","classes\/ActionView\/Helpers\/CsrfHelper.html#M006533","()","Returns a meta tag with the cross-site request forgery protection token for forms to use. Place this",2],["css_select","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M006078","(*args)","Select and return all matching elements. If called with a single argument, uses that argument as a selector",2],["current","DateTime","classes\/DateTime.html#M007105","()","Returns <tt>Time.zone.now.to_datetime<\/tt> when <tt>Time.zone<\/tt> or <tt>config.time_zone<\/tt> are set,",2],["current","Time","classes\/Time.html#M007286","()","Returns <tt>Time.zone.now<\/tt> when <tt>Time.zone<\/tt> or <tt>config.time_zone<\/tt> are set, otherwise",2],["current_cycle","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006389","(name = \"default\")","Returns the current cycle string after a cycle has been started. Useful for complex table highlighting",2],["current_database","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004461","()","",2],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004719","()","Returns the current database name. ",2],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M006668","()","",2],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M006659","()","",2],["current_page?","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006611","(options)","True if the current request URI was generated by the given +options+. ==== Examples Let's say we're in",2],["current_savepoint_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004773","()","",2],["custom_join_sql","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004849","(*joins)","",2],["custom_method_collection_url","ActiveResource::CustomMethods::ClassMethods","classes\/ActiveResource\/CustomMethods\/ClassMethods.html#M005482","(method_name, options = {})","",2],["cycle","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006388","(first_value, *values)","Creates a Cycle object whose _to_s_ method cycles through elements of an array every time it is called.",2],["daemon","Process","classes\/Process.html#M007154","(nochdir = nil, noclose = nil)","",2],["dasherize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007602","(underscored_word)","Replaces underscores with dashes in the string. Example: \"puni_puni\" # => \"puni-puni\" ",2],["data","ActiveRecord::SessionStore::Session","classes\/ActiveRecord\/SessionStore\/Session.html#M005173","()","Lazy-unmarshal session state. ",2],["data","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005190","()","Lazy-unmarshal session state. ",2],["data_column","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005180","","The data field defaults to 'data'. ",2],["data_column_name","ActiveRecord::SessionStore::Session","classes\/ActiveRecord\/SessionStore\/Session.html#M005165","","Customizable data column name.  Defaults to 'data'. ",2],["data_column_size_limit","ActiveRecord::SessionStore::Session","classes\/ActiveRecord\/SessionStore\/Session.html#M005166","()","",2],["database_configuration","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004349","()","Loads and returns the contents of the #database_configuration_file. The contents of the file are processed",2],["database_configuration_file","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004328","()","",2],["database_configuration_file=","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004327","(value)","",2],["database_yml","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004151","()","",2],["date_select","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006541","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, and day) pre-selected for accessing a specified date-based",2],["date_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006584","(method, options = {}, html_options = {})","",2],["datetime_select","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006543","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, day, hour, and minute) pre-selected for accessing",2],["datetime_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006586","(method, options = {}, html_options = {})","",2],["days_in_month","Time","classes\/Time.html#M007282","(month, year = now.year)","Return the number of days in the given month. If no year is specified, it will use the current year.",2],["db","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004152","()","",2],["debug","ActionView::Helpers::DebugHelper","classes\/ActionView\/Helpers\/DebugHelper.html#M006396","(object)","Returns a YAML representation of +object+ wrapped with <pre> and <\/pre>. If the object cannot be converted",2],["debug_protected_attribute_removal","ActiveModel::MassAssignmentSecurity::Sanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html#M007720","(attributes, sanitized_attributes)","",2],["debug_rjs=","ActionView::Base","classes\/ActionView\/Base.html#M006324","(new_value)","",2],["debugger","Kernel","classes\/Kernel.html#M007143","()","Starts a debugging session if ruby-debug has been loaded (call rails server --debugger to do load it).",2],["decode","ActiveResource::Formats::JsonFormat","classes\/ActiveResource\/Formats\/JsonFormat.html#M005476","(json)","",2],["decode","ActiveResource::Formats::XmlFormat","classes\/ActiveResource\/Formats\/XmlFormat.html#M005469","(xml)","",2],["decode","ActiveSupport::JSON::Backends::JSONGem","classes\/ActiveSupport\/JSON\/Backends\/JSONGem.html#M006991","(json)","Parses a JSON string or IO and convert it into an object ",2],["decode","ActiveSupport::JSON::Backends::Yajl","classes\/ActiveSupport\/JSON\/Backends\/Yajl.html#M006993","(json)","Parses a JSON string or IO and convert it into an object ",2],["decode","ActiveSupport::JSON::Backends::Yaml","classes\/ActiveSupport\/JSON\/Backends\/Yaml.html#M006995","(json)","Parses a JSON string or IO and converts it into an object ",2],["decode64","ActiveSupport::Base64","classes\/ActiveSupport\/Base64.html#M006976","(data)","Decodes a base 64 encoded string to its original representation. ActiveSupport::Base64.decode64(\"T3JpZ2luYWwgdW5lbmNvZGVkIHN0cmluZw==\")",2],["decode_credentials","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M005712","(request)","",2],["decode_credentials","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005725","(header)","",2],["decode_credentials_header","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005724","(request)","",2],["decompose","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006788","()","Performs canonical decomposition on all the characters. Example: '\u00e9'.length                         #",2],["decompose_codepoints","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006796","(type, codepoints)","Decompose composed characters to the decomposed form. ",2],["decompress","ActiveSupport::Gzip","classes\/ActiveSupport\/Gzip.html#M007008","(source)","Decompresses a gzipped string. ",2],["decrement","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004928","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and subtracts the value passed as +by+ (default is 1). The decrement",2],["decrement","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006963","(name, amount = 1, options = nil)","",2],["decrement","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M006952","(name, amount = 1, options = nil)","Decrement an integer value in the cache. ",2],["decrement","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007561","(name, amount = 1, options = nil)","Increment an integer value in the cache. Options are passed to the underlying cache implementation. All",2],["decrement!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004929","(attribute, by = 1)","Wrapper around +decrement+ that saves the record. This method differs from its non-bang version in that",2],["decrement_counter","ActiveRecord::CounterCache","classes\/ActiveRecord\/CounterCache.html#M005296","(counter_name, id)","Decrement a number field by one, usually representing a count. This works the same as increment_counter",2],["decrement_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004768","()","",2],["decrypt","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M006742","(encrypted_message)","",2],["decrypt_and_verify","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M006744","(value)","",2],["default","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006633","(value = nil)","",2],["default","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007439","(key = nil)","",2],["default","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M004104","()","",2],["default","RailsEnvironment","classes\/RailsEnvironment.html#M003911","()","",2],["default=","RailsEnvironment","classes\/RailsEnvironment.html#M003912","(rails_env)","",2],["default_action","ActionController::Responder","classes\/ActionController\/Responder.html#M005769","()","By default, render the <code>:edit<\/code> action for HTML requests with failure, unless the verb is POST.",2],["default_aliases_for_option","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004218","(name, options)","Return default aliases for the option name given doing a lookup in Rails::Generators.aliases. ",2],["default_for_option","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004219","(config, name, options, default)","Return default for the option name given doing a lookup in config. ",2],["default_format","ActionView::Template::Handlers::RJS","classes\/ActionView\/Template\/Handlers\/RJS.html#M006255","()","",2],["default_inspect","DateTime","classes\/DateTime.html#M007093","()","Alias for #inspect",2],["default_middleware_stack","Rails::Application","classes\/Rails\/Application.html#M004038","()","",2],["default_options","Rails::Server","classes\/Rails\/Server.html#M003977","()","",2],["default_primary_key_type","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004454","()","",2],["default_render","ActionController::ImplicitRender","classes\/ActionController\/ImplicitRender.html#M005740","()","",2],["default_render","ActionController::Responder","classes\/ActionController\/Responder.html#M005766","()","If a given response block was given, use it, otherwise call render on controller. ",2],["default_scope","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005080","(options = {})","Sets the default options for the model. The format of the <tt>options<\/tt> argument is the same as in",2],["default_sequence_name","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004605","(table, column)","",2],["default_source_root","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004210","()","Returns the default source root for a given generator. This is used internally by rails to set its generators",2],["default_timezone","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005020","","Determines whether to use Time.local (using :local) or Time.utc (using :utc) when pulling dates and times",2],["default_url_options","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M006113","()","",2],["default_url_options","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M006166","(options)","Alias for #default_url_options=",2],["default_url_options","ActionMailer::Base::DeprecatedUrlOptions","classes\/ActionMailer\/Base\/DeprecatedUrlOptions.html#M006654","()","",2],["default_url_options=","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M006165","(options)","",2],["default_url_options=","ActionMailer::Base::DeprecatedUrlOptions","classes\/ActionMailer\/Base\/DeprecatedUrlOptions.html#M006655","(val)","",2],["default_value_for_option","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004217","(name, options)","Return the default value for the option name given doing a lookup in Rails::Generators.options. ",2],["defaults","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M006178","(defaults = {})","Allows you to set default parameters for a route, such as this: defaults :id => 'home' do match 'scoped_pages\/(:id)',",2],["define","ActiveRecord::Schema","classes\/ActiveRecord\/Schema.html#M004378","(info={}, &block)","Eval the given block. All methods available to the current connection adapter are available within the",2],["define_attr_method","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007639","(name, value=nil, &block)","Defines an \"attribute\" method (like +inheritance_column+ or +table_name+). A new (class) method will",2],["define_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007644","(attr_names)","Declares a the attributes that should be prefixed and suffixed by ActiveModel::AttributeMethods. To use,",2],["define_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M005155","()","Generates all the attribute related methods for columns in the database accessors, mutators and query",2],["define_callbacks","ActiveRecord::Observer","classes\/ActiveRecord\/Observer.html#M005300","(klass)","",2],["define_callbacks","ActiveSupport::Callbacks::ClassMethods","classes\/ActiveSupport\/Callbacks\/ClassMethods.html#M007406","(*callbacks)","Defines callbacks types: define_callbacks :validate This macro accepts the following options: * <tt>:terminator<\/tt>",2],["define_method_attribute","ActiveRecord::AttributeMethods::Read::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Read\/ClassMethods.html#M005226","(attr_name)","",2],["define_method_attribute","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/TimeZoneConversion\/ClassMethods.html#M005234","(attr_name)","Defined for all +datetime+ and +timestamp+ attributes when +time_zone_aware_attributes+ are enabled.",2],["define_method_attribute=","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/TimeZoneConversion\/ClassMethods.html#M005235","(attr_name)","Defined for all +datetime+ and +timestamp+ attributes when +time_zone_aware_attributes+ are enabled.",2],["define_method_attribute=","ActiveRecord::AttributeMethods::Write::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/Write\/ClassMethods.html#M005246","(attr_name)","",2],["define_model_callbacks","ActiveModel::Callbacks","classes\/ActiveModel\/Callbacks.html#M007673","(*callbacks)","define_model_callbacks accepts the same options define_callbacks does, in case you want to overwrite",2],["defined_activerecord_methods","ActiveRecord::AttributeMethods::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M005157","()","",2],["defined_app_const_base","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004193","()","",2],["defined_app_const_base?","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004194","()","Alias for #defined_app_const_base",2],["defined_app_name","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004192","()","",2],["delay","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006459","(seconds = 1)","Executes the content of the block after a delay of +seconds+. Example: # Generates: #     setTimeout(function()",2],["delete","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005615","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating DELETE HTTP method and set\/volley the response ",2],["delete","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006100","(path, parameters = nil, headers = nil)","Performs a DELETE request with the given parameters. See get() for more details. ",2],["delete","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M006170","(*args, &block)","Define a route that only recognizes HTTP PUT. For supported arguments, see +match+. Example: delete 'broccoli',",2],["delete","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005961","(key)","",2],["delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004597","(sql, name = nil)","Executes the delete statement and returns the number of rows affected. ",2],["delete","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004920","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["delete","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004999","(id_or_array)","Deletes the row with a primary key matching the +id+ argument, using a SQL +DELETE+ statement, and returns",2],["delete","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005377","(id, options = {})","Deletes the resources with the ID in the +id+ parameter. ==== Options All options specify \\prefix and",2],["delete","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005446","(path, headers = {})","Executes a DELETE request (see HTTP protocol documentation if unfamiliar). Used to delete resources.",2],["delete","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M005480","(custom_method_name, options = {})","",2],["delete","ActiveResource::CustomMethods::InstanceMethods","classes\/ActiveResource\/CustomMethods\/InstanceMethods.html#M005486","(method_name, options = {})","",2],["delete","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007557","(name, options = nil)","Deletes an entry in the cache. Returns +true+ if an entry is deleted. Options are passed to the underlying",2],["delete","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007451","(key)","Removes a specified key from the hash. ",2],["delete?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005857","()","Is this a DELETE request? Equivalent to <tt>request.request_method == :delete<\/tt>. ",2],["delete_all","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004998","(conditions = nil)","Deletes the records matching +conditions+ without instantiating the records first, and hence not calling",2],["delete_entry","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006967","(key, options)","",2],["delete_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M006921","(key, options)","",2],["delete_existing_fixtures","Fixtures","classes\/Fixtures.html#M004886","()","",2],["delete_matched","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006964","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M006953","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007559","(matcher, options = nil)","Delete all entries with keys matching the pattern. Options are passed to the underlying cache implementation.",2],["delete_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004615","(sql, name = nil)","Executes the delete statement and returns the number of rows affected. ",2],["delete_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006109","(path, parameters = nil, headers = nil)","Performs a DELETE request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["demodulize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007603","(class_name_in_module)","Removes the module part from the expression in the string. Examples: \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["deny?","ActiveModel::MassAssignmentSecurity::BlackList","classes\/ActiveModel\/MassAssignmentSecurity\/BlackList.html#M007726","(key)","",2],["deny?","ActiveModel::MassAssignmentSecurity::WhiteList","classes\/ActiveModel\/MassAssignmentSecurity\/WhiteList.html#M007725","(key)","",2],["deprecate","Rails::DeprecatedConstant","classes\/Rails\/DeprecatedConstant.html#M004336","(old, new)","",2],["deprecated_url_options","ActionMailer::Base::DeprecatedUrlOptions","classes\/ActionMailer\/Base\/DeprecatedUrlOptions.html#M006656","()","",2],["desc","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004205","(description=nil)","Tries to get the description from a USAGE file one folder above the source root otherwise uses a default",2],["descendants","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M007432","(klass)","",2],["descendants","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M007436","()","",2],["descends_from_active_record?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005052","()","True if this isn't a concrete subclass needing a STI type condition. ",2],["describe","ActiveSupport::Testing::Declarative","classes\/ActiveSupport\/Testing\/Declarative.html#M007482","(text)","",2],["destination","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004109","(path)","Sets the destination of generator files: destination File.expand_path(\"..\/tmp\", File.dirname(__FILE__))",2],["destroy","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005965","()","",2],["destroy","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004921","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["destroy","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004997","(id)","Destroy an object (or multiple objects) that has the given id, the object is instantiated first, therefore",2],["destroy","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005193","()","",2],["destroy","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005405","()","Deletes the resource from the remote service. ==== Examples my_id = 3 my_person = Person.find(my_id)",2],["destroy","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M004086","()","DELETE destroy ",2],["destroy_all","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004996","(conditions = nil)","Destroys the records matching +conditions+ by instantiating each record and calling its +destroy+ method.",2],["destroyed?","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004916","()","Returns true if this object has been destroyed, otherwise returns false. ",2],["details_for_lookup","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M005521","()","",2],["determine_default_controller_class","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M005610","(name)","",2],["determine_default_helper_class","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M006292","(name)","",2],["determine_install_method","Commands::Install","classes\/Commands\/Install.html#M003947","()","",2],["dev_or_edge?","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004199","()","",2],["direct_descendants","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M007431","(klass)","",2],["direct_descendants","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M007435","()","",2],["dirname","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M006804","()","Returns the directory in which the data files are stored ",2],["dirties_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M004626","(base, *method_names)","",2],["disable_referential_integrity","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004758","()","Override to turn off referential integrity while executing <tt>&block<\/tt>. ",2],["discard","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M006015","(k = nil)","Marks the entire flash or a single flash entry to be discarded by the end of the current action: flash.discard",2],["disconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004761","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004640","()","Disconnects all connections in the pool, and clears the pool. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004396","()","",2],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004680","()","Close the connection. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004417","()","",2],["dispatch","ActionController::Metal","classes\/ActionController\/Metal.html#M005638","(name, request)",":api: private ",2],["dispatch","ActionController::RackDelegation","classes\/ActionController\/RackDelegation.html#M005700","(action, request, response = ActionDispatch::Response.new)","",2],["display","ActionController::Responder","classes\/ActionController\/Responder.html#M005767","(resource, given_options={})","Display is just a shortcut to render a resource with the current format. display @user, :status => :ok",2],["display","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M004294","(results, options={})","Prints the mapping from filenames to annotations in +results+ ordered by filename. The +options+ hash",2],["distance_of_time_in_words","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006538","(from_time, to_time = 0, include_seconds = false, options = {})","Reports the approximate distance in time between two Time or Date objects or integers as seconds. Set",2],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006540","(from_time, include_seconds = false)","Alias for #time_ago_in_words",2],["distinct","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004620","(columns, order_by)","SELECT DISTINCT clause for a given set of columns and a given ORDER BY clause. Both PostgreSQL and Oracle",2],["div_for","ActionView::Helpers::RecordTagHelper","classes\/ActionView\/Helpers\/RecordTagHelper.html#M006475","(record, *args, &block)","Produces a wrapper DIV element with id and class parameters that relate to the specified Active Record",2],["doc","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004153","()","",2],["dom_class","ActionController::RecordIdentifier","classes\/ActionController\/RecordIdentifier.html#M005660","(record_or_class, prefix = nil)","The DOM class convention is to use the singular form of an object or class. Examples: dom_class(post)",2],["dom_id","ActionController::RecordIdentifier","classes\/ActionController\/RecordIdentifier.html#M005661","(record, prefix = nil)","The DOM id convention is to use the singular form of an object or class with the id following an underscore.",2],["domain","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005908","(tld_length = 1)","Returns the \\domain part of a \\host, such as \"rubyonrails.org\" in \"www.rubyonrails.org\". You can specify",2],["downcase","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006783","()","Convert characters in the string to lowercase. Example: 'V\u011aDA A V\u00ddZKUM'.mb_chars.downcase.to_s # => \"v\u011bda",2],["download","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M003960","(link)","",2],["draggable","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006377","(id, options = {})","Creates a script.aculo.us draggable element. See ActionView::Helpers::ScriptaculousHelper for more information.",2],["draggable_element","ActionView::Helpers::ScriptaculousHelper","classes\/ActionView\/Helpers\/ScriptaculousHelper.html#M006370","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ draggable. Example: <%= draggable_element(\"my_image\",",2],["drop_receiving","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006378","(id, options = {})","Creates a script.aculo.us drop receiving element. See ActionView::Helpers::ScriptaculousHelper for more",2],["drop_receiving_element","ActionView::Helpers::ScriptaculousHelper","classes\/ActionView\/Helpers\/ScriptaculousHelper.html#M006372","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ receive dropped draggable elements (created",2],["drop_table","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004466","(table_name, options = {})","",2],["drop_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004576","(table_name, options = {})","Drops a table from the database. ",2],["dst?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006688","()","",2],["dup","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005118","()","Returns duplicated record with unfreezed attributes. ",2],["dup","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005402","()","Duplicates the current resource without saving it. ==== Examples my_invoice = Invoice.create(:customer",2],["dup","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007447","()","Returns an exact copy of the hash. ",2],["duplicable?","Object","classes\/Object.html#M007366","()","Can you safely .dup this object? False for nil, false, true, symbols, numbers, class and module objects;",2],["each","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005828","(&callback)","",2],["each","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007768","()","Iterates through each error key, value pair in the error messages hash. Yields the attribute and the",2],["each","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M004277","()","",2],["each_full","ActiveModel::DeprecatedErrorMethods","classes\/ActiveModel\/DeprecatedErrorMethods.html#M007612","()","",2],["each_with_object","Enumerable","classes\/Enumerable.html#M007370","(memo, &block)","Iterates over a collection, passing the current element *and* the +memo+ to the block. Handy for building",2],["eager_autoload","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M007539","()","",2],["eager_autoload!","ActiveSupport::Autoload","classes\/ActiveSupport\/Autoload.html#M007540","()","",2],["eager_load","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004831","(*args)","",2],["eager_load","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004268","()","",2],["eager_load!","Rails::Engine","classes\/Rails\/Engine.html#M004367","()","",2],["eager_load!","Rails::Railtie","classes\/Rails\/Railtie.html#M004317","()","",2],["eager_load_paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004059","()","",2],["eager_loading?","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005006","()","",2],["element_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005368","(id, prefix_options = {}, query_options = nil)","Gets the element path for the given ID in +id+.  If the +query_options+ parameter is omitted, Rails will",2],["element_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005421","(options = nil)","",2],["email_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006510","(object_name, method, options = {})","Returns a text_field of type \"email\". ",2],["email_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006421","(name, value = nil, options = {})","Creates a text field of type \"email\". ==== Options * Accepts the same options as text_field_tag. ",2],["emitted_hidden_id?","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006526","()","",2],["empty?","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007772","()","Returns true if there are any errors, false if not. ",2],["empty?","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004990","()","Returns true if there are no records. ",2],["empty_directory_with_gitkeep","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004203","(destination, config = {})","",2],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004608","()","",2],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004445","()","",2],["empty_json_resource","ActionController::Responder","classes\/ActionController\/Responder.html#M005772","()","Return a valid empty JSON resource ",2],["empty_resource","ActionController::Responder","classes\/ActionController\/Responder.html#M005771","()","Delegate to proper empty resource method ",2],["emulate_booleans","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004380","","By default, the MysqlAdapter will consider all columns of type <tt>tinyint(1)<\/tt> as boolean. If you",2],["enable_warnings","Kernel","classes\/Kernel.html#M007135","()","Sets $VERBOSE to true for the duration of the block and back to its original value afterwards. ",2],["encode","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005407","(options={})","Returns the serialized string representation of the resource in the configured serialization format specified",2],["encode","ActiveResource::Formats::JsonFormat","classes\/ActiveResource\/Formats\/JsonFormat.html#M005475","(hash, options = nil)","",2],["encode","ActiveResource::Formats::XmlFormat","classes\/ActiveResource\/Formats\/XmlFormat.html#M005468","(hash, options={})","",2],["encode","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M006998","(value, options = nil)","Dumps object in JSON (JavaScript Object Notation). See www.json.org for more info. ",2],["encode","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M007001","(value, use_options = true)","",2],["encode64","ActiveSupport::Base64","classes\/ActiveSupport\/Base64.html#M006975","(data)","Encodes a string to its base 64 representation. Each 60 characters of output is separated by a newline",2],["encode_credentials","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M005713","(user_name, password)","",2],["encode_credentials","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005723","(http_method, credentials, password, password_is_ha1)","",2],["encode_credentials","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token.html#M005737","(token, options = {})","Encodes the given token and options into an Authorization header value. token   - String token. options",2],["encode_json","ActiveSupport::JSON::Variable","classes\/ActiveSupport\/JSON\/Variable.html#M006986","(encoder)","",2],["encode_with","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006701","(coder)","",2],["encode_with","BigDecimal","classes\/BigDecimal.html#M007181","(coder)","",2],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004720","()","Returns the current database encoding format. ",2],["encoding=","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004346","(value)","",2],["encrypt","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M006741","(value)","",2],["encrypt_and_sign","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M006743","(value)","",2],["end","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007393","(key=nil, object=nil)","This will supply contents for around and after filters, but not before filters (for the backward pass).",2],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M006661","()","",2],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M006664","(name)","",2],["end_of_day","DateTime","classes\/DateTime.html#M007118","()","Returns a new DateTime representing the end of the day (23:59:59) ",2],["end_of_day","Time","classes\/Time.html#M007321","()","Returns a new Time representing the end of the day, 23:59:59.999999 (.999999999 in ruby1.9) ",2],["end_of_month","Time","classes\/Time.html#M007324","()","Returns a new Time representing the end of the month (end of the last day of the month) ",2],["end_of_quarter","Time","classes\/Time.html#M007328","()","Returns a new Time representing the end of the quarter (end of the last day of march, june, september,",2],["end_of_week","Time","classes\/Time.html#M007314","()","Returns a new Time representing the end of this week, (end of Sunday) ",2],["end_of_year","Time","classes\/Time.html#M007332","()","Returns a new Time representing the end of the year (end of the 31st of december) ",2],["engines","Rails::Application::Railties","classes\/Rails\/Application\/Railties.html#M004362","()","",2],["entry","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M006403","(record, options = {})","Creates an entry tag for a specific record and prefills the id using class and id. Options: * <tt>:published<\/tt>:",2],["enumerate","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M004289","(tag, options={})","Prints all annotations with tag +tag+ under the root directories +app+, +lib+, and +test+ (recursively).",2],["env","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006050","()","",2],["env","Rails","classes\/Rails.html#M003903","()","",2],["env=","Rails","classes\/Rails.html#M003904","(environment)","",2],["env_defaults","Rails::Application","classes\/Rails\/Application.html#M004018","()","",2],["env_filter","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M005807","()","",2],["environment","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M007500","()","",2],["environment","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004225","(data=nil, options={}, &block)","Adds a line inside the Application class for config\/application.rb. If options :env is specified, the",2],["environment=","Commands::Plugin","classes\/Commands\/Plugin.html#M003940","(value)","",2],["eql?","ActionView::FileSystemResolver","classes\/ActionView\/FileSystemResolver.html#M006269","(resolver)","",2],["eql?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005114","(comparison_object)","Delegates to == ",2],["eql?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005400","(other)","Tests for equality (delegates to ==). ",2],["eql?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006714","(other)","",2],["erb_trim_mode","ActionView::Template::Handlers::ERB","classes\/ActionView\/Template\/Handlers\/ERB.html#M006250","","Specify trim mode for the ERB compiler. Defaults to '-'. See ERb documentation for suitable values. ",2],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M006662","(error_message)","",2],["error?","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse.html#M006148","()","Was there a server-side error? ",2],["error_message","ActionView::Helpers::ActiveModelInstanceTag","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html#M006433","()","",2],["error_wrapping","ActionView::Helpers::ActiveModelInstanceTag","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html#M006432","(html_tag)","",2],["errors","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M007715","()","Returns the Errors object that holds all information about attribute error messages. ",2],["errors","ActiveResource::Validations","classes\/ActiveResource\/Validations.html#M005435","()","Returns the Errors object that holds all information about attribute error messages. ",2],["errors","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M004085","()","POST create PUT update ",2],["escape","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M007004","(string)","",2],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004689","(value)","Escapes binary strings for bytea input to the database. ",2],["escape_javascript","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M006436","(javascript)","Escape carrier returns and single and double quotes for JavaScript segments. ",2],["escape_once","ActionView::Helpers::TagHelper","classes\/ActionView\/Helpers\/TagHelper.html#M006622","(html)","Returns an escaped version of +html+ without affecting existing escaped entities. ==== Examples escape_once(\"1",2],["establish_connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M004634","(spec = nil)","Establishes the connection to the database. Accepts a hash as input where the <tt>:adapter<\/tt> key must",2],["establish_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M004652","(name, spec)","",2],["etag","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M005922","()","",2],["etag=","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M005924","(etag)","",2],["etag?","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M005923","()","",2],["etag_matches?","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M005916","(etag)","",2],["except","ActiveRecord::SpawnMethods","classes\/ActiveRecord\/SpawnMethods.html#M004827","(*skips)","",2],["excerpt","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006383","(text, phrase, *args)","Extracts an excerpt from +text+ that matches the first instance of +phrase+. The <tt>:radius<\/tt> option",2],["exclude?","Enumerable","classes\/Enumerable.html#M007373","(object)","The negative of the Enumerable#include?. Returns true if the collection does not include the object.",2],["exec_script_rails!","Rails::ScriptRailsLoader","classes\/Rails\/ScriptRailsLoader.html#M004284","()","",2],["execute","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004594","(sql, name = nil, skip_logging = false)","Executes the SQL statement in the context of this connection. ",2],["execute","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004703","(sql, name = nil)","Executes an SQL statement, returning a PGresult object on success or raising a PGError exception otherwise.",2],["execute_if_updated","ActiveSupport::FileUpdateChecker","classes\/ActiveSupport\/FileUpdateChecker.html#M006855","()","",2],["exist?","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007558","(name, options = nil)","Return true if the cache contains an entry for the given key. Options are passed to the underlying cache",2],["exists?","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005963","()","",2],["exists?","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M006333","(name, prefix = nil, partial = false)","",2],["exists?","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004804","(id = nil)","Returns true if a record exists in the table that matches the +id+ or conditions given, or false otherwise.",2],["exists?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005406","()","Evaluates to <tt>true<\/tt> if this resource is not <tt>new?<\/tt> and is found on the remote service.",2],["exists?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005378","(id, options = {})","Asserts the existence of a resource, returning <tt>true<\/tt> if the resource is found. ==== Examples",2],["expand_cache_key","ActiveSupport::Cache","classes\/ActiveSupport\/Cache.html#M007547","(key, namespace = nil)","",2],["expand_hash_conditions_for_aggregates","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005088","(attrs)","Accepts a hash of SQL conditions and replaces those attributes that correspond to a +composed_of+ relationship",2],["expected_response","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005720","(http_method, uri, credentials, password, password_is_ha1=true)","Returns the expected response for a request of +http_method+ to +uri+ with the decoded +credentials+",2],["expire_action","ActionController::Caching::Actions","classes\/ActionController\/Caching\/Actions.html#M005578","(options = {})","",2],["expire_fragment","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M005575","(key, options = nil)","Removes fragments from the cache. +key+ can take one of three forms: * String - This would normally take",2],["expire_page","ActionController::Caching::Pages","classes\/ActionController\/Caching\/Pages.html#M005588","(options = {})","Expires the page that was cached with the +options+ as a key. Example: expire_page :controller => \"lists\",",2],["expire_page","ActionController::Caching::Pages::ClassMethods","classes\/ActionController\/Caching\/Pages\/ClassMethods.html#M005582","(path)","Expires the page that was cached with the +path+ as a key. Example: expire_page \"\/lists\/show\" ",2],["expired?","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007578","()","Check if the entry is expired. The +expires_in+ parameter can override the value set when the entry was",2],["expires_at","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007580","()","Seconds since the epoch when the entry will expire. ",2],["expires_at=","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007579","(time)","Set a new time when the entry will expire. ",2],["expires_in","ActionController::ConditionalGet","classes\/ActionController\/ConditionalGet.html#M005753","(seconds, options = {})","Sets a HTTP 1.1 Cache-Control header. Defaults to issuing a \"private\" instruction, so that intermediate",2],["expires_now","ActionController::ConditionalGet","classes\/ActionController\/ConditionalGet.html#M005754","()","Sets a HTTP 1.1 Cache-Control header of \"no-cache\" so no caching should occur by the browser or intermediate",2],["extended","ActiveModel::Callbacks","classes\/ActiveModel\/Callbacks.html#M007672","(base)","",2],["extended","ActiveSupport::Concern","classes\/ActiveSupport\/Concern.html#M006977","(base)","",2],["extended","ActiveSupport::Testing::Declarative","classes\/ActiveSupport\/Testing\/Declarative.html#M007481","(klass)","",2],["extending","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004846","(*modules, &block)","",2],["extension","ActiveResource::Formats::JsonFormat","classes\/ActiveResource\/Formats\/JsonFormat.html#M005473","()","",2],["extension","ActiveResource::Formats::XmlFormat","classes\/ActiveResource\/Formats\/XmlFormat.html#M005466","()","",2],["externals","RailsEnvironment","classes\/RailsEnvironment.html#M003918","()","",2],["externals=","RailsEnvironment","classes\/RailsEnvironment.html#M003919","(items)","",2],["extify","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004239","(name)","Add an extension to the given name based on the platform. ",2],["extract_annotations_from","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M004293","(file, pattern)","If +file+ is the filename of a file that contains annotations this method returns a hash with a single",2],["extract_default","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004506","(default)","",2],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007437","()","",2],["fallback_string_to_date","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004519","(string)","",2],["fallback_string_to_time","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004520","(string)","",2],["fallbacks","Rails::Generators","classes\/Rails\/Generators.html#M004024","()","Hold configured generators fallbacks. If a plugin developer wants a generator group to fallback to another",2],["fast_string_to_date","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004517","(string)","",2],["fast_string_to_time","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004518","(string)","Doesn't handle time zones. ",2],["favicon_link_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006564","(source='\/favicon.ico', options={})","Web browsers cache favicons. If you just throw a <tt>favicon.ico<\/tt> into the document root of your",2],["fetch","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007553","(name, options = nil)","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["fetch","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007445","(key, *extras)","Fetches the value for the specified key, same as doing hash[key] ",2],["fetch","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M003961","(links = @urls_to_fetch)","",2],["fetch_dir","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M003962","(url)","",2],["field_set_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006416","(legend = nil, options = nil, &block)","Creates a field set for grouping HTML form elements. <tt>legend<\/tt> will become the fieldset's title",2],["field_type","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M004103","()","",2],["fields_for","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006520","(record_or_name_or_array, *args, &block)","",2],["fields_for","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006497","(record_or_name_or_array, *args, &block)","Creates a scope around a specific model object like form_for, but doesn't create the form tags themselves.",2],["file","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004190","(*args, &block)","Define file as an alias to create_file for backwards compatibility. ",2],["file_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006502","(object_name, method, options = {})","Returns an file upload input tag tailored for accessing a specified attribute (identified by +method+)",2],["file_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006409","(name, options = {})","Creates a file upload field.  If you are using file uploads then you will also need to set the multipart",2],["file_path","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004246","()","",2],["filename","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M006805","()","Returns the filename for the data file for this version ",2],["filter","ActionDispatch::Http::ParameterFilter","classes\/ActionDispatch\/Http\/ParameterFilter.html#M005799","(params)","",2],["filter_by","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004275","(constraint)","",2],["filtered_env","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M005804","()","Return a hash of request.env with all sensitive data replaced. ",2],["filtered_options","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M007670","(value)","",2],["filtered_parameters","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M005803","()","Return a hash of parameters with all sensitive data replaced. ",2],["filtered_path","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M005805","()","Reconstructed a path with all sensitive GET parameters replaced. ",2],["filtered_query_string","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M005809","()","",2],["find","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M006323","(name, prefix = nil, partial = false)","",2],["find","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004800","(*args)","Find operates with four different retrieval approaches: * Find by id - This can either be a specific",2],["find","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005373","(*arguments)","Core method for finding resources.  Used similarly to Active Record's +find+ method. ==== Arguments The",2],["find","Plugin","classes\/Plugin.html#M003921","(name)","",2],["find","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M004081","(klass, params=nil)","GET show GET edit PUT update DELETE destroy ",2],["find","RailsEnvironment","classes\/RailsEnvironment.html#M003910","(dir=nil)","",2],["find","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M004291","(dirs=%w(app lib test))","Returns a hash that maps filenames under +dirs+ (recursively) to arrays with their annotations. Only",2],["find_all","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M006332","(name, prefix = nil, partial = false)","",2],["find_all","ActionView::Resolver","classes\/ActionView\/Resolver.html#M006258","(name, prefix=nil, partial=false, details={}, key=nil)","Normalizes the arguments and passes it on to find_template. ",2],["find_all_tag","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M006083","(conditions)","",2],["find_by_attributes","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004811","(match, attributes, *args)","",2],["find_by_session_id","ActiveRecord::SessionStore::Session","classes\/ActiveRecord\/SessionStore\/Session.html#M005167","(session_id)","Hook to set up sessid compatibility. ",2],["find_by_session_id","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005182","(session_id)","Look up a session by id and unmarshal its data if found. ",2],["find_by_sql","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005024","(sql)","Executes a custom SQL query against your database and returns all the results.  The results will be returned",2],["find_cmd","Rails::DBConsole","classes\/Rails\/DBConsole.html#M003966","(*commands)","",2],["find_first","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004816","()","",2],["find_in","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M004292","(dir)","Returns a hash that maps filenames under +dir+ (recursively) to arrays with their annotations. Only files",2],["find_last","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004817","()","",2],["find_layout","ActionView::Layouts","classes\/ActionView\/Layouts.html#M006285","(layout)","This is the method which actually finds the layout using details in the lookup context object. If no",2],["find_one","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004814","(id)","",2],["find_or_instantiator_by_attributes","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004812","(match, attributes, *args)","",2],["find_root_with_flag","Rails::Engine","classes\/Rails\/Engine.html#M004365","(flag, default=nil)","",2],["find_some","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004815","(ids)","",2],["find_tag","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M006082","(conditions)","",2],["find_template","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M006331","(name, prefix = nil, partial = false)","Alias for #find",2],["find_tzinfo","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006888","(name)","TODO: Preload instead of lazy load for thread safety ",2],["find_with_associations","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004805","()","",2],["find_with_ids","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004813","(*ids)","",2],["finder?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M005185","()","",2],["finish_template","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004183","()","",2],["first","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004801","(*args)","A convenience wrapper for <tt>find(:first, *args)<\/tt>. You can pass in all the same arguments to this",2],["first","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005374","(*args)","A convenience wrapper for <tt>find(:first, *args)<\/tt>. You can pass in all the same arguments to this",2],["fixture_file_upload","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M006096","(path, mime_type = nil, binary = false)","Shortcut for <tt>ARack::Test::UploadedFile.new(ActionController::TestCase.fixture_path + path, type)<\/tt>:",2],["fixture_is_cached?","Fixtures","classes\/Fixtures.html#M004878","(connection, table_name)","",2],["fixtures","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M004903","(*table_names)","",2],["flash","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M006008","()","Access the contents of the flash. Use <tt>flash[\"notice\"]<\/tt> to read a notice you put there or <tt>flash[\"notice\"]",2],["flash","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M006093","()","",2],["flash","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006137","()","A shortcut to the flash. Returns an empty hash if no session flash exists. ",2],["flush","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006861","()","",2],["flush","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html#M006850","()","",2],["flush_all!","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M006816","()","Flush all log_subscribers' logger. ",2],["flush_cache","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M006843","(*syms)","",2],["flushable_loggers","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M006815","()","",2],["follow_redirect!","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006104","()","Follow a single redirect response. If the last response was not a redirect, an exception will be raised.",2],["for_tag","ActiveSupport::TestCase","classes\/ActiveSupport\/TestCase.html#M006999","(tag)","",2],["foreign_key","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007604","(class_name, separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["forgery_whitelisted?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005861","()","",2],["forking_env?","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation.html#M007473","()","",2],["form_authenticity_param","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M005697","()","The form's authenticity parameter. Override to provide your own. ",2],["form_authenticity_token","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M005696","()","Sets the token value for the current session. ",2],["form_data?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005871","()","",2],["form_for","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006495","(record_or_name_or_array, *args, &proc)","Creates a form and a scope around a specific model object that is used as a base for questioning about",2],["form_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006404","(url_for_options = {}, options = {}, *parameters_for_url, &block)","Starts a form tag that points the action to an url configured with <tt>url_for_options<\/tt> just like",2],["format","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M005892","(view_path = [])","Returns the MIME type for the \\format used in the request. GET \/posts\/5.xml   | request.format => Mime::XML",2],["format","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005358","()","Returns the current format, default is ActiveResource::Formats::XmlFormat. ",2],["format","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M007532","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::GcTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M007535","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Memory","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M007526","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Objects","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M007529","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Time","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html#M007519","(measurement)","",2],["format","Erb::Generators::MailerGenerator","classes\/Erb\/Generators\/MailerGenerator.html#M004244","()","",2],["format=","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M005894","(extension)","Sets the \\format by string extension, which can be used to force custom formats that are not controlled",2],["format=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005357","(mime_type_reference_or_format)","Sets the format that attributes are sent and received in from a mime type reference: Person.format =",2],["formats","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M005893","()","",2],["formats=","ActionView::LookupContext::Details","classes\/ActionView\/LookupContext\/Details.html#M006342","(values)","Overload formats= to reject [\"*\/*\"] values. ",2],["formatted_offset","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006695","(colon = true, alternate_utc_string = nil)","",2],["formatted_offset","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006875","(colon=true, alternate_utc_string = nil)","Returns the offset of this time zone as a formatted string, of the format \"+HH:MM\". ",2],["formatted_offset","DateTime","classes\/DateTime.html#M007090","(colon = true, alternate_utc_string = nil)","Returns the +utc_offset+ as an +HH:MM formatted string. Examples: datetime = DateTime.civil(2000, 1,",2],["formatted_offset","Time","classes\/Time.html#M007290","(colon = true, alternate_utc_string = nil)","Returns the UTC offset as an +HH:MM formatted string. Time.local(2000).formatted_offset         # =>",2],["fragment_cache_key","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M005571","(key)","Given a key (as described in <tt>expire_fragment<\/tt>), returns a key suitable for use in reading, writing,",2],["fragment_exist?","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M005574","(key, options = nil)","Check if a cached fragment from the location signified by <tt>key<\/tt> exists (see <tt>expire_fragment<\/tt>",2],["framework_version","Rails::Info","classes\/Rails\/Info.html#M004374","(framework)","",2],["frameworks","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004321","(*args)","",2],["frameworks","Rails::Info","classes\/Rails\/Info.html#M004373","()","",2],["frameworks=","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004322","(*args)","Alias for #frameworks",2],["freeze","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005116","()","Freeze the attributes hash such that associations are still accessible, even on destroyed records. ",2],["freeze","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006731","()","",2],["freeze!","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004235","(args={})","Add Rails to \/vendor\/rails ==== Example freeze! ",2],["freeze_with_memoizable","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M006839","()","",2],["fresh?","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M005917","(response)","Check response freshness (Last-Modified and ETag) against request If-Modified-Since and If-None-Match",2],["fresh_when","ActionController::ConditionalGet","classes\/ActionController\/ConditionalGet.html#M005751","(options)","Sets the etag, last_modified, or both on the response and renders a \"304 Not Modified\" response if the",2],["from","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004845","(value)","",2],["from_array","ActiveResource::Errors","classes\/ActiveResource\/Errors.html#M005427","(messages, save_cache = false)","Grabs errors from an array of messages (like ActiveRecord::Validations) The second parameter directs",2],["from_json","ActiveModel::Serializers::JSON","classes\/ActiveModel\/Serializers\/JSON.html#M007620","(json)","",2],["from_json","ActiveResource::Errors","classes\/ActiveResource\/Errors.html#M005430","(json, save_cache = false)","Grabs errors from a json response. ",2],["from_now","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M007420","(time = ::Time.current)","Alias for #since",2],["from_rails_root","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M006232","(string)","",2],["from_response","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse.html#M006129","(response)","",2],["from_xml","ActiveModel::Serializers::Xml","classes\/ActiveModel\/Serializers\/Xml.html#M007618","(xml)","",2],["from_xml","ActiveResource::Errors","classes\/ActiveResource\/Errors.html#M005431","(xml, save_cache = false)","Grabs errors from an XML response. ",2],["frozen?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005117","()","Returns +true+ if the attributes hash has been frozen. ",2],["full_messages","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007780","()","Returns all the full error messages in an array. class Company validates_presence_of :name, :address,",2],["full_test_name","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M007490","()","",2],["fullpath","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005860","()","",2],["future?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006713","()","",2],["future?","DateTime","classes\/DateTime.html#M007107","()","Tells whether the DateTime object's datetime lies in the future ",2],["future?","Time","classes\/Time.html#M007296","()","Tells whether the Time object's time lies in the future ",2],["g_length","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006790","()","Returns the number of grapheme clusters in the string. Example: '\u0915\u094d\u0937\u093f'.mb_chars.length   # => 4 '\u0915\u094d\u0937\u093f'.mb_chars.g_length",2],["g_pack","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006751","(unpacked)","Reverse operation of g_unpack. Example: Unicode.g_pack(Unicode.g_unpack('\u0915\u094d\u0937\u093f')) # => '\u0915\u094d\u0937\u093f'",2],["g_unpack","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006750","(string)","Unpack the string at grapheme boundaries. Returns a list of character lists. Example: Unicode.g_unpack('\u0915\u094d\u0937\u093f')",2],["gem","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004064","(name, options = {})","Rails 3, by default, uses bundler, which shims the Kernel#gem method so that it should behave correctly",2],["gem","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004223","(*args)","Adds an entry into Gemfile for the supplied gem. If env is specified, add the gem to the given environment.",2],["gem_for_database","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004200","()","",2],["gemfile","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004146","()","",2],["generate","ActiveSupport::MessageVerifier","classes\/ActiveSupport\/MessageVerifier.html#M006869","(value)","",2],["generate","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004232","(what, *args)","Generate something using a generator from Rails or a plugin. The second parameter is the argument string",2],["generate_message","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007781","(attribute, type = :invalid, options = {})","Translates an error message in its default scope (<tt>activemodel.errors.messages<\/tt>). Error messages",2],["generate_method_for_mime","AbstractController::Collector","classes\/AbstractController\/Collector.html#M005550","(mime)","",2],["generator","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004124","(args=self.default_arguments, options={}, config={})","Instantiate the generator. ",2],["generator_dir","Rails::Generators::GeneratorGenerator","classes\/Rails\/Generators\/GeneratorGenerator.html#M004132","()","",2],["generator_name","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004216","()","Removes the namespaces and get the generator name. For example, Rails::Generators::ModelGenerator will",2],["generators","Rails::Railtie","classes\/Rails\/Railtie.html#M004315","(&blk)","",2],["generators","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003981","()","Alias for #app_generators",2],["get","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005612","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating GET HTTP method and set\/volley the response ",2],["get","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006097","(path, parameters = nil, headers = nil)","Performs a GET request with the given parameters. - +path+: The URI (as a String) on which you want to",2],["get","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M006167","(*args, &block)","Define a route that only recognizes HTTP GET. For supported arguments, see +match+. Example: get 'bacon',",2],["get","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007766","(attribute)","Alias for #[]",2],["get","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005445","(path, headers = {})","Executes a GET request. Used to get (find) resources. ",2],["get","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M005477","(custom_method_name, options = {})","Invokes a GET to a given custom REST method. For example: Person.get(:active)  # GET \/people\/active.xml",2],["get","ActiveResource::CustomMethods::InstanceMethods","classes\/ActiveResource\/CustomMethods\/InstanceMethods.html#M005483","(method_name, options = {})","",2],["get","ActiveSupport::Dependencies::Reference","classes\/ActiveSupport\/Dependencies\/Reference.html#M007379","()","",2],["get?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005854","()","Is this a GET (or HEAD) request? Equivalent to <tt>request.request_method == :get<\/tt>. ",2],["get_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006106","(path, parameters = nil, headers = nil)","Performs a GET request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["getgm","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006681","()","Alias for #utc",2],["getlocal","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006687","()","Alias for #localtime",2],["getutc","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006682","()","Alias for #utc",2],["getutc","DateTime","classes\/DateTime.html#M007120","()","Alias for #utc",2],["git","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004227","(command={})","Run a command in git. ==== Examples git :init git :add => \"this.file that.rb\" git :add => \"onefile.rb\",",2],["git_url?","Plugin","classes\/Plugin.html#M003924","()","",2],["gitignore","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004148","()","",2],["gmt?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006691","()","Alias for #utc?",2],["gmt_offset","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006693","()","Alias for #utc_offset",2],["gmtime","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006683","()","Alias for #utc",2],["gmtoff","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006694","()","Alias for #utc_offset",2],["group","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004834","(*args)","",2],["group_by","Enumerable","classes\/Enumerable.html#M007368","()","Collect an enumerable into sets, grouped by the result of a block. Useful, for example, for grouping",2],["grouped_collection_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006366","(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","",2],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006352","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","Returns <tt><select><\/tt>, <tt><optgroup><\/tt> and <tt><option><\/tt> tags for the collection of existing",2],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006357","(grouped_options, selected_key = nil, prompt = nil)","Returns a string of <tt><option><\/tt> tags, like <tt>options_for_select<\/tt>, but wraps them with <tt><optgroup><\/tt>",2],["h","ERB::Util","classes\/ERB\/Util.html#M007045","(s)","Alias for #html_escape",2],["ha1","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005722","(credentials, password)","",2],["handle_unverified_request","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M005694","()","",2],["handler_for_rescue","ActiveSupport::Rescuable","classes\/ActiveSupport\/Rescuable.html#M007461","(exception)","",2],["handles_encoding?","ActionView::Template::Handlers::ERB","classes\/ActionView\/Template\/Handlers\/ERB.html#M006251","()","",2],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","classes\/ActiveRecord\/Associations\/ClassMethods.html#M004959","(association_id, options = {}, &extension)","Specifies a many-to-many relationship with another class. This associates two classes via an intermediate",2],["has_attribute?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005104","(attr_name)","Returns true if the given attribute is in the attributes hash ",2],["has_default?","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004501","()","",2],["has_empty_resource_definition?","ActionController::Responder","classes\/ActionController\/Responder.html#M005770","()","Check whether resource needs a specific definition of empty resource to be valid ",2],["has_errors?","ActionController::Responder","classes\/ActionController\/Responder.html#M005768","()","Check whether the resource has errors. ",2],["has_flash?","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006138","()","Do we have a flash? ",2],["has_flash_object?","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006140","(name=nil)","Does the specified flash object exist? ",2],["has_flash_with_contents?","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006139","()","Do we have a flash that has contents? ",2],["has_key?","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005956","(key)","",2],["has_many","ActiveRecord::Associations::ClassMethods","classes\/ActiveRecord\/Associations\/ClassMethods.html#M004956","(association_id, options = {}, &extension)","Specifies a one-to-many association. The following methods for retrieval and query of collections of",2],["has_one","ActiveRecord::Associations::ClassMethods","classes\/ActiveRecord\/Associations\/ClassMethods.html#M004957","(association_id, options = {})","Specifies a one-to-one association with another class. This method should only be used if the other class",2],["has_session_object?","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006141","(name=nil)","Does the specified object exist in the session? ",2],["has_template_object?","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006143","(name=nil)","Does the specified template object exist? ",2],["hash","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005115","()","Delegates to id in order to allow two records of the same type and id to work with something like: [",2],["hash","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005401","()","Delegates to id in order to allow two resources of the same type and \\id to work with something like:",2],["hash","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006724","()","Alias for #to_i",2],["having","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004839","(*args)","",2],["head","ActionController::Head","classes\/ActionController\/Head.html#M005706","(status, options = {})","Return a response that has no content (merely headers). The options argument is interpreted to be a hash",2],["head","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005616","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating HEAD HTTP method and set\/volley the response ",2],["head","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006101","(path, parameters = nil, headers = nil)","Performs a HEAD request with the given parameters. See get() for more details. ",2],["head","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005450","(path, headers = {})","Executes a HEAD request. Used to obtain meta-information about resources, such as whether they exist",2],["head?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005858","()","Is this a HEAD request? Equivalent to <tt>request.method == :head<\/tt>. ",2],["headers","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005859","()","Provides access to the request's HTTP headers, for example: request.headers[\"Content-Type\"] # => \"text\/plain\"",2],["headers","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006645","(args=nil)","Allows you to pass random and unusual headers to the new +Mail::Message+ object which will add them to",2],["headers","ActionMailer::Base::DeprecatedHeaderProxy","classes\/ActionMailer\/Base\/DeprecatedHeaderProxy.html#M006643","(hash = {})","",2],["headers","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005364","()","",2],["headers=","ActionController::Testing","classes\/ActionController\/Testing.html#M005680","(new_headers)","TODO : Rewrite tests using controller.headers= to use Rack env ",2],["help","Rails::Generators","classes\/Rails\/Generators.html#M004031","(command = 'generate')","Show help message with available generators. ",2],["helper","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M005554","(*args, &block)","The +helper+ class method can take a series of helper module names, a block, or both. ==== Parameters",2],["helper","Object","classes\/Object.html#M003994","()","",2],["helper_attr","ActionController::Helpers::ClassMethods","classes\/ActionController\/Helpers\/ClassMethods.html#M005747","(*attrs)","Declares helper accessors for controller attributes. For example, the following adds new +name+ and <tt>name=<\/tt>",2],["helper_class","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M006294","()","",2],["helper_method","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M005553","(*meths)","Declare a controller method as a helper. For example, the following makes the +current_user+ controller",2],["helper_method","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M006293","(*methods)","",2],["helpers","ActionController::Helpers::ClassMethods","classes\/ActionController\/Helpers\/ClassMethods.html#M005748","()","Provides a proxy to access helpers methods from outside the view. ",2],["helpers_dir","ActionController::Helpers::ClassMethods","classes\/ActionController\/Helpers\/ClassMethods.html#M005745","()","",2],["helpers_dir=","ActionController::Helpers::ClassMethods","classes\/ActionController\/Helpers\/ClassMethods.html#M005746","(value)","",2],["hex","ActiveSupport::SecureRandom","classes\/ActiveSupport\/SecureRandom.html#M006981","(n=nil)","SecureRandom.hex generates a random hex string. The argument n specifies the length of the random length.",2],["hidden_actions","AbstractController::Base","classes\/AbstractController\/Base.html#M005530","()","The list of hidden actions to an empty array. Defaults to an empty array. This can be modified by other",2],["hidden_field","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006524","(method, options = {})","",2],["hidden_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006501","(object_name, method, options = {})","Returns a hidden input tag tailored for accessing a specified attribute (identified by +method+) on an",2],["hidden_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006408","(name, value = nil, options = {})","Creates a hidden form input field used to transmit data that would be lost due to HTTP's statelessness",2],["hidden_namespaces","Rails::Generators","classes\/Rails\/Generators.html#M004029","()","",2],["hide","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006451","(*ids)","Hides the visible DOM elements with the given +ids+. Example: # Hide a few people # Generates: [\"person_29\",",2],["hide_action","ActionController::HideActions::ClassMethods","classes\/ActionController\/HideActions\/ClassMethods.html#M005780","(*args)","Sets all of the actions passed in as hidden actions. ==== Parameters *args<#to_s>:: A list of actions",2],["hide_namespaces","Rails::Generators","classes\/Rails\/Generators.html#M004030","(*namespaces)","",2],["highlight","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006382","(text, phrases, *args)","Highlights one or more +phrases+ everywhere in +text+ by inserting it into a <tt>:highlighter<\/tt> string.",2],["hook_for","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004207","(*names, &block)","Invoke a generator based on the value supplied by the user to the given option named \"name\". A class",2],["host","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005901","()","Returns the host for this request, such as example.com. ",2],["host","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M006110","()","The hostname used in the last request. ",2],["host!","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M006117","(name)","Set the host name to use in the next request. session.host! \"www.example.com\" ",2],["host=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006052","(host)","",2],["host_with_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005902","()","Returns a \\host:\\port string for this request, such as \"example.com\" or \"example.com:8080\". ",2],["html?","Mime::Type","classes\/Mime\/Type.html#M005846","()","",2],["html_document","ActionDispatch::Assertions::TagAssertions","classes\/ActionDispatch\/Assertions\/TagAssertions.html#M006084","()","",2],["html_escape","ERB::Util","classes\/ERB\/Util.html#M007044","(s)","A utility method for escaping HTML tag characters. This method is also aliased as <tt>h<\/tt>. In your",2],["html_safe","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M007059","()","",2],["html_safe?","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M007058","()","",2],["html_safe?","Fixnum","classes\/Fixnum.html#M007053","()","",2],["html_safe?","Object","classes\/Object.html#M007052","()","",2],["httpdate","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006703","()","",2],["https!","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M006115","(flag = true)","Specify whether or not the session should mimic a secure HTTPS request. session.https! session.https!(false)",2],["https?","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M006116","()","Return +true+ if the session is mimicking a secure HTTPS request. if session.https? ... end ",2],["human","ActiveModel::Name","classes\/ActiveModel\/Name.html#M007738","(options={})","Transform the model name into a more humane format, using I18n. By default, it will underscore then humanize",2],["human","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M007589","(rule, replacement)","Specifies a humanized form of a string by a regular expression rule or by a string mapping. When using",2],["human_attribute_name","ActiveModel::Translation","classes\/ActiveModel\/Translation.html#M007663","(attribute, options = {})","Transforms attribute names into a more human format, such as \"First name\" instead of \"first_name\". Person.human_attribute_name(\"first_name\")",2],["human_name","ActiveModel::Translation","classes\/ActiveModel\/Translation.html#M007664","(*args)","Model.human_name is deprecated. Use Model.model_name.human instead. ",2],["human_name","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004505","()","Returns the human name of the column name. ===== Examples Column.new('sales_stage', ...).human_name #",2],["human_name","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M004105","()","",2],["human_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004248","()","",2],["humanize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007594","(lower_case_and_underscored_word)","Capitalizes the first word and turns underscores into spaces and strips a trailing \"_id\", if any. Like",2],["i18n_scope","ActiveModel::Translation","classes\/ActiveModel\/Translation.html#M007661","()","Returns the i18n_scope for the class. Overwrite if you want custom lookup. ",2],["i18n_scope","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004250","()","",2],["id","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005397","()","Gets the <tt>\\id<\/tt> attribute of the resource. ",2],["id=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005398","(id)","Sets the <tt>\\id<\/tt> attribute of the resource. ",2],["id_constraint","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006218","()","",2],["id_constraint?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006217","()","",2],["id_from_response","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005420","(response)","Takes a response from a typical create post and pulls the ID out ",2],["identify","Fixtures","classes\/Fixtures.html#M004884","(label)","Returns a consistent, platform-independent identifier for +label+. Identifiers are positive integers",2],["ids_in_list_limit","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004756","()","Does this adapter restrict the number of ids you can use in a list. Oracle has a limit of 1000. ",2],["if_modified_since","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M005913","()","",2],["if_modified_since=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006057","(last_modified)","",2],["if_none_match","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M005914","()","",2],["if_none_match=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006058","(etag)","",2],["image_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006565","(source)","Computes the path to an image asset in the public images directory. Full paths from the document root",2],["image_submit_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006415","(source, options = {})","Displays an image which when clicked will submit the form. <tt>source<\/tt> is passed to AssetTagHelper#path_to_image",2],["image_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006571","(source, options = {})","Returns an html image tag for the +source+. The +source+ can be a full path or a file that exists in",2],["images","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004157","()","",2],["in","DateTime","classes\/DateTime.html#M007113","(seconds)","Alias for #since",2],["in","Time","classes\/Time.html#M007302","(seconds)","Alias for #since",2],["in_char_class?","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006749","(codepoint, classes)","Detect whether the codepoint is in a certain character class. Returns +true+ when it's in the specified",2],["in_clause_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004560","()","the maximum number of elements in an IN (x,y,z) clause ",2],["in_rails_application?","Rails::ScriptRailsLoader","classes\/Rails\/ScriptRailsLoader.html#M004285","()","",2],["in_rails_application_subdirectory?","Rails::ScriptRailsLoader","classes\/Rails\/ScriptRailsLoader.html#M004286","(path = Pathname.new(Dir.pwd))","",2],["in_time_zone","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006685","(new_zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone<\/tt>, or the specified zone. ",2],["in_time_zone","DateTime","classes\/DateTime.html#M007086","(zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone<\/tt>. Time.zone = 'Hawaii'             # => 'Hawaii' DateTime.new(2000).in_time_zone",2],["in_time_zone","Time","classes\/Time.html#M007279","(zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone<\/tt>. Time.zone = 'Hawaii'         # => 'Hawaii' Time.utc(2000).in_time_zone",2],["include?","ActiveModel::MassAssignmentSecurity::PermissionSet","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html#M007723","(key)","",2],["include?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006764","(other)","Returns +true+ if contained string contains _other_. Returns +false+ otherwise. Example: 'Caf\u00e9'.mb_chars.include?('\u00e9')",2],["include?","Test::Unit::Collector::ObjectSpace","classes\/Test\/Unit\/Collector\/ObjectSpace.html#M007480","(test)","",2],["include_fallbacks_module","I18n::Railtie","classes\/I18n\/Railtie.html#M007409","()","",2],["included","ActionController::TestCase::RaiseActionExceptions","classes\/ActionController\/TestCase\/RaiseActionExceptions.html#M005636","(base)","",2],["included","ActionController::UrlWriter","classes\/ActionController\/UrlWriter.html#M005651","(klass)","",2],["included","ActionView::Template::Handlers::Compilable","classes\/ActionView\/Template\/Handlers\/Compilable.html#M006234","(base)","",2],["included","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M004625","(base)","",2],["included","ActiveSupport::Concern","classes\/ActiveSupport\/Concern.html#M006979","(base = nil, &block)","",2],["included","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M006838","(base)","",2],["included","ActiveSupport::Testing::Isolation","classes\/ActiveSupport\/Testing\/Isolation.html#M007474","(base)","",2],["included","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M007489","(base)","",2],["included","Rails::Application::Configurable","classes\/Rails\/Application\/Configurable.html#M004356","(base)","",2],["included","Rails::Engine::Configurable","classes\/Rails\/Engine\/Configurable.html#M004065","(base)","",2],["included","Rails::Initializable","classes\/Rails\/Initializable.html#M004295","(base)","",2],["included","Rails::Railtie::Configurable","classes\/Rails\/Railtie\/Configurable.html#M003990","(base)","",2],["includes","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004830","(*args)","",2],["increment","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004926","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and adds the value passed as +by+ (default is 1). The increment",2],["increment","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006962","(name, amount = 1, options = nil)","",2],["increment","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M006951","(name, amount = 1, options = nil)","Increment an integer value in the cache. ",2],["increment","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007560","(name, amount = 1, options = nil)","Increment an integer value in the cache. Options are passed to the underlying cache implementation. All",2],["increment!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004927","(attribute, by = 1)","Wrapper around +increment+ that saves the record. This method differs from its non-bang version in that",2],["increment_counter","ActiveRecord::CounterCache","classes\/ActiveRecord\/CounterCache.html#M005295","(counter_name, id)","Increment a number field by one, usually representing a count. This is used for caching aggregate values,",2],["increment_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004767","()","",2],["index","ActionController::Middleware","classes\/ActionController\/Middleware.html#M005659","()","",2],["index","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004539","(column_name, options = {})","Adds a new index to the table. +column_name+ can be a single Symbol, or an Array of Symbols. See SchemaStatements#add_index",2],["index","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006765","(needle, offset=0)","Returns the position _needle_ in the string, counting in codepoints. Returns +nil+ if _needle_ isn't",2],["index_by","Enumerable","classes\/Enumerable.html#M007371","()","Convert an enumerable to a hash. Examples: people.index_by(&:login) => { \"nextangle\" => <Person ...>,",2],["index_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004570","(table_name, column_name, options = {})","Checks to see if an index exists on a table for a given index definition === Examples # Check an index",2],["index_exists?","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004540","(column_name, options = {})","Checks to see if an index exists. See SchemaStatements#index_exists? ",2],["index_helper","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004253","()","",2],["index_name_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004588","(table_name, index_name, default)","Verify the existence of an index with a given name. The default argument is returned if the underlying",2],["index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004556","()","the maximum length of an index name ",2],["index_name_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004736","()","",2],["indexes","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004717","(table_name, name = nil)","Returns the list of all indexes for a table. ",2],["indexes_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004558","()","the maximum number of indexes per table ",2],["inflections","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007591","()","Yields a singleton instance of Inflector::Inflections so you can specify additional inflector rules.",2],["info","Plugin","classes\/Plugin.html#M003928","()","",2],["inheritance_column","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005035","()","Defines the column name for use with single table inheritance. Use <tt>set_inheritance_column<\/tt> to",2],["inherited","AbstractController::Helpers::ClassMethods","classes\/AbstractController\/Helpers\/ClassMethods.html#M005552","(klass)","When a class is inherited, wrap its helper module in a new module. This ensures that the parent class's",2],["inherited","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods.html#M005559","(klass)","",2],["inherited","ActionController::Base","classes\/ActionController\/Base.html#M005646","(klass)","",2],["inherited","ActionController::HideActions::ClassMethods","classes\/ActionController\/HideActions\/ClassMethods.html#M005781","(klass)","",2],["inherited","ActionController::Metal","classes\/ActionController\/Metal.html#M005640","(base)","",2],["inherited","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M007752","(subclass)","Notify observers when the observed class is subclassed. ",2],["inherited","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M007714","(base)","Copy validators on inheritance. ",2],["inherited","ActiveSupport::DescendantsTracker","classes\/ActiveSupport\/DescendantsTracker.html#M007434","(base)","",2],["inherited","Rails::Application","classes\/Rails\/Application.html#M003999","(base)","",2],["inherited","Rails::Application::Configurable::ClassMethods","classes\/Rails\/Application\/Configurable\/ClassMethods.html#M004357","(base)","",2],["inherited","Rails::Engine","classes\/Rails\/Engine.html#M004364","(base)","",2],["inherited","Rails::Engine::Configurable::ClassMethods","classes\/Rails\/Engine\/Configurable\/ClassMethods.html#M004067","(base)","",2],["inherited","Rails::Plugin","classes\/Rails\/Plugin.html#M004339","(base)","",2],["inherited","Rails::Railtie","classes\/Rails\/Railtie.html#M004310","(base)","",2],["inherited","Rails::Railtie::Configurable::ClassMethods","classes\/Rails\/Railtie\/Configurable\/ClassMethods.html#M003992","(base)","",2],["init_fallbacks","I18n::Railtie","classes\/I18n\/Railtie.html#M007410","(fallbacks)","",2],["init_with","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005100","(coder)","Initialize an empty model object from +coder+.  +coder+ must contain the attributes necessary for initializing",2],["initialize!","Rails","classes\/Rails.html#M003896","()","",2],["initialize!","Rails::Application","classes\/Rails\/Application.html#M004011","()","",2],["initialize_console","Rails::Application","classes\/Rails\/Application.html#M004041","(sandbox=false)","",2],["initialize_copy","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005099","(other)","Cloned objects have no id assigned and are treated as new records. Note that this is a \"shallow\" clone",2],["initialize_copy","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004982","(other)","",2],["initialize_generators","Rails::Application","classes\/Rails\/Application.html#M004040","()","",2],["initialize_i18n","I18n::Railtie","classes\/I18n\/Railtie.html#M007408","(app)","Setup i18n configuration ",2],["initialize_schema_migrations_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004591","()","Should not be called normally, but this operation is non-destructive. The migrations module handles this",2],["initialize_tasks","Rails::Application","classes\/Rails\/Application.html#M004039","()","",2],["initialize_template_class","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M005671","(*)","For old tests ",2],["initialized=","Rails","classes\/Rails.html#M003898","(initialized)","",2],["initialized?","Rails","classes\/Rails.html#M003897","()","",2],["initializer","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004231","(filename, data=nil, &block)","Create a new initializer with the provided code (either in a block or a string). ==== Examples initializer(\"globals.rb\")",2],["initializer","Rails::Initializable::ClassMethods","classes\/Rails\/Initializable\/ClassMethods.html#M004308","(name, opts = {}, &blk)","",2],["initializers","Rails::Application","classes\/Rails\/Application.html#M004019","()","",2],["initializers","Rails::Initializable","classes\/Rails\/Initializable.html#M004304","()","",2],["initializers","Rails::Initializable::ClassMethods","classes\/Rails\/Initializable\/ClassMethods.html#M004305","()","",2],["initializers_chain","Rails::Initializable::ClassMethods","classes\/Rails\/Initializable\/ClassMethods.html#M004306","()","",2],["initializers_for","Rails::Initializable::ClassMethods","classes\/Rails\/Initializable\/ClassMethods.html#M004307","(binding)","",2],["insert","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M006000","(index, *args, &block)","",2],["insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004595","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Returns the last auto-generated ID from the affected table. ",2],["insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004699","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Executes an INSERT query and returns the new record's ID ",2],["insert","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006763","(offset, fragment)","Inserts the passed string at specified codepoint offsets. Example: 'Caf\u00e9'.mb_chars.insert(4, ' p\u00e9rifer\u00f4l').to_s",2],["insert_after","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M006002","(index, *args, &block)","",2],["insert_before","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M006001","(index, *args, &block)","Alias for #insert",2],["insert_fixture","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004607","(fixture, table_name)","Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple",2],["insert_fixtures","Fixtures","classes\/Fixtures.html#M004887","()","",2],["insert_html","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006446","(position, id, *options_for_render)","Inserts HTML at the specified +position+ relative to the DOM element identified by the given +id+. +position+",2],["insert_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004613","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Returns the last auto-generated ID from the affected table. ",2],["inspect","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M005996","()","",2],["inspect","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005962","()","",2],["inspect","ActionView::Template","classes\/ActionView\/Template.html#M006308","()","",2],["inspect","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005054","()","Returns a string like 'Post id:integer, title:string, body:text' ",2],["inspect","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005121","()","Returns the contents of the record as a nicely formatted string. ",2],["inspect","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005008","()","",2],["inspect","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006697","()","",2],["inspect","DateTime","classes\/DateTime.html#M007092","()","Alias for #readable_inspect",2],["install","Plugin","classes\/Plugin.html#M003926","(method=nil, options = {})","",2],["install","RailsEnvironment","classes\/RailsEnvironment.html#M003913","(name_uri_or_plugin)","",2],["installed?","Plugin","classes\/Plugin.html#M003925","()","",2],["instance","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M007583","()","",2],["instance","Rails::Application","classes\/Rails\/Application.html#M003998","()","",2],["instance_method_already_implemented?","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007648","(method_name)","",2],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/ClassMethods.html#M005156","(method_name)","Checks whether the method is defined in the model or any of its subclasses that also derive from Active",2],["instance_variable_names","Object","classes\/Object.html#M007360","()","",2],["instantiate_all_loaded_fixtures","Fixtures","classes\/Fixtures.html#M004882","(object, load_instances = true)","",2],["instantiate_fixtures","Fixtures","classes\/Fixtures.html#M004881","(object, table_name, fixtures, load_instances = true)","",2],["instantiate_observers","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M007747","()","Instantiate the global Active Record observers. ",2],["instantiator?","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M005186","()","",2],["instrument","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007552","()","",2],["instrument","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M007426","(name, payload = {})","",2],["instrument","ActiveSupport::Notifications::Instrumenter","classes\/ActiveSupport\/Notifications\/Instrumenter.html#M006911","(name, payload={})","Instrument the given block by measuring the time taken to execute it and publish it. Notice that events",2],["instrument=","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007551","(boolean)","Set to true if cache stores should be instrumented. Default is false. ",2],["instrument_fragment_cache","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M005581","(name, key)","",2],["instrumenter","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M007430","()","",2],["internal_methods","AbstractController::Base","classes\/AbstractController\/Base.html#M005529","()","A list of all internal methods for a controller. This finds the first abstract superclass of a controller,",2],["invalid?","ActiveModel::DeprecatedErrorMethods","classes\/ActiveModel\/DeprecatedErrorMethods.html#M007611","(attribute)","",2],["invalid?","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M007717","(context = nil)","Performs the opposite of <tt>valid?<\/tt>. Returns true if errors were added, false otherwise. ",2],["invoke","Rails::Generators","classes\/Rails\/Generators.html#M004028","(namespace, args=ARGV, config={})","Receives a namespace, arguments and the behavior to invoke the generator. It's used as the default entry",2],["ip","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005866","()","",2],["irregular","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M007587","(singular, plural)","Specifies a new irregular that applies to both pluralization and singularization at the same time. This",2],["is_a?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006729","(klass)","Say we're a Time to thwart type checking. ",2],["is_missing?","LoadError","classes\/LoadError.html#M007153","(location)","",2],["isdst","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006689","()","Alias for #dst?",2],["iso8601","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006699","(fraction_digits = 0)","Alias for #xmlschema",2],["j","ERB::Util","classes\/ERB\/Util.html#M007051","(s)","Alias for #json_escape",2],["javascript_include_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006556","(*sources)","Returns an html script tag for each of the +sources+ provided. You can pass in the filename (.js extension",2],["javascript_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006554","(source)","Computes the path to a javascript asset in the public javascripts directory. If the +source+ filename",2],["javascript_tag","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M006437","(content_or_options_with_block = nil, html_options = {}, &block)","Returns a JavaScript tag with the +content+ inside. Example: javascript_tag \"alert('All is good')\" Returns:",2],["javascripts","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004159","()","",2],["joins","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004837","(*args)","",2],["joins_per_query","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004562","()","maximum number of joins in a single query ",2],["json_escape","ERB::Util","classes\/ERB\/Util.html#M007046","(s)","A utility method for escaping HTML entities in JSON strings using \\uXXXX JavaScript escape sequences",2],["keep","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M006014","(k = nil)","Keeps either the entire current flash or a specific flash entry available for the next action: flash.keep",2],["key?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005849","(key)","",2],["key?","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007444","(key)","Checks the hash for a key matching the argument passed in: hash = HashWithIndifferentAccess.new hash[\"key\"]",2],["key_matcher","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007564","(pattern, options)","Add the namespace defined in the options to a pattern designed to match keys. Implementations that support",2],["kind","ActiveModel::Validator","classes\/ActiveModel\/Validator.html#M007621","()","Returns the kind of the validator. == Examples PresenceValidator.kind   # => :presence UniquenessValidator.kind",2],["kind","ActiveModel::Validator","classes\/ActiveModel\/Validator.html#M007623","()","Return the kind for this validator. ",2],["kind_of?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006730","(klass)","Alias for #is_a?",2],["klass","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M005994","()","",2],["klass","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004502","()","Returns the Ruby class that corresponds to the abstract data type. ",2],["klass","ActiveRecord::Reflection::MacroReflection","classes\/ActiveRecord\/Reflection\/MacroReflection.html#M005150","()","Returns the class for the macro. <tt>composed_of :balance, :class_name => 'Money'<\/tt> returns the Money",2],["known_attributes","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005346","()","Returns the list of known attributes for this resource, gathered from the provided <tt>schema<\/tt> Attributes",2],["known_attributes","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005391","()","This is a list of known attributes for this resource. Either gathered from the provided <tt>schema<\/tt>,",2],["l","AbstractController::Translation","classes\/AbstractController\/Translation.html#M005545","(*args)","Alias for #localize",2],["l","ActionView::Helpers::TranslationHelper","classes\/ActionView\/Helpers\/TranslationHelper.html#M006482","(*args)","Alias for #localize",2],["label","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006521","(method, text = nil, options = {}, &block)","",2],["label","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006498","(object_name, method, content_or_options = nil, options = nil, &block)","Returns a label tag tailored for labelling an input field for a specified attribute (identified by +method+)",2],["label_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006407","(name = nil, content_or_options = nil, options = nil, &block)","Creates a label element. Accepts a block. ==== Options * Creates standard HTML attributes for the tag.",2],["last","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004802","(*args)","A convenience wrapper for <tt>find(:last, *args)<\/tt>. You can pass in all the same arguments to this",2],["last","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005375","(*args)","A convenience wrapper for <tt>find(:last, *args)<\/tt>. You can pass in all the same arguments to this",2],["last_modified","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M005919","()","",2],["last_modified=","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M005921","(utc_time)","",2],["last_modified?","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M005920","()","",2],["layout","AbstractController::Layouts::ClassMethods","classes\/AbstractController\/Layouts\/ClassMethods.html#M005561","(layout, conditions = {})","Specify the layout to use for this class. If the specified layout is a: String:: the String is the template",2],["layout","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006133","()","",2],["lib","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004154","()","",2],["lib","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004229","(filename, data=nil, &block)","Create a new file in the lib\/ directory. Code can be specified in a block or a data string can be given.",2],["limit","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004840","(value)","",2],["limit","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006781","(limit)","Limit the byte size of the string to a number of bytes without breaking characters. Usable when the storage",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004610","(where_sql, quoted_table_name, quoted_primary_key)","",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004489","(where_sql, quoted_table_name, quoted_primary_key)","",2],["link_to","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006605","(*args, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+. See the valid options",2],["link_to_function","ActionView::Helpers::JavaScriptHelper","classes\/ActionView\/Helpers\/JavaScriptHelper.html#M006440","(name, *args, &block)","Returns a link of the given +name+ that will trigger a JavaScript +function+ using the onclick handler",2],["link_to_if","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006609","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ if +condition+ is",2],["link_to_unless","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006608","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless +condition+",2],["link_to_unless_current","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006607","(name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless the current",2],["links","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M003959","(base_url, contents)","",2],["listeners_for","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M006907","(name)","",2],["listening?","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M006908","(name)","",2],["literal","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006444","(code)","Returns an object whose <tt>to_json<\/tt> evaluates to +code+. Use this to pass a literal JavaScript expression",2],["ljust","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006773","(integer, padstr=' ')","Works just like <tt>String#ljust<\/tt>, only integer specifies characters instead of bytes. Example: \"\u00be",2],["load","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005409","(attributes)","A method to manually load attributes from a \\hash. Recursively loads collections of resources.  This",2],["load","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M006802","()","Loads the Unicode database and returns all the internal objects of UnicodeDatabase. ",2],["load_attributes_from_response","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005419","(response)","",2],["load_console","Rails::Application","classes\/Rails\/Application.html#M004014","(sandbox=false)","",2],["load_console","Rails::Railtie","classes\/Rails\/Railtie.html#M004318","()","",2],["load_deprecated_tasks","Rails::Plugin","classes\/Rails\/Plugin.html#M004342","()","",2],["load_generators","Rails::Application","classes\/Rails\/Application.html#M004013","()","",2],["load_generators","Rails::Railtie","classes\/Rails\/Railtie.html#M004320","()","",2],["load_paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004062","()","",2],["load_paths","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004270","()","",2],["load_paths=","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004063","(paths)","",2],["load_tasks","Rails::Application","classes\/Rails\/Application.html#M004012","()","",2],["load_tasks","Rails::Engine","classes\/Rails\/Engine.html#M004366","()","",2],["load_tasks","Rails::Plugin","classes\/Rails\/Plugin.html#M004341","()","",2],["load_tasks","Rails::Railtie","classes\/Rails\/Railtie.html#M004319","()","",2],["loaded?","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005964","()","",2],["loaded?","ActiveRecord::SessionStore::Session","classes\/ActiveRecord\/SessionStore\/Session.html#M005174","()","Has the session been loaded yet? ",2],["loaded?","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005191","()","",2],["local","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006879","(*args)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from given values.",2],["local?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005881","()","True if the request came from localhost, 127.0.0.1. ",2],["local_offset","DateTime","classes\/DateTime.html#M007104","()","DateTimes aren't aware of DST rules, so use a consistent non-DST offset when creating a DateTime with",2],["local_time","Time","classes\/Time.html#M007285","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:local<\/tt>. ",2],["local_to_utc","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006885","(time, dst=true)","Adjust the given time to the simultaneous time in UTC. Returns a Time.utc() instance. ",2],["locale","ActionView::LookupContext::Details","classes\/ActionView\/LookupContext\/Details.html#M006344","()","Overload locale to return a symbol instead of array. ",2],["locale=","ActionView::LookupContext::Details","classes\/ActionView\/LookupContext\/Details.html#M006345","(value)","Overload locale= to also set the I18n.locale. If the current I18n.config object responds to original_config,",2],["localize","AbstractController::Translation","classes\/AbstractController\/Translation.html#M005544","(*args)","",2],["localize","ActionView::Helpers::TranslationHelper","classes\/ActionView\/Helpers\/TranslationHelper.html#M006481","(*args)","Delegates to I18n.localize with no additional functionality. ",2],["locals","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior.html#M006300","()","",2],["localtime","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006686","()","Returns a <tt>Time.local()<\/tt> instance of the simultaneous time in your system's <tt>ENV['TZ']<\/tt>",2],["location","ActionController::Metal","classes\/ActionController\/Metal.html#M005630","()","",2],["location","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005823","()","",2],["location=","ActionController::Metal","classes\/ActionController\/Metal.html#M005631","(url)","",2],["location=","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005825","(url)","",2],["lock","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004842","(locks = true)","",2],["lock!","ActiveRecord::Locking::Pessimistic","classes\/ActiveRecord\/Locking\/Pessimistic.html#M005282","(lock = true)","Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking",2],["locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M005289","()","The version column used for optimistic locking. Defaults to +lock_version+. ",2],["locking_enabled?","ActiveRecord::Locking::Optimistic::ClassMethods","classes\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M005287","()","Is optimistic locking enabled for this table? Returns true if the +lock_optimistically+ flag is set to",2],["log","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004774","(sql, name)","",2],["log","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004155","()","",2],["log","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004238","(*args)","Define log for backwards compatibility. If just one argument is sent, invoke say, otherwise invoke say_status.",2],["log_level","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004352","()","",2],["log_path","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004330","()","",2],["log_path","Rails::Server","classes\/Rails\/Server.html#M003976","()","",2],["log_path=","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004329","(value)","",2],["log_process_action","ActiveRecord::Railties::ControllerRuntime::ClassMethods","classes\/ActiveRecord\/Railties\/ControllerRuntime\/ClassMethods.html#M005319","(payload)","",2],["log_subscriber","Rails::Railtie","classes\/Rails\/Railtie.html#M004312","(*)","",2],["log_subscribers","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M006814","()","",2],["logged","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html#M006849","(level)","",2],["logger","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M005596","()","",2],["logger","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M006231","()","TODO: Ideally, ActionView should have its own logger so it does not depend on AC.logger ",2],["logger","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005012","","Accepts a logger conforming to the interface of Log4r or the default Ruby 1.8+ Logger class, which is",2],["logger","ActiveRecord::LogSubscriber","classes\/ActiveRecord\/LogSubscriber.html#M004782","()","",2],["logger","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005343","","The logger for diagnosing and tracing Active Resource calls. ",2],["logger","ActiveResource::LogSubscriber","classes\/ActiveResource\/LogSubscriber.html#M005338","()","",2],["logger","ActiveSupport::LogSubscriber","classes\/ActiveSupport\/LogSubscriber.html#M006812","()","",2],["logger","Rails","classes\/Rails.html#M003899","()","",2],["logger=","Rails","classes\/Rails.html#M003900","(logger)","",2],["lookup","Mime::Type","classes\/Mime\/Type.html#M005832","(string)","",2],["lookup_ancestors","ActiveModel::Translation","classes\/ActiveModel\/Translation.html#M007662","()","When localizing a string, it goes through the lookup returned by this method, which is used in ActiveModel::Name#human,",2],["lookup_by_extension","Mime::Type","classes\/Mime\/Type.html#M005833","(extension)","",2],["lookup_context","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M005520","()","LookupContext is the object responsible to hold all information required to lookup templates, i.e. view",2],["lookup_store","ActiveSupport::Cache","classes\/ActiveSupport\/Cache.html#M007546","(*store_option)","Creates a new CacheStore object according to the given options. If no arguments are passed to this method,",2],["ls","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M003956","()","",2],["lstrip","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006769","()","Strips entire range of Unicode whitespace from the left of the string. ",2],["mail","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006647","(headers={}, &block)","The main method that creates the message and renders the email templates. There are two ways to call",2],["mail_to","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006610","(email_address, name = nil, html_options = {})","Creates a mailto link tag to the specified +email_address+, which is also used as the name of the link",2],["mailer_name","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006632","()","",2],["many?","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004992","()","",2],["many?","Enumerable","classes\/Enumerable.html#M007372","(&block)","Returns true if the collection has more than 1 element. Functionally equivalent to collection.size >",2],["mark_for_destruction","ActiveRecord::AutosaveAssociation","classes\/ActiveRecord\/AutosaveAssociation.html#M005325","()","Marks this record to be destroyed as part of the parents save transaction. This does _not_ actually destroy",2],["marked_for_destruction?","ActiveRecord::AutosaveAssociation","classes\/ActiveRecord\/AutosaveAssociation.html#M005326","()","Returns whether or not this record will be destroyed as part of the parents save transaction. Only useful",2],["marshal_dump","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006732","()","",2],["marshal_load","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006733","(variables)","",2],["mass_assignment_authorizer","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity.html#M007638","()","",2],["match","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M006163","(path, options=nil)","When you set up a regular route, you supply a series of symbols that Rails maps to parts of an incoming",2],["match","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006204","(*args)","",2],["match","ActionDispatch::Routing::Mapper::Shorthand","classes\/ActionDispatch\/Routing\/Mapper\/Shorthand.html#M006225","(*args)","",2],["match","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html#M007650","(method_name)","",2],["match","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M005183","(method)","",2],["match","ActiveRecord::DynamicScopeMatch","classes\/ActiveRecord\/DynamicScopeMatch.html#M004939","(method)","",2],["matches?","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007388","(_kind, _filter)","",2],["maximum","ActiveRecord::Calculations","classes\/ActiveRecord\/Calculations.html#M004863","(column_name, options = {})","Calculates the maximum value on a given column. The value is returned with the same data type of the",2],["measure","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007512","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html#M007523","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M007531","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcRuns.html#M007530","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M007533","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/GcTime.html#M007534","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M007525","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Memory.html#M007524","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M007527","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Objects.html#M007528","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::ProcessTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/ProcessTime.html#M007520","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Time","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Time.html#M007518","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/WallTime.html#M007521","()","",2],["measure_mode","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007511","()","",2],["media_type","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005862","()","",2],["member","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006198","()","To add a member route, add a member block into the resource block: resources :photos do member do get",2],["memoize","ActiveSupport::Memoizable","classes\/ActiveSupport\/Memoizable.html#M006845","(*symbols)","",2],["memoize_all","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M006840","()","",2],["memoized_ivar_for","ActiveSupport::Memoizable","classes\/ActiveSupport\/Memoizable.html#M006837","(symbol)","",2],["merge","ActiveRecord::SpawnMethods","classes\/ActiveRecord\/SpawnMethods.html#M004825","(r)","",2],["merge","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007448","(hash)","Merges the instantized and the specified hashes together, giving precedence to the values from the second",2],["message","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005816","()","",2],["method","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005852","()","Returns the original value of the environment's REQUEST_METHOD, even if it was overridden by middleware.",2],["method_added","AbstractController::Base","classes\/AbstractController\/Base.html#M005534","(name)","",2],["method_added","ActiveRecord::Callbacks::ClassMethods","classes\/ActiveRecord\/Callbacks\/ClassMethods.html#M005158","(meth)","",2],["method_for_action","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M005676","(action_name)","",2],["method_for_action","ActionController::ImplicitRender","classes\/ActionController\/ImplicitRender.html#M005741","(action_name)","",2],["method_missing","AbstractController::Collector","classes\/AbstractController\/Collector.html#M005551","(symbol, &block)","",2],["method_missing","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M006071","(selector, *args, &block)","ROUTES TODO: These assertions should really work in an integration context ",2],["method_missing","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M006125","(sym, *args, &block)","Delegate unhandled messages to the current session instance. ",2],["method_missing","ActionMailer::Base::DeprecatedHeaderProxy","classes\/ActionMailer\/Base\/DeprecatedHeaderProxy.html#M006644","(meth, *args, &block)","",2],["method_missing","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M007654","(method_id, *args, &block)","Allows access to the object attributes, which are held in the <tt>@attributes<\/tt> hash, as though they",2],["method_missing","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004526","(symbol, *args)","Handles non supported datatypes - e.g. XML ",2],["method_missing","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M004953","(method, *arguments, &block)","",2],["method_missing","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005009","(method, *args, &block)","",2],["method_missing","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html#M006848","(level, message)","",2],["method_missing","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006755","(method, *args, &block)","Forward all undefined methods to the wrapped string. ",2],["method_missing","ActiveSupport::OrderedOptions","classes\/ActiveSupport\/OrderedOptions.html#M006810","(name, *args)","",2],["method_missing","ActiveSupport::StringInquirer","classes\/ActiveSupport\/StringInquirer.html#M007462","(method_name, *arguments)","",2],["method_missing","ActiveSupport::Testing::ProxyTestResult","classes\/ActiveSupport\/Testing\/ProxyTestResult.html#M007472","(name, *args)","",2],["method_missing","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006735","(sym, *args, &block)","Send the missing method to +time+ instance, and wrap result in a new TimeWithZone with the existing +time_zone+.",2],["method_missing","Rails::Application","classes\/Rails\/Application.html#M004001","(*args, &block)","",2],["method_missing","Rails::DeprecatedConstant","classes\/Rails\/DeprecatedConstant.html#M004338","(meth, *args, &block)","",2],["method_missing","Rails::Paths::PathParent","classes\/Rails\/Paths\/PathParent.html#M004264","(id, *args)","",2],["method_missing_target","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html#M007652","()","",2],["method_name","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html#M007651","(attr_name)","",2],["method_option_to_s","ActionView::Helpers::PrototypeHelper","classes\/ActionView\/Helpers\/PrototypeHelper.html#M006473","(method)","",2],["method_symbol","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005853","()","Returns a symbol form of the #method ",2],["microseconds","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004514","(time)","'0.123456' -> 123456 '1.123456' -> 123456 ",2],["middleware","ActionController::Metal","classes\/ActionController\/Metal.html#M005642","()","",2],["middleware","ActiveSupport::Cache::Strategy::LocalCache","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M006923","()","Middleware class can be inserted as a Rack handler to be local cache for the duration of request. ",2],["middleware","Rails::Server","classes\/Rails\/Server.html#M003975","()","",2],["midnight","DateTime","classes\/DateTime.html#M007115","()","Alias for #beginning_of_day",2],["midnight","Time","classes\/Time.html#M007318","()","Alias for #beginning_of_day",2],["migrate","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M004944","(direction)","Execute this migration in the named direction ",2],["migration_template","Rails::Generators::Migration","classes\/Rails\/Generators\/Migration.html#M004092","(source, destination=nil, config={})","Creates a migration template at the given destination. The difference to the default template method",2],["migrations_path","ActiveRecord::Schema","classes\/ActiveRecord\/Schema.html#M004377","()","",2],["mime_type","ActionView::Template","classes\/ActionView\/Template.html#M006305","()","",2],["mime_type","ActiveResource::Formats::JsonFormat","classes\/ActiveResource\/Formats\/JsonFormat.html#M005474","()","",2],["mime_type","ActiveResource::Formats::XmlFormat","classes\/ActiveResource\/Formats\/XmlFormat.html#M005467","()","",2],["minimum","ActiveRecord::Calculations","classes\/ActiveRecord\/Calculations.html#M004862","(column_name, options = {})","Calculates the minimum value on a given column.  The value is returned with the same data type of the",2],["minus_with_coercion","Time","classes\/Time.html#M007338","(other)","Time#- can also be used to determine the number of seconds between two Time instances. We're layering",2],["minus_without_coercion","Time","classes\/Time.html#M007341","(other)","Alias for #-",2],["minus_without_duration","Time","classes\/Time.html#M007340","(other)","Alias for #-",2],["missing?","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse.html#M006146","()","Was the URL not found? ",2],["missing_name","NameError","classes\/NameError.html#M007345","()","Extract the name of the missing constant from the exception message. ",2],["missing_name?","NameError","classes\/NameError.html#M007346","(name)","Was this exception raised because the given name was missing? ",2],["model_name","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006517","()","",2],["model_name","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M007739","()","Returns an ActiveModel::Name object for module. It can be used to retrieve all kinds of naming-related",2],["monday","Time","classes\/Time.html#M007312","()","Alias for #beginning_of_week",2],["month","Integer","classes\/Integer.html#M007148","()","Alias for #months",2],["months","Integer","classes\/Integer.html#M007147","()","Enables the use of time calculations and declarations, like 45.minutes + 2.hours + 4.years. These methods",2],["months_ago","Time","classes\/Time.html#M007303","(months)","Returns a new Time representing the time a number of specified months ago ",2],["months_since","Time","classes\/Time.html#M007304","(months)","Returns a new Time representing the time a number of specified months in the future ",2],["mount","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M006164","(app, options = nil)","Mount a Rack-based application to be used within the application. mount SomeRackApp, :at => \"some_route\"",2],["multiple_of?","Integer","classes\/Integer.html#M007146","(number)","Check whether the integer is evenly divisible by the argument. ",2],["mute","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007550","()","Silence the logger within a block. ",2],["mysql_socket","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004202","()","",2],["name","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007386","()","",2],["name","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007510","()","",2],["name","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006676","()","",2],["name_for_action","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006224","(as, action)","",2],["named_scope","ActiveRecord::NamedScope::ClassMethods","classes\/ActiveRecord\/NamedScope\/ClassMethods.html#M004823","(*args, &block)","",2],["namespace","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006201","(path, options = {})","See ActionDispatch::Routing::Mapper::Scoping#namespace ",2],["namespace","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M006176","(path, options = {})","Scopes routes to a specific namespace. For example: namespace :admin do resources :posts end This generates",2],["namespace","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004206","(name=nil)","Convenience method to get the namespace from the class name. It's the same as Thor default except that",2],["native_database_types","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004567","()","Returns a Hash of mappings from the abstract data types to the native database types.  See TableDefinition#column",2],["navigation_behavior","ActionController::Responder","classes\/ActionController\/Responder.html#M005760","(error)","This is the common behavior for \"navigation\" requests, like :html, :iphone and so forth. ",2],["navigation_location","ActionController::Responder","classes\/ActionController\/Responder.html#M005764","()","Alias for #resource_location",2],["negotiate_mime","ActionDispatch::Http::MimeNegotiation","classes\/ActionDispatch\/Http\/MimeNegotiation.html#M005895","(order)","Receives an array of mimes and return the first user sent mime that matches the order array. ",2],["nested","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006200","()","",2],["nested_options","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006216","()","",2],["new","AbstractController::DoubleRenderError","classes\/AbstractController\/DoubleRenderError.html#M005505","(message = nil)","",2],["new","AbstractController::Layouts","classes\/AbstractController\/Layouts.html#M005565","(*)","",2],["new","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M005509","(*)","",2],["new","ActionController::Caching::Actions::ActionCachePath","classes\/ActionController\/Caching\/Actions\/ActionCachePath.html#M005579","(controller, options = {}, infer_extension = true)","If +infer_extension+ is true, the cache path extension is looked up from the request's path & format.",2],["new","ActionController::Dispatcher","classes\/ActionController\/Dispatcher.html#M005650","()","",2],["new","ActionController::Metal","classes\/ActionController\/Metal.html#M005625","(*)","",2],["new","ActionController::Middleware","classes\/ActionController\/Middleware.html#M005658","(app)","",2],["new","ActionController::Middleware","classes\/ActionController\/Middleware.html#M005655","(app)","",2],["new","ActionController::Middleware::ActionMiddleware","classes\/ActionController\/Middleware\/ActionMiddleware.html#M005653","(controller, app)","",2],["new","ActionController::Responder","classes\/ActionController\/Responder.html#M005755","(controller, resources, options={})","",2],["new","ActionController::UrlRewriter","classes\/ActionController\/UrlRewriter.html#M005652","(*)","",2],["new","ActionDispatch::BestStandardsSupport","classes\/ActionDispatch\/BestStandardsSupport.html#M006024","(app, type = true)","",2],["new","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M005991","(app, prepare_each_request = false)","",2],["new","ActionDispatch::Cookies","classes\/ActionDispatch\/Cookies.html#M005986","(app)","",2],["new","ActionDispatch::Flash","classes\/ActionDispatch\/Flash.html#M006022","(app)","",2],["new","ActionDispatch::Head","classes\/ActionDispatch\/Head.html#M005983","(app)","",2],["new","ActionDispatch::Http::Cache::Response","classes\/ActionDispatch\/Http\/Cache\/Response.html#M005918","(*)","",2],["new","ActionDispatch::Http::Headers","classes\/ActionDispatch\/Http\/Headers.html#M005788","(*args)","",2],["new","ActionDispatch::Http::ParameterFilter","classes\/ActionDispatch\/Http\/ParameterFilter.html#M005798","(filters)","",2],["new","ActionDispatch::Http::UploadedFile","classes\/ActionDispatch\/Http\/UploadedFile.html#M005791","(hash)","",2],["new","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M006112","(app)","Create and initialize a new Session instance. ",2],["new","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M005999","(*args, &block)","",2],["new","ActionDispatch::MiddlewareStack::Middleware","classes\/ActionDispatch\/MiddlewareStack\/Middleware.html#M005993","(klass_or_name, *args, &block)","",2],["new","ActionDispatch::ParamsParser","classes\/ActionDispatch\/ParamsParser.html#M006043","(app, parsers = {})","",2],["new","ActionDispatch::RemoteIp","classes\/ActionDispatch\/RemoteIp.html#M005936","(app, check_ip_spoofing = true, trusted_proxies = nil)","",2],["new","ActionDispatch::RemoteIp::RemoteIpGetter","classes\/ActionDispatch\/RemoteIp\/RemoteIpGetter.html#M005933","(env, check_ip_spoofing, trusted_proxies)","",2],["new","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005848","(env)","",2],["new","ActionDispatch::Rescue","classes\/ActionDispatch\/Rescue.html#M006040","(app, rescuers = {}, &block)","",2],["new","ActionDispatch::Response::Setup","classes\/ActionDispatch\/Response\/Setup.html#M005810","(status = 200, header = {}, body = [])","",2],["new","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006199","()","",2],["new","ActionDispatch::Session::AbstractStore","classes\/ActionDispatch\/Session\/AbstractStore.html#M005969","(app, options = {})","",2],["new","ActionDispatch::Session::AbstractStore::OptionsHash","classes\/ActionDispatch\/Session\/AbstractStore\/OptionsHash.html#M005950","(by, env, default_options)","",2],["new","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005954","(by, env)","",2],["new","ActionDispatch::Session::CookieStore","classes\/ActionDispatch\/Session\/CookieStore.html#M005938","(app, options = {})","",2],["new","ActionDispatch::Session::MemCacheStore","classes\/ActionDispatch\/Session\/MemCacheStore.html#M005946","(app, options = {})","",2],["new","ActionDispatch::ShowExceptions","classes\/ActionDispatch\/ShowExceptions.html#M006026","(app, consider_all_requests_local = false)","",2],["new","ActionDispatch::Static","classes\/ActionDispatch\/Static.html#M005929","(app, root)","",2],["new","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006048","(env = {})","",2],["new","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006049","(env = {})","",2],["new","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006639","(method_name=nil, *args)","Instantiate a new mailer object. If +method_name+ is not +nil+, the mailer will be initialized according",2],["new","ActionMailer::Base::DeprecatedHeaderProxy","classes\/ActionMailer\/Base\/DeprecatedHeaderProxy.html#M006641","(message)","",2],["new","ActionView::FileSystemResolver","classes\/ActionView\/FileSystemResolver.html#M006268","(path)","",2],["new","ActionView::FixtureResolver","classes\/ActionView\/FixtureResolver.html#M006625","(hash = {})","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomBuilder.html#M006398","(xml)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M006401","(xml, view, feed_options = {})","",2],["new","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006519","(object_name, object, template, options, proc)","",2],["new","ActionView::Helpers::NumberHelper::InvalidNumberError","classes\/ActionView\/Helpers\/NumberHelper\/InvalidNumberError.html#M006487","(number)","",2],["new","ActionView::OutputBuffer","classes\/ActionView\/OutputBuffer.html#M006240","(*)","",2],["new","ActionView::Partials::PartialRenderer","classes\/ActionView\/Partials\/PartialRenderer.html#M006274","(view_context, options, block)","",2],["new","ActionView::Resolver","classes\/ActionView\/Resolver.html#M006256","()","",2],["new","ActionView::Template","classes\/ActionView\/Template.html#M006303","(source, identifier, handler, details)","",2],["new","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M006295","(*)","",2],["new","ActionView::TestCase::TestController","classes\/ActionView\/TestCase\/TestController.html#M006290","()","",2],["new","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes\/ActiveModel\/AttributeMethods\/ClassMethods\/AttributeMethodMatcher.html#M007649","(options = {})","",2],["new","ActiveModel::BlockValidator","classes\/ActiveModel\/BlockValidator.html#M007629","(options, &block)","",2],["new","ActiveModel::EachValidator","classes\/ActiveModel\/EachValidator.html#M007625","(options)","Returns a new validator instance. All options will be available via the +options+ reader, however the",2],["new","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007764","(base)","Pass in the instance of the object that is using the errors object. class Person def initialize @errors",2],["new","ActiveModel::Name","classes\/ActiveModel\/Name.html#M007737","(klass)","",2],["new","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M007757","()","Start observing the declared classes and their subclasses. ",2],["new","ActiveModel::Validations::AcceptanceValidator","classes\/ActiveModel\/Validations\/AcceptanceValidator.html#M007705","(options)","",2],["new","ActiveModel::Validations::LengthValidator","classes\/ActiveModel\/Validations\/LengthValidator.html#M007686","(options)","",2],["new","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M007665","(options)","",2],["new","ActiveModel::Validator","classes\/ActiveModel\/Validator.html#M007622","(options)","Accepts options that will be made available through the +options+ reader. ",2],["new","ActiveRecord::AttributeAssignmentError","classes\/ActiveRecord\/AttributeAssignmentError.html#M005321","(message, exception, attribute)","",2],["new","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005098","(attributes = nil)","New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes",2],["new","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004498","(name, default, sql_type = nil, null = true)","Instantiates a new column in the table. +name+ is the column's name, such as <tt>supplier_id<\/tt> in",2],["new","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M004651","(pools = {})","",2],["new","ActiveRecord::ConnectionAdapters::ConnectionManagement","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionManagement.html#M004661","(app)","",2],["new","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004635","(spec)","Creates a new ConnectionPool object. +spec+ is a ConnectionSpecification object which describes database",2],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004381","(connection, logger, connection_options, config)","",2],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004677","(connection, logger, connection_parameters, config)","Initializes and connects a PostgreSQL adapter. ",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004410","(connection, logger, config)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter\/Version.html#M004408","(version_string)","",2],["new","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004536","(table_name, base)","",2],["new","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004525","(base)","",2],["new","ActiveRecord::DynamicFinderMatch","classes\/ActiveRecord\/DynamicFinderMatch.html#M005184","(finder, instantiator, bang, attribute_names)","",2],["new","ActiveRecord::DynamicScopeMatch","classes\/ActiveRecord\/DynamicScopeMatch.html#M004940","(scope, attribute_names)","",2],["new","ActiveRecord::LogSubscriber","classes\/ActiveRecord\/LogSubscriber.html#M004779","()","",2],["new","ActiveRecord::MultiparameterAssignmentErrors","classes\/ActiveRecord\/MultiparameterAssignmentErrors.html#M005322","(errors)","",2],["new","ActiveRecord::Observer","classes\/ActiveRecord\/Observer.html#M005297","()","",2],["new","ActiveRecord::PredicateBuilder","classes\/ActiveRecord\/PredicateBuilder.html#M004858","(engine)","",2],["new","ActiveRecord::QueryCache","classes\/ActiveRecord\/QueryCache.html#M005303","(app)","",2],["new","ActiveRecord::RecordInvalid","classes\/ActiveRecord\/RecordInvalid.html#M005207","(record)","",2],["new","ActiveRecord::Reflection::MacroReflection","classes\/ActiveRecord\/Reflection\/MacroReflection.html#M005149","(macro, name, options, active_record)","",2],["new","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004981","(*args, &block)","",2],["new","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004980","(klass, table)","",2],["new","ActiveRecord::SessionStore::Session","classes\/ActiveRecord\/SessionStore\/Session.html#M005172","(attributes = nil)","",2],["new","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005189","(attributes)","Look for normal and marshaled data, self.find_by_session_id's way of telling us to postpone unmarshaling",2],["new","ActiveRecord::Validations::UniquenessValidator","classes\/ActiveRecord\/Validations\/UniquenessValidator.html#M005201","(options)","",2],["new","ActiveRecord::WrappedDatabaseException","classes\/ActiveRecord\/WrappedDatabaseException.html#M005320","(message, original_exception)","",2],["new","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005392","(attributes = {})","Constructor method for \\new resources; the optional +attributes+ parameter takes a \\hash of attributes",2],["new","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005437","(site, format = ActiveResource::Formats::XmlFormat)","The +site+ parameter is required and will set the +site+ attribute to the URI for the remote resource",2],["new","ActiveResource::Request","classes\/ActiveResource\/Request.html#M005495","(method, path, body = nil, headers = {})","",2],["new","ActiveResource::Response","classes\/ActiveResource\/Response.html#M005499","(body, message = 200, headers = {})","",2],["new","ActiveResource::SSLError","classes\/ActiveResource\/SSLError.html#M005341","(message)","",2],["new","ActiveResource::TimeoutError","classes\/ActiveResource\/TimeoutError.html#M005339","(message)","",2],["new","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M006828","()","",2],["new","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006858","(log, level = DEBUG)","",2],["new","ActiveSupport::Cache::CompressedMemCacheStore","classes\/ActiveSupport\/Cache\/CompressedMemCacheStore.html#M006914","(*args)","",2],["new","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007574","(value, options = {})","Create a new cache entry for the specified value. Options supported are +:compress+, +:compress_threshold+,",2],["new","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006959","(cache_path, options = nil)","",2],["new","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M006935","(*addresses)","Creates a new MemCacheStore object, with the given memcached server addresses. Each address is either",2],["new","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M006946","(options = nil)","",2],["new","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007548","(options = nil)","Create a new cache. The options will be passed to any write method calls except for :namespace which",2],["new","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M006916","()","",2],["new","ActiveSupport::Cache::SynchronizedMemoryStore","classes\/ActiveSupport\/Cache\/SynchronizedMemoryStore.html#M006974","(*args)","",2],["new","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007383","(chain, filter, kind, options, klass)","",2],["new","ActiveSupport::Callbacks::CallbackChain","classes\/ActiveSupport\/Callbacks\/CallbackChain.html#M007398","(name, config)","",2],["new","ActiveSupport::Dependencies::Reference","classes\/ActiveSupport\/Dependencies\/Reference.html#M007378","(name)","",2],["new","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M007374","()","@watching is a stack of lists of constants being watched. For instance, if parent.rb is autoloaded, the",2],["new","ActiveSupport::FileUpdateChecker","classes\/ActiveSupport\/FileUpdateChecker.html#M006853","(paths, calculate=false, &block)","",2],["new","ActiveSupport::Gzip::Stream","classes\/ActiveSupport\/Gzip\/Stream.html#M007006","(*)","",2],["new","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007438","(constructor = {})","",2],["new","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M007584","()","",2],["new","ActiveSupport::InheritableOptions","classes\/ActiveSupport\/InheritableOptions.html#M006811","(parent)","",2],["new","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M007000","(options = nil)","",2],["new","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes\/ActiveSupport\/LogSubscriber\/TestHelper\/MockLogger.html#M006847","(level = DEBUG)","",2],["new","ActiveSupport::MessageEncryptor","classes\/ActiveSupport\/MessageEncryptor.html#M006740","(secret, cipher = 'aes-256-cbc')","",2],["new","ActiveSupport::MessageVerifier","classes\/ActiveSupport\/MessageVerifier.html#M006867","(secret, digest = 'SHA1')","",2],["new","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006753","(string)","Creates a new Chars instance by wrapping _string_. ",2],["new","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes\/ActiveSupport\/Multibyte\/Unicode\/UnicodeDatabase.html#M006801","()","",2],["new","ActiveSupport::Notifications::Event","classes\/ActiveSupport\/Notifications\/Event.html#M006913","(name, start, ending, transaction_id, payload)","",2],["new","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M006903","()","",2],["new","ActiveSupport::Notifications::Instrumenter","classes\/ActiveSupport\/Notifications\/Instrumenter.html#M006910","(notifier)","",2],["new","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007509","()","",2],["new","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/CpuTime.html#M007522","(*args)","",2],["new","ActiveSupport::Testing::Performance::Performer","classes\/ActiveSupport\/Testing\/Performance\/Performer.html#M007495","(harness, metric)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M007503","(*args)","",2],["new","ActiveSupport::Testing::ProxyTestResult","classes\/ActiveSupport\/Testing\/ProxyTestResult.html#M007469","()","",2],["new","ActiveSupport::Testing::RemoteError","classes\/ActiveSupport\/Testing\/RemoteError.html#M007468","(exception)","",2],["new","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006677","(utc_time, time_zone, local_time = nil, period = nil)","",2],["new","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006873","(name, utc_offset = nil, tzinfo = nil)","Create a new TimeZone object with the given name and offset. The offset is the number of seconds that",2],["new","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006889","(name)","Return a TimeZone instance with the given name, or +nil+ if no such TimeZone instance exists. (This exists",2],["new","Commands::Info","classes\/Commands\/Info.html#M003952","(base_command)","",2],["new","Commands::Install","classes\/Commands\/Install.html#M003945","(base_command)","",2],["new","Commands::Plugin","classes\/Commands\/Plugin.html#M003939","()","",2],["new","Commands::Remove","classes\/Commands\/Remove.html#M003949","(base_command)","",2],["new","Fixtures","classes\/Fixtures.html#M004885","(connection, table_name, class_name, fixture_path, file_filter = DEFAULT_FILTER_RE)","",2],["new","Mime::Type","classes\/Mime\/Type.html#M005837","(string, symbol = nil, synonyms = [])","",2],["new","Plugin","classes\/Plugin.html#M003920","(uri, name = nil)","",2],["new","Rails::ActionMethods","classes\/Rails\/ActionMethods.html#M004142","(generator)","",2],["new","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004345","(*)","",2],["new","Rails::Application::Railties","classes\/Rails\/Application\/Railties.html#M004359","(config)","TODO Write tests for this behavior extracted from Application ",2],["new","Rails::BacktraceCleaner","classes\/Rails\/BacktraceCleaner.html#M004042","()","",2],["new","Rails::Console","classes\/Rails\/Console.html#M003968","(app)","",2],["new","Rails::DBConsole","classes\/Rails\/DBConsole.html#M003964","(app)","",2],["new","Rails::DeprecatedConstant","classes\/Rails\/DeprecatedConstant.html#M004337","(old, new)","",2],["new","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004055","(root=nil)","",2],["new","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M004079","(name)","",2],["new","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004164","(*args)","",2],["new","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M004102","(name, type)","",2],["new","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M004296","(name, context, options, &block)","",2],["new","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M004276","(root, *paths)","",2],["new","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004265","(path)","",2],["new","Rails::Plugin","classes\/Rails\/Plugin.html#M004343","(root)","",2],["new","Rails::Rack::Debugger","classes\/Rails\/Rack\/Debugger.html#M004051","(app)","",2],["new","Rails::Rack::LogTailer","classes\/Rails\/Rack\/LogTailer.html#M004044","(app, log = nil)","",2],["new","Rails::Rack::Logger","classes\/Rails\/Rack\/Logger.html#M004047","(app)","",2],["new","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003978","()","",2],["new","Rails::Server","classes\/Rails\/Server.html#M003971","(*)","",2],["new","RailsEnvironment","classes\/RailsEnvironment.html#M003909","(dir)","",2],["new","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M003955","(urls_to_fetch, level = 1, cwd = \".\")","",2],["new","SourceAnnotationExtractor","classes\/SourceAnnotationExtractor.html#M004290","(tag)","",2],["new?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005394","()","Returns +true+ if this object hasn't yet been saved, otherwise, returns +false+. ==== Examples not_new",2],["new_constants","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M007375","()","return a list of new constants found since the last call to watch_modules ",2],["new_date","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004515","(year, mon, mday)","",2],["new_element_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005422","()","",2],["new_element_path","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005369","(prefix_options = {})","Gets the new element path for REST resources. ==== Options * +prefix_options+ - A hash to add a prefix",2],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007440","(hash)","",2],["new_record?","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004915","()","Returns true if this object hasn't been saved yet -- that is, a record for the object doesn't exist in",2],["new_record?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005395","()","Alias for #new?",2],["new_session","Object","classes\/Object.html#M004003","()","create a new session. If a block is given, the new session will be yielded to the block before being",2],["new_time","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004516","(year, mon, mday, hour, min, sec, microsec)","",2],["next_id","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007387","()","",2],["next_month","Time","classes\/Time.html#M007310","()","Short-hand for months_since(1) ",2],["next_week","Time","classes\/Time.html#M007316","(day = :monday)","Returns a new Time representing the start of the given day in next week (default is Monday). ",2],["next_year","Time","classes\/Time.html#M007308","()","Short-hand for years_since(1) ",2],["no_color!","Rails::Generators","classes\/Rails\/Generators.html#M004025","()","Remove the color from output. ",2],["nonce","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005729","(secret_key, time = Time.now)","Uses an MD5 digest based on time to generate a value to be used only once. A server-specified data string",2],["normalize","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006787","(form = nil)","Returns the KC normalization of the string by default. NFKC is considered the best normalization form",2],["normalize","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006799","(string, form=nil)","Returns the KC normalization of the string by default. NFKC is considered the best normalization form",2],["normalize_name","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper.html#M006160","(name)","",2],["normalize_options!","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007385","(options)","",2],["normalize_path","ActionDispatch::Routing::Mapper","classes\/ActionDispatch\/Routing\/Mapper.html#M006159","(path)","Invokes Rack::Mount::Utils.normalize path and ensure that (:locale) becomes (\/:locale) instead of \/(:locale).",2],["not_modified?","ActionDispatch::Http::Cache::Request","classes\/ActionDispatch\/Http\/Cache\/Request.html#M005915","(modified_at)","",2],["notice","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M006019","()","Convenience accessor for flash[:notice] ",2],["notice=","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M006020","(message)","Convenience accessor for flash[:notice]= ",2],["notifier","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M007429","()","",2],["notify_observers","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M007749","(*arg)","",2],["now","ActionDispatch::Flash::FlashHash","classes\/ActionDispatch\/Flash\/FlashHash.html#M006013","()","Sets a flash that will not be available to the next action, only to the current. flash.now[:message]",2],["now","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006882","()","Returns an ActiveSupport::TimeWithZone instance representing the current time in the time zone represented",2],["number?","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004500","()","Returns +true+ if the column is either of type integer, float or decimal. ",2],["number_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006511","(object_name, method, options = {})","Returns an input tag of type \"number\". ==== Options * Accepts same options as number_field_tag ",2],["number_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006422","(name, value = nil, options = {})","Creates a number field. ==== Options * <tt>:min<\/tt> - The minimum acceptable value. * <tt>:max<\/tt>",2],["number_to_currency","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M006489","(number, options = {})","Formats a +number+ into a currency string (e.g., $13.65). You can customize the format in the +options+",2],["number_to_human","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M006494","(number, options = {})","Pretty prints (formats and approximates) a number in a way it is more readable by humans (eg.: 1200000000",2],["number_to_human_size","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M006493","(number, options = {})","Formats the bytes in +number+ into a more understandable representation (e.g., giving it 1500 yields",2],["number_to_percentage","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M006490","(number, options = {})","Formats a +number+ as a percentage string (e.g., 65%). You can customize the format in the +options+",2],["number_to_phone","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M006488","(number, options = {})","Formats a +number+ into a US phone number (e.g., (555) 123-9876). You can customize the format in the",2],["number_with_delimiter","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M006491","(number, options = {})","Formats a +number+ with grouped thousands using +delimiter+ (e.g., 12,324). You can customize the format",2],["number_with_precision","ActionView::Helpers::NumberHelper","classes\/ActionView\/Helpers\/NumberHelper.html#M006492","(number, options = {})","Formats a +number+ with the specified level of <tt>:precision<\/tt> (e.g., 112.32 has a precision of 2",2],["object","ActionView::Helpers::ActiveModelInstanceTag","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html#M006430","()","",2],["observe","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M007754","(*models)","Attaches the observer to the supplied model classes. ",2],["observed_class","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M007756","()","The class observed by default is inferred from the observer's class name: assert_equal Person, PersonObserver.observed_class",2],["observed_classes","ActiveModel::Observer","classes\/ActiveModel\/Observer.html#M007755","()","Returns an array of Classes to observe. You can override this instead of using the +observe+ helper.",2],["observed_descendants","ActiveRecord::Observer","classes\/ActiveRecord\/Observer.html#M005298","()","",2],["observers","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M007746","()","Gets the current observers. ",2],["observers=","ActiveModel::Observing::ClassMethods","classes\/ActiveModel\/Observing\/ClassMethods.html#M007745","(*values)","== Active Model Observers Activation Activates the observers assigned. Examples: # Calls PersonObserver.instance",2],["odd?","ActiveRecord::LogSubscriber","classes\/ActiveRecord\/LogSubscriber.html#M004781","()","",2],["offset","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004841","(value)","",2],["on","ActiveModel::DeprecatedErrorMethods","classes\/ActiveModel\/DeprecatedErrorMethods.html#M007608","(attribute)","",2],["on_base","ActiveModel::DeprecatedErrorMethods","classes\/ActiveModel\/DeprecatedErrorMethods.html#M007609","()","",2],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M006674","(string)","Alias for #on_characters",2],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M006673","(string)","",2],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M006670","()","",2],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M006672","(name)","",2],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M006669","()","",2],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_LibXMLSAX\/HashBuilder.html#M006671","(name, attrs = {})","",2],["only","ActiveRecord::SpawnMethods","classes\/ActiveRecord\/SpawnMethods.html#M004828","(*onlies)","",2],["opaque","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005731","(secret_key)","Opaque based on random generation - but changing each request? ",2],["open","ActionDispatch::Http::UploadedFile","classes\/ActionDispatch\/Http\/UploadedFile.html#M005792","()","",2],["open_session","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M006122","(app = nil)","Open a new session instance. If a block is given, the new session is yielded to the block before being",2],["open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004766","()","",2],["opt_parser","Rails::Server","classes\/Rails\/Server.html#M003972","()","",2],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006356","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","Returns a string of <tt><option><\/tt> tags, like <tt>options_from_collection_for_select<\/tt>, but groups",2],["options","Commands::Info","classes\/Commands\/Info.html#M003953","()","",2],["options","Commands::Install","classes\/Commands\/Install.html#M003946","()","",2],["options","Commands::Plugin","classes\/Commands\/Plugin.html#M003941","()","",2],["options","Commands::Remove","classes\/Commands\/Remove.html#M003950","()","",2],["options_for","ActiveSupport::JSON::Encoding::Encoder","classes\/ActiveSupport\/JSON\/Encoding\/Encoder.html#M007003","(value)","",2],["options_for_ajax","ActionView::Helpers::PrototypeHelper","classes\/ActionView\/Helpers\/PrototypeHelper.html#M006472","(options)","",2],["options_for_javascript","ActionView::Helpers::PrototypeHelper","classes\/ActionView\/Helpers\/PrototypeHelper.html#M006471","(options)","",2],["options_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006354","(container, selected = nil)","Accepts a container (hash, array, enumerable, your type) and returns a string of option tags. Given a",2],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006355","(collection, value_method, text_method, selected = nil)","Returns a string of option tags that have been compiled by iterating over the +collection+ and assigning",2],["options_include_default?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004624","(options)","",2],["ord","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006771","()","Returns the codepoint of the first character in the string. Example: '\u3053\u3093\u306b\u3061\u306f'.mb_chars.ord # => 12371",2],["order","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004835","(*args)","",2],["ordinalize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007607","(number)","Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st,",2],["ordinalize","Integer","classes\/Integer.html#M007145","()","Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such",2],["orig_delete","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M005481","(custom_method_name, options = {})","Alias for #delete",2],["orm_class","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M004100","()","Loads the ORM::Generators::ActiveModel class. This class is responsable to tell scaffold entities how",2],["orm_instance","Rails::Generators::ResourceHelpers","classes\/Rails\/Generators\/ResourceHelpers.html#M004101","(name=singular_table_name)","Initialize ORM::Generators::ActiveModel to access instance methods. ",2],["output_filename","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M007502","()","",2],["output_filename","ActiveSupport::Testing::Performance::Performer","classes\/ActiveSupport\/Testing\/Performance\/Performer.html#M007497","()","",2],["output_filename","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M007507","(printer_class)","",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004598","()","Checks whether there is currently no transaction active. This is done by querying the database driver,",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004708","()","",2],["parameter_filter","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M005806","()","",2],["parameter_filter_for","ActionDispatch::Http::FilterParameters","classes\/ActionDispatch\/Http\/FilterParameters.html#M005808","(filters)","",2],["parameterize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007599","(string, sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["parameters","ActionDispatch::Http::Parameters","classes\/ActionDispatch\/Http\/Parameters.html#M005882","()","Returns both GET and POST \\parameters in a single hash. ",2],["params","ActionController::Metal","classes\/ActionController\/Metal.html#M005626","()","",2],["params","ActionDispatch::Http::Parameters","classes\/ActionDispatch\/Http\/Parameters.html#M005883","()","Alias for #parameters",2],["params=","ActionController::Metal","classes\/ActionController\/Metal.html#M005627","(val)","",2],["parent_of?","ActiveSupport::Notifications::Event","classes\/ActiveSupport\/Notifications\/Event.html#M006915","(event)","",2],["parse","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006881","(str, now=now)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from parsed string.",2],["parse","ActiveSupport::XmlMini_LibXMLSAX","classes\/ActiveSupport\/XmlMini_LibXMLSAX.html#M006675","(data)","",2],["parse","ActiveSupport::XmlMini_NokogiriSAX","classes\/ActiveSupport\/XmlMini_NokogiriSAX.html#M006667","(data)","",2],["parse","Mime::Type","classes\/Mime\/Type.html#M005836","(accept_header)","",2],["parse!","Commands::Info","classes\/Commands\/Info.html#M003954","(args)","",2],["parse!","Commands::Install","classes\/Commands\/Install.html#M003948","(args)","",2],["parse!","Commands::Plugin","classes\/Commands\/Plugin.html#M003944","(args=ARGV)","",2],["parse!","Commands::Plugin","classes\/Commands\/Plugin.html#M003942","(args=ARGV)","",2],["parse!","Commands::Remove","classes\/Commands\/Remove.html#M003951","(args)","",2],["parse!","Rails::Server::Options","classes\/Rails\/Server\/Options.html#M003970","(args)","",2],["parse_raw_value_as_a_number","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M007668","(raw_value)","",2],["parse_raw_value_as_an_integer","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M007669","(raw_value)","",2],["password","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005353","()","Gets the \\password for REST HTTP authentication. ",2],["password=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005354","(password)","Sets the \\password for REST HTTP authentication. ",2],["password=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005441","(password)","Sets the password for remote service. ",2],["password_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006500","(object_name, method, options = {})","Returns an input tag of the \"password\" type tailored for accessing a specified attribute (identified",2],["password_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006410","(name = \"password\", value = nil, options = {})","Creates a password field, a masked text field that will hide the users input behind a mask character.",2],["past?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006711","()","",2],["past?","DateTime","classes\/DateTime.html#M007106","()","Tells whether the DateTime object's datetime lies in the past ",2],["past?","Time","classes\/Time.html#M007294","()","Tells whether the Time object's time lies in the past ",2],["path","ActionDispatch::Http::UploadedFile","classes\/ActionDispatch\/Http\/UploadedFile.html#M005793","()","",2],["path","LoadError","classes\/LoadError.html#M007152","()","",2],["path=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006055","(path)","",2],["path_for_action","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006221","(action, path)","",2],["path_parameters","ActionDispatch::Http::Parameters","classes\/ActionDispatch\/Http\/Parameters.html#M005886","()","Returns a hash with the \\parameters used to form the \\path of the request. Returned hash keys are strings:",2],["path_to_audio","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006570","(source)","Alias for #audio_path",2],["path_to_image","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006566","(source)","Alias for #image_path",2],["path_to_javascript","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006555","(source)","Alias for #javascript_path",2],["path_to_stylesheet","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006562","(source)","Alias for #stylesheet_path",2],["path_to_video","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006568","(source)","Alias for #video_path",2],["paths","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004347","()","",2],["paths","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004056","()","",2],["paths","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M004282","()","",2],["pending","ActiveSupport::Testing::Pending","classes\/ActiveSupport\/Testing\/Pending.html#M007467","(description = \"\", &block)","",2],["perform_validations","ActiveRecord::Validations","classes\/ActiveRecord\/Validations.html#M005212","(options={})","",2],["performed?","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M005677","()","",2],["period","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006684","()","Returns the underlying TZInfo::TimezonePeriod. ",2],["period_for_local","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006887","(time, dst=true)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["period_for_utc","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006886","(time)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["persisted?","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004917","()","Returns if the record is persisted, i.e. it's not a new record and it was not destroyed. ",2],["persisted?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005396","()","Returns +true+ if this object has been saved, otherwise returns +false+. ==== Examples persisted = Computer.create(:brand",2],["phone_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006508","(object_name, method, options = {})","Alias for #telephone_field",2],["phone_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006419","(name, value = nil, options = {})","Alias for #telephone_field_tag",2],["plugin","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004222","(name, options)","Install a plugin. You must provide either a Subversion url or Git url. For a Git-hosted plugin, you can",2],["plugin_dir","Rails::Generators::PluginGenerator","classes\/Rails\/Generators\/PluginGenerator.html#M004140","(join=nil)","",2],["plugins","Rails::Application::Railties","classes\/Rails\/Application\/Railties.html#M004363","()","",2],["plural","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M007740","(record_or_class)","Returns the plural class name of a record or class. Examples: ActiveModel::Naming.plural(post)      ",2],["plural","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M007585","(rule, replacement)","Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular",2],["plural_file_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004256","()","",2],["plural_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004249","()","",2],["plural_table_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004255","()","",2],["pluralize","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006384","(count, singular, plural = nil)","Attempts to pluralize the +singular+ word unless +count+ is 1. If +plural+ is supplied, it will use that",2],["pluralize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007592","(word)","Returns the plural form of the word in the string. Examples: \"post\".pluralize             # => \"posts\"",2],["pluralize_table_names","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005019","","Indicates whether table names should be the pluralized versions of the corresponding class names. If",2],["pluralize_table_names?","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004261","()","",2],["polymorphic_path","ActionDispatch::Routing::PolymorphicRoutes","classes\/ActionDispatch\/Routing\/PolymorphicRoutes.html#M006152","(record_or_hash_or_array, options = {})","Returns the path component of a URL for the given record. It uses <tt>polymorphic_url<\/tt> with <tt>:routing_type",2],["polymorphic_url","ActionDispatch::Routing::PolymorphicRoutes","classes\/ActionDispatch\/Routing\/PolymorphicRoutes.html#M006151","(record_or_hash_or_array, options = {})","Constructs a call to a named RESTful route for the given record and returns the resulting URL string.",2],["pop_d","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M003958","()","",2],["pop_modules","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M007377","(modules)","",2],["port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005903","()","Returns the port number of this request as an integer. ",2],["port=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006053","(number)","",2],["port_string","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005906","()","Returns a \\port suffix like \":8080\" if the \\port number of this request is not the default HTTP \\port",2],["post","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005613","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating POST HTTP method and set\/volley the response ",2],["post","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006098","(path, parameters = nil, headers = nil)","Performs a POST request with the given parameters. See get() for more details. ",2],["post","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M006168","(*args, &block)","Define a route that only recognizes HTTP POST. For supported arguments, see +match+. Example: post 'bacon',",2],["post","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005448","(path, body = '', headers = {})","Executes a POST request. Used to create new resources. ",2],["post","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M005478","(custom_method_name, options = {}, body = '')","",2],["post","ActiveResource::CustomMethods::InstanceMethods","classes\/ActiveResource\/CustomMethods\/InstanceMethods.html#M005484","(method_name, options = {}, body = nil)","",2],["post?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005855","()","Is this a POST request? Equivalent to <tt>request.request_method == :post<\/tt>. ",2],["post_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006107","(path, parameters = nil, headers = nil)","Performs a POST request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["postgresql_version","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004739","()","Returns the version of the connected PostgreSQL version. ",2],["precisionless_round","Float","classes\/Float.html#M007179","(precision = nil)","Alias for #round",2],["prefetch_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004755","(table_name = nil)","Should primary key values be selected from their corresponding sequence before the insert statement?",2],["prefix","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005365","(options={})","Gets the \\prefix for a resource's nested URL (e.g., <tt>prefix\/collectionname\/1.xml<\/tt>) This method",2],["prefix=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005367","(value = '\/')","Sets the \\prefix for a resource's nested URL (e.g., <tt>prefix\/collectionname\/1.xml<\/tt>). Default value",2],["prefix_name_for_action","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006223","(as, action)","",2],["prefix_source","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005366","()","An attribute reader for the source string for the resource path \\prefix.  This method is regenerated",2],["preload","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004832","(*args)","",2],["preload_associations","ActiveRecord::AssociationPreload::ClassMethods","classes\/ActiveRecord\/AssociationPreload\/ClassMethods.html#M005249","(records, associations, preload_options={})","Eager loads the named associations for the given Active Record record(s). In this description, 'association",2],["prepare!","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005827","()","Alias for #to_a",2],["prepare_controller_class","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M005611","(new_class)","",2],["prepare_destination","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004128","()","",2],["prepend_view_path","AbstractController::ViewPaths","classes\/AbstractController\/ViewPaths.html#M005523","(path)","",2],["prepend_view_path","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M005525","(path)","Prepend a path to the list of view paths for this controller. ==== Parameters * <tt>path<\/tt> - If a",2],["presence","Object","classes\/Object.html#M007358","()","Returns object if it's #present? otherwise returns nil. object.presence is equivalent to object.present?",2],["present?","Object","classes\/Object.html#M007351","()","An object is present if it's not blank. ",2],["prev_month","Time","classes\/Time.html#M007309","()","Short-hand for months_ago(1) ",2],["prev_year","Time","classes\/Time.html#M007307","()","Short-hand for years_ago(1) ",2],["previous_changes","ActiveModel::Dirty","classes\/ActiveModel\/Dirty.html#M007730","()","Map of attributes that were changed when the model was saved. person.name # => 'bob' person.name = 'robert'",2],["primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M005217","()","Defines the primary key field -- can be overridden in subclasses. Overwriting will negate any effect",2],["primary_key","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004487","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004728","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004528","(name)","Appends a primary key definition to the table definition. Can be called multiple times, but this is probably",2],["primary_key","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005002","()","",2],["primary_key=","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M005222","(value = nil, &block)","Alias for #set_primary_key",2],["primary_key_prefix_type","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005016","","Accessor for the prefix type that will be prepended to every primary key column name. The options are",2],["prime_cache","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M006842","(*syms)","",2],["process","AbstractController::Base","classes\/AbstractController\/Base.html#M005535","(action, *args)","Calls the action going through the entire action dispatch stack. The actual method that is called is",2],["process","ActionController::Middleware","classes\/ActionController\/Middleware.html#M005657","(action)","",2],["process","ActionController::TemplateAssertions","classes\/ActionController\/TemplateAssertions.html#M005604","(*args)","",2],["process","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005619","(action, parameters = nil, session = nil, flash = nil, http_method = 'GET')","",2],["process_action","AbstractController::Callbacks","classes\/AbstractController\/Callbacks.html#M005546","(method_name, *args)","Override AbstractController::Base's process_action to run the process_action callbacks around the normal",2],["process_action","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M005773","(action, *args)","",2],["process_action","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M005592","(event)","",2],["process_view_paths","ActionView::Base","classes\/ActionView\/Base.html#M006327","(value)","",2],["process_with_new_base_test","ActionController::Testing","classes\/ActionController\/Testing.html#M005678","(request, response)","TODO: Clean this up ",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007514","()","",2],["properties","Rails::InfoController","classes\/Rails\/InfoController.html#M004053","()","",2],["property","Rails::Info","classes\/Rails\/Info.html#M004372","(name, value = nil)","",2],["protect_against_forgery?","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M005698","()","",2],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","classes\/ActionController\/RequestForgeryProtection\/ClassMethods.html#M005692","(options = {})","Turn on request forgery protection. Bear in mind that only non-GET, HTML\/JavaScript requests are checked.",2],["protected_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","classes\/ActiveModel\/MassAssignmentSecurity\/ClassMethods.html#M007633","()","",2],["protocol","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005898","()","Returns 'https:\/\/' if this is an SSL request and 'http:\/\/' otherwise. ",2],["proxy","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005349","()","Gets the \\proxy variable if a proxy is required ",2],["proxy=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005350","(proxy)","Sets the URI of the http proxy to the value in the +proxy+ argument. ",2],["proxy=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005439","(proxy)","Set the proxy for remote service. ",2],["prune","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M006949","(target_size, max_time = nil)","To ensure entries fit within the specified memory prune the cache by removing the least recently accessed",2],["pruning?","ActiveSupport::Cache::MemoryStore","classes\/ActiveSupport\/Cache\/MemoryStore.html#M006950","()","Returns true if the cache is currently being pruned. ",2],["public_directory","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004156","()","",2],["public_path","Rails","classes\/Rails.html#M003907","()","",2],["public_path=","Rails","classes\/Rails.html#M003908","(path)","",2],["publish","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M006906","(name, *args)","",2],["push","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M004278","(path)","",2],["push","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004271","(*)","",2],["push_d","RecursiveHTTPFetcher","classes\/RecursiveHTTPFetcher.html#M003957","(dir)","",2],["put","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005614","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating PUT HTTP method and set\/volley the response ",2],["put","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006099","(path, parameters = nil, headers = nil)","Performs a PUT request with the given parameters. See get() for more details. ",2],["put","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M006169","(*args, &block)","Define a route that only recognizes HTTP PUT. For supported arguments, see +match+. Example: put 'bacon',",2],["put","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005447","(path, body = '', headers = {})","Executes a PUT request (see HTTP protocol documentation if unfamiliar). Used to update resources. ",2],["put","ActiveResource::CustomMethods","classes\/ActiveResource\/CustomMethods.html#M005479","(custom_method_name, options = {}, body = '')","",2],["put","ActiveResource::CustomMethods::InstanceMethods","classes\/ActiveResource\/CustomMethods\/InstanceMethods.html#M005485","(method_name, options = {}, body = '')","",2],["put?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005856","()","Is this a PUT request? Equivalent to <tt>request.request_method == :put<\/tt>. ",2],["put_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006108","(path, parameters = nil, headers = nil)","Performs a PUT request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["query","ActionView::NullResolver","classes\/ActionView\/NullResolver.html#M006627","(path, exts, formats)","",2],["query_attribute","ActiveRecord::AttributeMethods::Query","classes\/ActiveRecord\/AttributeMethods\/Query.html#M005243","(attr_name)","",2],["query_parameters","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005877","()","Alias for #GET",2],["quote","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004387","(value, column = nil)","QUOTING ================================================== ",2],["quote","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M004477","(value, column = nil)","Quotes the column value to help prevent {SQL injection attacks}[http:\/\/en.wikipedia.org\/wiki\/SQL_injection].",2],["quote_column_name","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M004479","(column_name)","Quotes the column name. Defaults to no quoting. ",2],["quote_string","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M004478","(s)","Quotes a string, escaping any ' (single quote) and \\ (backslash) characters. ",2],["quote_table_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004757","(name)","Override to return the quoted table name. Defaults to column quoting. ",2],["quote_table_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004693","(name)","Checks the following cases: - table_name - \"table.name\" - schema_name.table_name - schema_name.\"table.name\"",2],["quote_table_name","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M004480","(table_name)","Quotes the table name. Defaults to column name quoting. ",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004490","(column_names, options = {})","",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004623","(column_names, options = {})","Overridden by the mysql adapter for supporting index lengths ",2],["quoted_date","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M004483","(value)","",2],["quoted_false","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004392","()","",2],["quoted_false","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M004482","()","",2],["quoted_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M005290","()","Quote the column name used for optimistic locking. ",2],["quoted_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M005218","()","Returns a quoted version of the primary key name, used to construct SQL statements. ",2],["quoted_table_name","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005032","()","Returns a quoted version of the table name, used to construct SQL statements. ",2],["quoted_true","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004391","()","",2],["quoted_true","ActiveRecord::ConnectionAdapters::Quoting","classes\/ActiveRecord\/ConnectionAdapters\/Quoting.html#M004481","()","",2],["radio_button","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006523","(method, tag_value, options = {})","",2],["radio_button","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006505","(object_name, method, tag_value, options = {})","Returns a radio button tag for accessing a specified attribute (identified by +method+) on an object",2],["radio_button_checked?","ActionView::Helpers::InstanceTagMethods::ClassMethods","classes\/ActionView\/Helpers\/InstanceTagMethods\/ClassMethods.html#M006516","(value, checked_value)","",2],["radio_button_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006413","(name, value, checked = false, options = {})","Creates a radio button; use groups of radio buttons named the same to allow users to select from a group",2],["railtie_name","Rails::Railtie","classes\/Rails\/Railtie.html#M004311","(*)","",2],["railties","Rails::Application","classes\/Rails\/Application.html#M004008","()","",2],["railties","Rails::Application::Railties","classes\/Rails\/Application\/Railties.html#M004361","()","",2],["rake","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004233","(command, options={})","Runs the supplied rake task ==== Example rake(\"db:migrate\") rake(\"db:migrate\", :env => \"production\")",2],["rake_tasks","Rails::Railtie","classes\/Rails\/Railtie.html#M004313","(&blk)","",2],["rakefile","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004144","()","",2],["rakefile","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004230","(filename, data=nil, &block)","Create a new Rakefile with the provided code (either in a block or a string). ==== Examples rakefile(\"bootstrap.rake\")",2],["random_bytes","ActiveSupport::SecureRandom","classes\/ActiveSupport\/SecureRandom.html#M006980","(n=nil)","SecureRandom.random_bytes generates a random binary string. The argument n specifies the length of the",2],["random_number","ActiveSupport::SecureRandom","classes\/ActiveSupport\/SecureRandom.html#M006983","(n=0)","SecureRandom.random_number generates a random number. If an positive integer is given as n, SecureRandom.random_number",2],["range_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006512","(object_name, method, options = {})","Returns an input tag of type \"range\". ==== Options * Accepts same options as range_field_tag ",2],["range_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006423","(name, value = nil, options = {})","Creates a range form element. ==== Options * Accepts the same options as number_field_tag. ",2],["raw","ActionView::Helpers::RawOutputHelper","classes\/ActionView\/Helpers\/RawOutputHelper.html#M006477","(stringish)","This method outputs without escaping a string. Since escaping tags is now default, this can be used when",2],["raw_connection","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004765","()","Provides access to the underlying database driver for this adapter. For example, this method returns",2],["raw_host_with_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005900","()","Returns the \\host for this request, such as \"example.com\". ",2],["raw_post","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005869","()","Read the request \\body. This is useful for web services that need to work with raw requests directly.",2],["raw_value","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007575","()","Get the raw value. This value may be serialized and compressed. ",2],["read","ActionDispatch::Http::UploadedFile","classes\/ActionDispatch\/Http\/UploadedFile.html#M005794","(*args)","",2],["read","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007554","(name, options = nil)","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["read_attribute","ActiveRecord::AttributeMethods::Read","classes\/ActiveRecord\/AttributeMethods\/Read.html#M005229","(attr_name)","Returns the value of the attribute identified by <tt>attr_name<\/tt> after it has been typecast (for example,",2],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","classes\/ActiveRecord\/AttributeMethods\/BeforeTypeCast.html#M005213","(attr_name)","",2],["read_entry","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006965","(key, options)","",2],["read_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M006919","(key, options)","",2],["read_fragment","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M005573","(key, options = nil)","Reads a cached fragment from the location signified by <tt>key<\/tt> (see <tt>expire_fragment<\/tt> for",2],["read_multi","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M006936","(*names)","Reads multiple values from the cache using a single call to the servers for all keys. Options can be",2],["read_multi","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007555","(*names)","Read multiple values at once from the cache. Options can be passed in the last argument. Some cache implementation",2],["readable_inspect","DateTime","classes\/DateTime.html#M007091","()","Overrides the default inspect method with a human readable one, e.g., \"Mon, 21 Feb 2005 14:30:00 +0000\"",2],["readme","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004145","()","",2],["readme","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004237","(path)","Reads the given file at the source root and prints it in the console. === Example readme \"README\" ",2],["readonly","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004843","(value = true)","",2],["readonly!","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005120","()","Marks this record as read only. ",2],["readonly?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005119","()","Returns +true+ if the record is read only. Records loaded through joins with piggy-back attributes will",2],["readonly_attributes","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005028","()","Returns an array of all the attributes that have been specified as readonly. ",2],["receive","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006634","(raw_mail)","Receives a raw email, parses it into an email object, decodes it, instantiates a new mailer, and passes",2],["recompile!","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007390","(_options, _per_key)","",2],["reconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004760","()","Disconnects from the database if already connected, and establishes a new connection with the database.",2],["reconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004395","()","",2],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004679","()","Close then reopen the connection. ",2],["record","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M007499","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M007506","()","",2],["record_key_for_dom_id","ActionController::RecordIdentifier","classes\/ActionController\/RecordIdentifier.html#M005662","(record)","Returns a string representation of the key attribute(s) that is suitable for use in an HTML DOM id. This",2],["recycle!","ActionController::TestResponse","classes\/ActionController\/TestResponse.html#M005606","()","",2],["redirect","ActionDispatch::Routing::Mapper::HttpHelpers","classes\/ActionDispatch\/Routing\/Mapper\/HttpHelpers.html#M006171","(*args, &block)","Redirect any path to another path: match \"\/stories\" => redirect(\"\/posts\") ",2],["redirect?","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse.html#M006147","()","Were we redirected? ",2],["redirect_to","ActionController::Flash","classes\/ActionController\/Flash.html#M005744","(options = {}, response_status_and_flash = {})","",2],["redirect_to","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M005777","(*args)","",2],["redirect_to","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M005594","(event)","",2],["redirect_to","ActionController::Redirecting","classes\/ActionController\/Redirecting.html#M005690","(options = {}, response_status = {})","Redirects the browser to the target specified in +options+. This parameter can take one of three forms:",2],["redirect_to","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006454","(location)","Redirects the browser to the given +location+ using JavaScript, in the same form as +url_for+. Examples:",2],["redirect_to_url","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M006095","()","",2],["redirect_url","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005824","()","Alias for #location",2],["redirect_url_match?","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006135","(pattern)","",2],["redirected_to","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006134","()","",2],["ref","Mime::Type","classes\/Mime\/Type.html#M005841","()","",2],["reference?","Rails::Generators::GeneratedAttribute","classes\/Rails\/Generators\/GeneratedAttribute.html#M004106","()","",2],["references","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004548","(*args)","Adds a reference. Optionally adds a +type+ column. <tt>references<\/tt> and <tt>belongs_to<\/tt> are acceptable.",2],["references","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004532","(*args)","",2],["reflect_on_aggregation","ActiveRecord::Reflection::ClassMethods","classes\/ActiveRecord\/Reflection\/ClassMethods.html#M005145","(aggregation)","Returns the AggregateReflection object for the named +aggregation+ (use the symbol). Account.reflect_on_aggregation(:balance)",2],["reflect_on_all_aggregations","ActiveRecord::Reflection::ClassMethods","classes\/ActiveRecord\/Reflection\/ClassMethods.html#M005144","()","Returns an array of AggregateReflection objects for all the aggregations in the class. ",2],["reflect_on_all_associations","ActiveRecord::Reflection::ClassMethods","classes\/ActiveRecord\/Reflection\/ClassMethods.html#M005146","(macro = nil)","Returns an array of AssociationReflection objects for all the associations in the class. If you only",2],["reflect_on_all_autosave_associations","ActiveRecord::Reflection::ClassMethods","classes\/ActiveRecord\/Reflection\/ClassMethods.html#M005148","()","Returns an array of AssociationReflection objects for all associations which have <tt>:autosave<\/tt>",2],["reflect_on_association","ActiveRecord::Reflection::ClassMethods","classes\/ActiveRecord\/Reflection\/ClassMethods.html#M005147","(association)","Returns the AssociationReflection object for the +association+ (use the symbol). Account.reflect_on_association(:owner)",2],["reflections","ActiveRecord::Reflection::ClassMethods","classes\/ActiveRecord\/Reflection\/ClassMethods.html#M005143","()","Returns a hash containing all AssociationReflection objects for the current class. Example: Invoice.reflections",2],["register","Mime::Type","classes\/Mime\/Type.html#M005835","(string, symbol, mime_type_synonyms = [], extension_synonyms = [], skip_lookup = false)","",2],["register_alias","Mime::Type","classes\/Mime\/Type.html#M005834","(string, symbol, extension_synonyms = [])","Registers an alias that's not used on mime type lookup, but can be referenced directly. Especially useful",2],["register_interceptor","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006631","(interceptor)","Register an Inteceptor which will be called before mail is sent. Either a class or a string can be passed",2],["register_interceptors","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006629","(*interceptors)","Register one or more Interceptors which will be called before mail is sent. ",2],["register_javascript_expansion","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006557","(expansions)","Register one or more javascript files to be included when <tt>symbol<\/tt> is passed to <tt>javascript_include_tag<\/tt>.",2],["register_javascript_include_default","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006560","(*args)","",2],["register_observer","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006630","(observer)","Register an Observer which will be notified when mail is delivered. Either a class or a string can be",2],["register_observers","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006628","(*observers)","Register one or more Observers which will be notified when mail is delivered. ",2],["register_stylesheet_expansion","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006558","(expansions)","Register one or more stylesheet files to be included when <tt>symbol<\/tt> is passed to <tt>stylesheet_link_tag<\/tt>.",2],["regular_writer","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007442","(key, value)","Alias for #[]=",2],["release_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004637","(with_id = current_connection_id)","Signal that the thread is finished with the current connection. #release_connection releases the connection-thread",2],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004772","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004407","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004711","()","",2],["reload","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006455","()","Reloads the browser's current +location+ using JavaScript Examples: # Generates: window.location.reload();",2],["reload","ActiveRecord::AutosaveAssociation","classes\/ActiveRecord\/AutosaveAssociation.html#M005324","(options = nil)","Reloads the attributes of the object as usual and clears <tt>marked_for_destruction<\/tt> flag. ",2],["reload","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004932","(options = nil)","Reloads the attributes of this object from the database. The optional options argument is passed to find",2],["reload","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005000","()","",2],["reload","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005408","()","A method to \\reload the attributes of this object from the remote web service. ==== Examples my_branch",2],["reload!","Object","classes\/Object.html#M004004","(print=true)","reloads the environment ",2],["reload_routes!","Rails::Application","classes\/Rails\/Application.html#M004010","()","",2],["reloader","I18n::Railtie","classes\/I18n\/Railtie.html#M007407","()","",2],["remember_transaction_record_state","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004795","()","Save the new record state and id of a record so it can be restored later if a transaction fails. ",2],["remote_addr=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006059","(addr)","",2],["remote_addrs","ActionDispatch::RemoteIp::RemoteIpGetter","classes\/ActionDispatch\/RemoteIp\/RemoteIpGetter.html#M005934","()","",2],["remote_function","ActionView::Helpers::PrototypeHelper","classes\/ActionView\/Helpers\/PrototypeHelper.html#M006441","(options)","Returns the JavaScript needed for a remote function. See the link_to_remote documentation at http:\/\/github.com\/rails\/prototype_legacy_helper",2],["remote_ip","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005867","()","Determines originating IP address.  REMOTE_ADDR is the standard but will fail if the user is behind a",2],["remove","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006449","(*ids)","Removes the DOM elements with the given +ids+ from the page. Example: # Remove a few people # Generates:",2],["remove","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004544","(*column_names)","Removes the column(s) from the table definition. ===== Examples t.remove(:qualification) t.remove(:qualification,",2],["remove_belongs_to","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004551","(*args)","Alias for #remove_references",2],["remove_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004578","(table_name, *column_names)","Removes the column(s) from the table definition. ===== Examples remove_column(:suppliers, :qualification)",2],["remove_columns","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004579","(table_name, *column_names)","Alias for #remove_column",2],["remove_connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M004667","(klass = self)","",2],["remove_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M004659","(klass)","Remove the connection for this class. This will close the active connection and the defined connection",2],["remove_filters!","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M006833","()","",2],["remove_hook_for","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004208","(*names)","Remove a previously added hook. ==== Examples remove_hook_for :orm ",2],["remove_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004584","(table_name, options = {})","Remove the given index from the table. Remove the suppliers_name_index in the suppliers table. remove_index",2],["remove_index","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004545","(options = {})","Removes the given index from the table. ===== Examples ====== Remove the suppliers_name_index in the",2],["remove_multiparameter_id","ActiveModel::MassAssignmentSecurity::PermissionSet","classes\/ActiveModel\/MassAssignmentSecurity\/PermissionSet.html#M007724","(key)","",2],["remove_references","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004550","(*args)","Removes a reference. Optionally removes a +type+ column. <tt>remove_references<\/tt> and <tt>remove_belongs_to<\/tt>",2],["remove_silencers!","ActiveSupport::BacktraceCleaner","classes\/ActiveSupport\/BacktraceCleaner.html#M006832","()","Will remove all silencers, but leave in the filters. This is useful if your context of debugging suddenly",2],["remove_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004622","(table_name)","Removes the timestamp columns (created_at and updated_at) from the table definition. ===== Examples remove_timestamps(:suppliers)",2],["remove_timestamps","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004546","()","Removes the timestamp columns (created_at and updated_at) from the table. ===== Example t.remove_timestamps",2],["rename","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004547","(column_name, new_column_name)","Renames a column. ===== Example t.rename(:description, :name) ",2],["rename_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004734","(table_name, column_name, new_column_name)","Renames a column in a table. ",2],["rename_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004582","(table_name, column_name, new_column_name)","Renames a column. ===== Example rename_column(:suppliers, :description, :name) ",2],["rename_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004586","(table_name, old_name, new_name)","Rename an index. Rename the index_people_on_last_name index to index_users_on_last_name rename_index",2],["rename_key","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M006899","(key, options = {})","",2],["rename_table","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004470","(table_name, new_name)","",2],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004729","(name, new_name)","Renames a table. ",2],["rename_table","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004437","(name, new_name)","",2],["rename_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004575","(table_name, new_name)","Renames a table. ===== Example rename_table('octopuses', 'octopi') ",2],["render","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M005511","(*args, &block)","Normalize arguments, options and then delegates render_to_body and sticks the result in self.response_body.",2],["render","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M005774","(*args)","",2],["render","ActionView::Partials::PartialRenderer","classes\/ActionView\/Partials\/PartialRenderer.html#M006276","()","",2],["render","ActionView::Rendering","classes\/ActionView\/Rendering.html#M006271","(options = {}, locals = {}, &block)","Returns the result of a render that's dictated by the options hash. The primary options are: * <tt>:partial<\/tt>",2],["render","ActionView::Template","classes\/ActionView\/Template.html#M006304","(view, locals, &block)","",2],["render","ActionView::Template::Handler","classes\/ActionView\/Template\/Handler.html#M006238","(template, local_assigns)","",2],["render","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior.html#M006299","(options = {}, local_assigns = {}, &block)","",2],["render_collection","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M006230","(event)","Alias for #render_template",2],["render_collection","ActionView::Partials::PartialRenderer","classes\/ActionView\/Partials\/PartialRenderer.html#M006277","()","",2],["render_partial","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M006229","(event)","Alias for #render_template",2],["render_partial","ActionView::Partials::PartialRenderer","classes\/ActionView\/Partials\/PartialRenderer.html#M006280","(object = @object)","",2],["render_template","ActionView::LogSubscriber","classes\/ActionView\/LogSubscriber.html#M006228","(event)","",2],["render_to_body","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M005513","(options = {})","Raw rendering of a template to a Rack-compatible body. :api: plugin ",2],["render_to_body","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M005674","(options)","",2],["render_to_body","ActionController::Renderers","classes\/ActionController\/Renderers.html#M005667","(options)","",2],["render_to_string","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M005512","(*args, &block)","Raw rendering of a template to a string. Just convert the results of render_to_body into a String. :api:",2],["rendered","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006136","()","Returns the template of the file which was used to render this response (or nil) ",2],["reorder","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004836","(*args)","",2],["reorder_characters","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006752","(codepoints)","Re-order codepoints so the string becomes canonical. ",2],["replace","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006448","(id, *options_for_render)","Replaces the \"outer HTML\" (i.e., the entire element, not just its contents) of the DOM element with the",2],["replace","ActiveRecord::Associations::HasOneThroughAssociation","classes\/ActiveRecord\/Associations\/HasOneThroughAssociation.html#M005279","(new_value)","",2],["replace_html","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006447","(id, *options_for_render)","Replaces the inner HTML of the DOM element with the given +id+. +options_for_render+ may be either a",2],["report","ActiveSupport::Testing::Performance::Performer","classes\/ActiveSupport\/Testing\/Performance\/Performer.html#M007496","()","",2],["report","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M007505","()","",2],["request","ActiveResource::LogSubscriber","classes\/ActiveResource\/LogSubscriber.html#M005337","(event)","",2],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Basic\/ControllerMethods.html#M005709","(realm = \"Application\")","",2],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Digest\/ControllerMethods.html#M005717","(realm = \"Application\", message = nil)","Render output including the HTTP Digest authentication header ",2],["request_http_token_authentication","ActionController::HttpAuthentication::Token::ControllerMethods","classes\/ActionController\/HttpAuthentication\/Token\/ControllerMethods.html#M005734","(realm = \"Application\")","",2],["request_method","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005850","()","Returns the HTTP \\method that the application should see. In the case where the \\method was overridden",2],["request_method=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006051","(method)","",2],["request_method_symbol","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005851","()","Returns a symbol form of the #request_method ",2],["request_parameters","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005879","()","Alias for #POST",2],["request_uri","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005911","()","Returns the request URI, accounting for server idiosyncrasies. WEBrick includes the full \\URL. IIS leaves",2],["request_uri=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006054","(uri)","",2],["request_via_redirect","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006105","(http_method, path, parameters = nil, headers = nil)","Performs a request using the specified method, following any subsequent redirect. Note that the redirects",2],["requests","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005436","()","",2],["requests","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M005489","()","Returns an array of all request objects that have been sent to the mock.  You can use this to check if",2],["require_fixture_classes","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M004905","(table_names = nil)","",2],["require_library_or_gem","Kernel","classes\/Kernel.html#M007132","(library_name)","Require a library with fallback to RubyGems.  Warnings during library loading are silenced to increase",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004763","()","Returns true if its required to reload the connection between requests for development mode. This is",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004415","()","",2],["rescue_action","ActionController::Compatibility","classes\/ActionController\/Compatibility.html#M005670","(env)","",2],["rescue_action_in_public!","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005621","()","Cause the action to be rescued according to the regular rules for rescue_action when the visitor is not",2],["rescue_action_without_handler","ActionController::TestCase::RaiseActionExceptions","classes\/ActionController\/TestCase\/RaiseActionExceptions.html#M005637","(e)","",2],["rescue_from","ActionDispatch::Rescue","classes\/ActionDispatch\/Rescue.html#M006042","(exception, rescuer)","",2],["rescue_from","ActiveSupport::Rescuable::ClassMethods","classes\/ActiveSupport\/Rescuable\/ClassMethods.html#M007459","(*klasses, &block)","Rescue exceptions raised in controller actions. <tt>rescue_from<\/tt> receives a series of exception classes",2],["rescue_with_handler","ActionController::Rescue","classes\/ActionController\/Rescue.html#M005786","(exception)","",2],["rescue_with_handler","ActiveSupport::Rescuable","classes\/ActiveSupport\/Rescuable.html#M007460","(exception)","Tries to rescue the exception by looking up and calling a registered handler. ",2],["reset","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005001","()","",2],["reset!","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M006121","()","Reset the current session. This is useful for testing multiple sessions in a single test case. ",2],["reset!","ActionDispatch::Integration::Session","classes\/ActionDispatch\/Integration\/Session.html#M006114","()","Resets the instance. This can be used to reset the state information in an existing session instance,",2],["reset!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004762","()","Reset the state of this connection, directing the DBMS to clear transactions and other connection-related",2],["reset!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004397","()","",2],["reset!","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M005492","()","Deletes all logged requests and responses. ",2],["reset_cache","Fixtures","classes\/Fixtures.html#M004876","(connection = nil)","",2],["reset_callbacks","ActiveSupport::Callbacks::ClassMethods","classes\/ActiveSupport\/Callbacks\/ClassMethods.html#M007405","(symbol)","Reset callbacks for a given type. ",2],["reset_column_information","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005047","()","Resets all the cached information about columns, which will cause them to be reloaded on the next request.",2],["reset_counters","ActiveRecord::CounterCache","classes\/ActiveRecord\/CounterCache.html#M005293","(id, *counters)","Resets one or more counter caches to their correct value using an SQL count query.  This is useful when",2],["reset_cycle","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006390","(name = \"default\")","Resets a cycle so that it starts from the first element the next time it is called. Pass in +name+ to",2],["reset_javascript_include_default","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006559","()","",2],["reset_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M005291","()","Reset the column used for optimistic locking back to the +lock_version+ default. ",2],["reset_runtime","ActiveRecord::LogSubscriber","classes\/ActiveRecord\/LogSubscriber.html#M004778","()","",2],["reset_sequence!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004606","(table, column, sequence = nil)","Set the sequence to the max value of the table's column. ",2],["reset_session","ActionController::RackDelegation","classes\/ActionController\/RackDelegation.html#M005702","()","",2],["reset_session","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005873","()","TODO This should be broken apart into AD::Request::Session and probably be included by the session middleware.",2],["resource","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006195","(*resources, &block)","Sometimes, you have a resource that clients always look up without referencing an ID. A common example,",2],["resource_location","ActionController::Responder","classes\/ActionController\/Responder.html#M005763","()","Returns the resource location by retrieving it from the options or returning the resources array. ",2],["resource_method_scope?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006212","()","",2],["resource_scope","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006215","(resource)","",2],["resource_scope?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006211","()","",2],["resourceful?","ActionController::Responder","classes\/ActionController\/Responder.html#M005762","()","Checks whether the resource responds to the current format or not. ",2],["resources","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006196","(*resources, &block)","In Rails, a resourceful route provides a mapping between HTTP verbs and URLs and controller actions.",2],["resources_path_names","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006194","(options)","",2],["respond","ActionController::Responder","classes\/ActionController\/Responder.html#M005757","()","Main entry point for responder responsible to dispatch to the proper format. ",2],["respond_to","ActionController::MimeResponds::ClassMethods","classes\/ActionController\/MimeResponds\/ClassMethods.html#M005742","(*mimes)","Defines mime types that are rendered by default when invoking <tt>respond_with<\/tt>. Examples: respond_to",2],["respond_to","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M005491","(*args)","Accepts a block which declares a set of requests and responses for the HttpMock to respond to in the",2],["respond_to?","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005818","(method)","",2],["respond_to?","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M007655","(method, include_private_methods = false)","",2],["respond_to?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005060","(method_id, include_private = false)","",2],["respond_to?","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004986","(method, include_private = false)","",2],["respond_to?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005412","(method, include_priv = false)","A method to determine if an object responds to a message (e.g., a method call). In Active Resource, a",2],["respond_to?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006756","(method, include_private=false)","Returns +true+ if _obj_ responds to the given method. Private methods are included in the search only",2],["respond_to?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006734","(sym, include_priv = false)","Ensure proxy class responds to all methods that underlying time instance responds to. ",2],["respond_to?","Rails::Application","classes\/Rails\/Application.html#M004000","(*args)","",2],["respond_to?","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003988","(name)","",2],["respond_to_without_attributes?","ActiveModel::AttributeMethods","classes\/ActiveModel\/AttributeMethods.html#M007656","(method, include_private_methods = false)","Alias for #respond_to?",2],["respond_to_without_attributes?","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005413","(method, include_priv = false)","Alias for #respond_to?",2],["response_body=","ActionController::Metal","classes\/ActionController\/Metal.html#M005635","(val)","",2],["response_body=","ActionController::RackDelegation","classes\/ActionController\/RackDelegation.html#M005701","(body)","",2],["response_code","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005814","()","The response code of the request ",2],["response_from_page_or_rjs","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M006089","()","+assert_select+ and +css_select+ call this to obtain the content in the HTML page, or from all the RJS",2],["responses","ActiveResource::HttpMock","classes\/ActiveResource\/HttpMock.html#M005490","()","Returns the list of requests and their mocked responses. Look up a response for a request using responses.assoc(request).",2],["restore_transaction_record_state","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004797","(force = false)","Restore the new record state and id of a record that was previously saved by a call to save_record_state.",2],["retrieve_connection","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M004665","()","",2],["retrieve_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionHandler.html#M004660","(klass)","",2],["returning","Object","classes\/Object.html#M007363","(value)","Returns +value+ after yielding +value+ to the block. This simplifies the process of constructing an object,",2],["reverse","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006778","()","Reverses all characters in the string. Example: 'Caf\u00e9'.mb_chars.reverse.to_s # => '\u00e9faC' ",2],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007449","(other_hash)","Performs the opposite of merge, with the keys and values from the first hash taking precedence over the",2],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007450","(other_hash)","",2],["reverse_order","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004847","()","",2],["rewind","ActionDispatch::Http::UploadedFile","classes\/ActionDispatch\/Http\/UploadedFile.html#M005795","()","",2],["rfc2822","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006704","()","",2],["rfc822","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006705","()","Alias for #rfc2822",2],["rindex","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006766","(needle, offset=nil)","Returns the position _needle_ in the string, counting in codepoints, searching backward from _offset_",2],["rjust","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006772","(integer, padstr=' ')","Works just like <tt>String#rjust<\/tt>, only integer specifies characters instead of bytes. Example: \"\u00be",2],["rollback_active_record_state!","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004790","()","Reset id and @new_record if the transaction rolls back. ",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004603","()","Rolls back the transaction (and turns on auto-committing). Must be done if the transaction block raises",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004707","()","Aborts a transaction. ",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004771","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004406","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004710","()","",2],["rollback_transaction_records","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004616","(rollback)","Send a rollback message to all records after they have been rolled back. If rollback is false, only rollback",2],["root","ActionDispatch::Routing::Mapper::Base","classes\/ActionDispatch\/Routing\/Mapper\/Base.html#M006162","(options = {})","You can specify what Rails should route \"\/\" to with the root method: root :to => 'pages#main' For options,",2],["root","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006205","(options={})","",2],["root","Rails","classes\/Rails.html#M003902","()","",2],["root=","Rails::Engine::Configuration","classes\/Rails\/Engine\/Configuration.html#M004058","(value)","",2],["round","Float","classes\/Float.html#M007178","(precision = nil)","Rounds the float with the specified precision. x = 1.337 x.round    # => 1 x.round(1) # => 1.3 x.round(2)",2],["route","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004236","(routing_code)","Make an entry in Rails routing file config\/routes.rb === Example route \"root :to => 'welcome'\" ",2],["route_url","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004257","()","",2],["routes","Rails::Application","classes\/Rails\/Application.html#M004007","()","",2],["routes_configuration_file","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004326","()","",2],["routes_configuration_file=","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004325","(value)","",2],["routes_reloader","Rails::Application","classes\/Rails\/Application.html#M004009","()","",2],["rstrip","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006768","()","Strips entire range of Unicode whitespace from the right of the string. ",2],["run","ActiveSupport::Testing::Isolation::MiniTest","classes\/ActiveSupport\/Testing\/Isolation\/MiniTest.html#M007477","(runner)","",2],["run","ActiveSupport::Testing::Isolation::TestUnit","classes\/ActiveSupport\/Testing\/Isolation\/TestUnit.html#M007476","(result)","",2],["run","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M007491","(result)","",2],["run","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M007498","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes\/ActiveSupport\/Testing\/Performance\/Profiler.html#M007504","()","",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ForClassicTestUnit.html#M007487","(result)","This redefinition is unfortunate but test\/unit shows us no alternative. Doubly unfortunate: hax to support",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForMiniTest","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ForMiniTest.html#M007486","(runner)","",2],["run","Rails::Initializable::Initializer","classes\/Rails\/Initializable\/Initializer.html#M004299","(*args)","",2],["run","Rails::Initializer","classes\/Rails\/Initializer.html#M004335","(&block)","",2],["run_callbacks","ActiveSupport::Callbacks","classes\/ActiveSupport\/Callbacks.html#M007381","(kind, *args, &block)","",2],["run_generator","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004123","(args=self.default_arguments, config={})","Runs the generator configured for this class. The first argument is an array like command line arguments:",2],["run_in_isolation","ActiveSupport::Testing::Isolation::Forking","classes\/ActiveSupport\/Testing\/Isolation\/Forking.html#M007478","(&blk)","",2],["run_in_isolation","ActiveSupport::Testing::Isolation::Subprocess","classes\/ActiveSupport\/Testing\/Isolation\/Subprocess.html#M007479","(&blk)","Crazy H4X to get this working in windows \/ jruby with no forking. ",2],["run_in_transaction?","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures.html#M004909","()","",2],["run_initializers","Rails::Initializable","classes\/Rails\/Initializable.html#M004303","(*args)","",2],["run_profile","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M007494","(metric)","",2],["run_test","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M007492","(metric, mode)","",2],["run_validations!","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M007718","()","",2],["run_validations!","ActiveModel::Validations::Callbacks","classes\/ActiveModel\/Validations\/Callbacks.html#M007693","()","Overwrite run validations to include callbacks. ",2],["run_warmup","ActiveSupport::Testing::Performance","classes\/ActiveSupport\/Testing\/Performance.html#M007493","()","",2],["runtime","ActiveRecord::LogSubscriber","classes\/ActiveRecord\/LogSubscriber.html#M004777","()","",2],["runtime=","ActiveRecord::LogSubscriber","classes\/ActiveRecord\/LogSubscriber.html#M004776","(value)","",2],["safe_concat","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006380","(string)","",2],["safe_concat","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M007055","(value)","Alias for #concat",2],["sanitize","ActionView::Helpers::SanitizeHelper","classes\/ActionView\/Helpers\/SanitizeHelper.html#M006534","(html, options = {})","This +sanitize+ helper will html encode all tags and strip all attributes that aren't specifically allowed.",2],["sanitize","ActiveModel::MassAssignmentSecurity::Sanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html#M007719","(attributes)","Returns all attributes not denied by the authorizer. ",2],["sanitize_css","ActionView::Helpers::SanitizeHelper","classes\/ActionView\/Helpers\/SanitizeHelper.html#M006535","(style)","Sanitizes a block of CSS code. Used by +sanitize+ when it comes across a style attribute. ",2],["sanitize_dom_id","ActionController::RecordIdentifier","classes\/ActionController\/RecordIdentifier.html#M005663","(candidate_id)","Replaces characters that are invalid in HTML DOM ids with valid ones. ",2],["sanitize_for_mass_assignment","ActiveModel::MassAssignmentSecurity","classes\/ActiveModel\/MassAssignmentSecurity.html#M007637","(attributes)","",2],["sanitize_limit","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004611","(limit)","Sanitizes the given LIMIT parameter in order to prevent SQL injection. The +limit+ may be anything that",2],["sanitize_sql_array","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005091","(ary)","Accepts an array of conditions.  The array has each value sanitized and interpolated into the SQL statement.",2],["sanitize_sql_for_assignment","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005086","(assignments)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_for_conditions","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005085","(condition, table_name = self.table_name)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_hash_for_assignment","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005090","(attrs)","Sanitizes a hash of attribute\/value pairs into SQL conditions for a SET clause. { :status => nil, :group_id",2],["sanitize_sql_hash_for_conditions","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005089","(attrs, default_table_name = self.table_name)","Sanitizes a hash of attribute\/value pairs into SQL conditions for a WHERE clause. { :name => \"foo'bar\",",2],["save","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004918","(*)","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005192","()","",2],["save","ActiveRecord::Validations","classes\/ActiveRecord\/Validations.html#M005209","(options={})","The validation process on save can be skipped by passing false. The regular Base#save method is replaced",2],["save","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005403","()","Saves (+POST+) or \\updates (+PUT+) a resource.  Delegates to +create+ if the object is \\new, +update+",2],["save","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M004083","()","POST create ",2],["save!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004919","(*)","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save!","ActiveRecord::Validations","classes\/ActiveRecord\/Validations.html#M005210","(options={})","Attempts to save the record just like Base#save but will raise a RecordInvalid exception instead of returning",2],["save!","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005404","()","Saves the resource. If the resource is new, it is created via +POST+, otherwise the existing resource",2],["save_with_validation","ActiveResource::Validations","classes\/ActiveResource\/Validations.html#M005432","(options=nil)","Validate a resource and save (POST) it to the remote web service. If any local validations fail - the",2],["say","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M004949","(message, subitem=false)","",2],["say_with_time","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M004950","(message)","",2],["schema","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005390","()","If no schema has been defined for the class (see <tt>ActiveResource::schema=<\/tt>), the default automatic",2],["schema","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005344","(&block)","Creates a schema for this resource - setting the attributes that are known prior to fetching an instance",2],["schema=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005345","(the_schema)","Alternative, direct way to specify a <tt>schema<\/tt> for this Resource. <tt>schema<\/tt> is more flexible,",2],["schema_format","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005021","","Specifies the format to use when dumping the database schema with Rails' Rakefile.  If :sql, the schema",2],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004722","()","Returns the active schema search path. ",2],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004721","(schema_csv)","Sets the schema search path to a string of comma-separated schema names. Names beginning with $ have",2],["scheme","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005897","()","Returns 'https' if this is an SSL request and 'http' otherwise. ",2],["scope","ActionDispatch::Routing::Mapper::Scoping","classes\/ActionDispatch\/Routing\/Mapper\/Scoping.html#M006174","(*args)","Used to scope a set of routes to particular constraints. Take the following route definition as an example:",2],["scope","ActiveRecord::NamedScope::ClassMethods","classes\/ActiveRecord\/NamedScope\/ClassMethods.html#M004822","(name, scope_options = {}, &block)","Adds a class method for retrieving and querying objects. A \\scope represents a narrowing of a database",2],["scope_action_options","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006210","()","",2],["scope_action_options?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006209","()","",2],["scope_for_create","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005005","()","",2],["scoped","ActiveRecord::NamedScope::ClassMethods","classes\/ActiveRecord\/NamedScope\/ClassMethods.html#M004820","(options = nil)","Returns an anonymous \\scope. posts = Post.scoped posts.size # Fires \"select count(*) from  posts\" and",2],["scopes","ActiveRecord::NamedScope::ClassMethods","classes\/ActiveRecord\/NamedScope\/ClassMethods.html#M004821","()","",2],["scoping","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004993","()","Scope all queries to the current scope. ==== Example Comment.where(:post_id => 1).scoping do Comment.first",2],["script","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004160","()","",2],["search_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006506","(object_name, method, options = {})","Returns a text_field of type \"search\". ",2],["search_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006417","(name, value = nil, options = {})","Creates a text field of type \"search\". ==== Options * Accepts the same options as text_field_tag. ",2],["seconds_since_midnight","DateTime","classes\/DateTime.html#M007108","()","Seconds since midnight: DateTime.now.seconds_since_midnight ",2],["seconds_since_midnight","Time","classes\/Time.html#M007297","()","Seconds since midnight: Time.now.seconds_since_midnight ",2],["seconds_to_utc_offset","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006872","(seconds, colon = true)","Assumes self represents an offset from UTC in seconds (as returned from Time#utc_offset) and turns this",2],["secret_token","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005728","(request)","",2],["select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006364","(method, choices, options = {}, html_options = {})","",2],["select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006350","(object, method, choices, options = {}, html_options = {})","Create a select tag and a series of contained option tags for the provided object and method. The option",2],["select","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006445","(pattern)","Returns a collection reference by finding it through a CSS +pattern+ in the DOM. This collection can",2],["select","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004612","(sql, name = nil)","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004833","(value = Proc.new)","",2],["select_all","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004563","(sql, name = nil)","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select_all","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M004630","(*args)","",2],["select_date","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006545","(date = Date.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, and day) pre-selected with the +date+. It's possible",2],["select_datetime","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006544","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, day, hour, and minute) pre-selected with the",2],["select_day","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006550","(date, options = {}, html_options = {})","Returns a select tag with options for each of the days 1 through 31 with the current day selected. The",2],["select_hour","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006549","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the hours 0 through 23 with the current hour selected.",2],["select_minute","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006548","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the minutes 0 through 59 with the current minute selected.",2],["select_month","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006551","(date, options = {}, html_options = {})","Returns a select tag with options for each of the months January through December with the current month",2],["select_one","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004564","(sql, name = nil)","Returns a record hash with the column names as keys and column values as values. ",2],["select_rows","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004593","(sql, name = nil)","Returns an array of arrays containing the field values. Order is the same as that returned by +columns+.",2],["select_rows","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004398","(sql, name = nil)","DATABASE STATEMENTS ====================================== ",2],["select_rows","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004698","(sql, name = nil)","Executes a SELECT query and returns an array of rows. Each row is an array of field values. ",2],["select_rows","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004428","(sql, name = nil)","",2],["select_second","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006547","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the seconds 0 through 59 with the current second selected.",2],["select_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006405","(name, option_tags = nil, options = {})","Creates a dropdown selection box, or if the <tt>:multiple<\/tt> option is set to true, a multiple choice",2],["select_time","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006546","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for hour and minute) You can set <tt>:time_separator<\/tt> key",2],["select_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004565","(sql, name = nil)","Returns a single value from a record ",2],["select_values","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004566","(sql, name = nil)","Returns an array of the values of the first column in a select: select_values(\"SELECT id FROM companies",2],["select_year","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006552","(date, options = {}, html_options = {})","Returns a select tag with options for each of the five years on each side of the current, which is selected.",2],["send_action","ActionController::ImplicitRender","classes\/ActionController\/ImplicitRender.html#M005739","(*)","",2],["send_data","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M005776","(data, options = {})","",2],["send_data","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M005595","(event)","",2],["send_data","ActionController::Streaming","classes\/ActionController\/Streaming.html#M005688","(data, options = {})","Sends the given binary data to the browser. This method is similar to <tt>render :text => data<\/tt>,",2],["send_file","ActionController::Instrumentation","classes\/ActionController\/Instrumentation.html#M005775","(path, options={})","",2],["send_file","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M005593","(event)","",2],["send_file","ActionController::Streaming","classes\/ActionController\/Streaming.html#M005687","(path, options = {})","Sends the file. This uses a server-appropriate method (such as X-Sendfile) via the Rack::Sendfile middleware.",2],["serializable_hash","ActiveModel::Serialization","classes\/ActiveModel\/Serialization.html#M007613","(options = nil)","",2],["serializable_hash","ActiveRecord::Serialization","classes\/ActiveRecord\/Serialization.html#M004938","(options = nil)","",2],["serialize","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005029","(attr_name, class_name = Object)","If you have an attribute that needs to be saved to the database as an object, and retrieved as the same",2],["serialized_attributes","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005030","()","Returns a hash of all the attributes that have been specified for serialization as keys and their class",2],["server_error?","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse.html#M006149","()","Alias for #error?",2],["server_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005907","()","",2],["server_software","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005868","()","Returns the lowercase name of the HTTP server software. ",2],["session","ActionDispatch::TestProcess","classes\/ActionDispatch\/TestProcess.html#M006092","()","",2],["session","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006131","()","",2],["session_id_column","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005179","","The session id field defaults to 'session_id'. ",2],["session_options=","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005875","(options)","",2],["session_store","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004355","(*args)","",2],["set_callback","ActiveSupport::Callbacks::ClassMethods","classes\/ActiveSupport\/Callbacks\/ClassMethods.html#M007403","(name, *filter_list, &block)","Set callbacks for a previously defined callback. Syntax: set_callback :save, :before, :before_meth set_callback",2],["set_content_type","ActionMailer::Base","classes\/ActionMailer\/Base.html#M006648","(m, user_content_type, class_default)","",2],["set_default_accessors!","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004189","()","",2],["set_default_backend","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M006990","()","",2],["set_environment","Rails::Server","classes\/Rails\/Server.html#M003973","()","",2],["set_fixture_class","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M004902","(class_names = {})","",2],["set_inheritance_column","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005039","(value = nil, &block)","Sets the name of the inheritance column to use to the given value, or (if the value # is nil or false)",2],["set_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M005288","(value = nil, &block)","Set the column to use for optimistic locking. Defaults to +lock_version+. ",2],["set_logger","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html#M006852","(logger)","Overwrite if you use another logger in your log subscriber: def logger ActiveRecord::Base.logger = @logger",2],["set_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey\/ClassMethods.html#M005221","(value = nil, &block)","Sets the name of the primary key column to use to the given value, or (if the value is nil or false)",2],["set_sequence_name","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005040","(value = nil, &block)","Sets the name of the sequence to use when generating ids to the given value, or (if the value is nil",2],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004684","()","Enable standard-conforming strings if available. ",2],["set_table_name","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005038","(value = nil, &block)","Sets the table name. If the value is nil or false  then the value returned by the given block is used.",2],["set_test_assigns","ActionController::Testing","classes\/ActionController\/Testing.html#M005679","()","",2],["setup","ActionView::Partials::PartialRenderer","classes\/ActionView\/Partials\/PartialRenderer.html#M006275","(options, block)","",2],["setup","ActiveModel::Validations::AcceptanceValidator","classes\/ActiveModel\/Validations\/AcceptanceValidator.html#M007707","(klass)","",2],["setup","ActiveModel::Validations::ConfirmationValidator","classes\/ActiveModel\/Validations\/ConfirmationValidator.html#M007703","(klass)","",2],["setup","ActiveRecord::Validations::UniquenessValidator","classes\/ActiveRecord\/Validations\/UniquenessValidator.html#M005202","(klass)","Unfortunately, we have to tie Uniqueness validators to a class. ",2],["setup","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html#M006844","()","",2],["setup","ActiveSupport::Testing::SetupAndTeardown::ClassMethods","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ClassMethods.html#M007484","(*args, &block)","",2],["setup_controller_request_and_response","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005620","()","",2],["setup_fixture_accessors","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M004906","(table_names = nil)","",2],["setup_fixtures","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures.html#M004910","()","",2],["setup_subscriptions","ActionController::TemplateAssertions","classes\/ActionController\/TemplateAssertions.html#M005602","()","",2],["setup_with_controller","ActionView::TestCase::Behavior","classes\/ActionView\/TestCase\/Behavior.html#M006297","()","",2],["shallow","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006202","()","",2],["shallow?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006203","()","",2],["shallow_scoping?","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006220","()","",2],["show","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006450","(*ids)","Shows hidden DOM elements with the given +ids+. Example: # Show a few people # Generates: [\"person_6\",",2],["show_variable","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004485","(name)","SHOW VARIABLES LIKE 'name' ",2],["silence","ActiveSupport::Benchmarkable","classes\/ActiveSupport\/Benchmarkable.html#M006658","()","Silence the logger during the execution of the block. ",2],["silence","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006857","(temporary_level = ERROR)","Silences the logger for the duration of the block. ",2],["silence","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004111","(stream)","Alias for #capture",2],["silence!","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007549","()","Silence the logger. ",2],["silence_stream","Kernel","classes\/Kernel.html#M007138","(stream)","Silences any stream for the duration of the block. silence_stream(STDOUT) do puts 'This will never be",2],["silence_warnings","Kernel","classes\/Kernel.html#M007134","()","Sets $VERBOSE to nil for the duration of the block and back to its original value afterwards. silence_warnings",2],["silencer","ActiveSupport::BufferedLogger","classes\/ActiveSupport\/BufferedLogger.html#M006856","","Set to false to disable the silencer ",2],["simple_format","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006386","(text, html_options={}, options={})","Returns +text+ transformed into HTML using simple formatting rules. Two or more consecutive newlines(<tt>\\n\\n<\/tt>)",2],["since","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M007419","(time = ::Time.current)","Calculates a new Time or Date that is as far in the future as this Duration represents. ",2],["since","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006717","(other)","",2],["since","DateTime","classes\/DateTime.html#M007112","(seconds)","Returns a new DateTime representing the time a number of seconds since the instance time Do not use this",2],["since","Time","classes\/Time.html#M007301","(seconds)","Returns a new Time representing the time a number of seconds since the instance time ",2],["singleton_class","Kernel","classes\/Kernel.html#M007140","()","Returns the object's singleton class. ",2],["singular","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M007741","(record_or_class)","Returns the singular class name of a record or class. Examples: ActiveModel::Naming.singular(post)  ",2],["singular","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M007586","(rule, replacement)","Specifies a new singularization rule and its replacement. The rule can either be a string or a regular",2],["singular_table_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004254","()","",2],["singularize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007593","(word)","The reverse of +pluralize+, returns the singular form of a word in a string. Examples: \"posts\".singularize",2],["site","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005347","()","Gets the URI of the REST resources to map for this class.  The site variable is required for Active Resource's",2],["site=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005348","(site)","Sets the URI of the REST resources to map for this class to the value in the +site+ argument. The site",2],["site=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005438","(site)","Set URI for remote service. ",2],["size","ActionDispatch::Http::UploadedFile","classes\/ActionDispatch\/Http\/UploadedFile.html#M005796","()","",2],["size","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007769","()","Returns the number of error messages. p.errors.add(:name, \"can't be blank\") p.errors.size # => 1 p.errors.add(:name,",2],["size","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004989","()","Returns size of the records. ",2],["size","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007581","()","Returns the size of the cached value. This could be less than value.size if the data is compressed. ",2],["size","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006767","()","Returns the number of codepoints in the string ",2],["skip_callback","ActiveSupport::Callbacks::ClassMethods","classes\/ActiveSupport\/Callbacks\/ClassMethods.html#M007404","(name, *filter_list, &block)","Skip a previously defined callback for a given type. ",2],["skip_default_locale!","ActionView::LookupContext::Details","classes\/ActionView\/LookupContext\/Details.html#M006343","()","Do not use the default locale on template lookup. ",2],["skip_filter","AbstractController::Callbacks::ClassMethods","classes\/AbstractController\/Callbacks\/ClassMethods.html#M005548","(*names, &blk)","Skip before, after, and around filters matching any of the names ==== Parameters * <tt>names<\/tt> - A",2],["slice","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006779","(*args)","Implements Unicode-aware slice with codepoints. Slicing on one point returns the codepoints for that",2],["sortable","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006376","(id, options = {})","Creates a script.aculo.us sortable element. Useful to recreate sortable elements after items get added",2],["sortable_element","ActionView::Helpers::ScriptaculousHelper","classes\/ActionView\/Helpers\/ScriptaculousHelper.html#M006368","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ sortable by drag-and-drop and make an Ajax",2],["source_root","Rails::Generators::Base","classes\/Rails\/Generators\/Base.html#M004204","(path=nil)","Returns the source root for this generator using default_source_root as default. ",2],["split","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006776","(*args)","Works just like <tt>String#split<\/tt>, with the exception that the items in the resulting list are Chars",2],["split_args","Commands::Plugin","classes\/Commands\/Plugin.html#M003943","(args)","",2],["sql","ActiveRecord::LogSubscriber","classes\/ActiveRecord\/LogSubscriber.html#M004780","(event)","",2],["sql_conditions","ActiveRecord::Associations::ThroughAssociationScope","classes\/ActiveRecord\/Associations\/ThroughAssociationScope.html#M005278","()","Alias for #conditions",2],["sql_query_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004561","()","the maximum length of an SQL query ",2],["sqlite_version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004453","()","",2],["ssl?","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005899","()","Is this an SSL request? ",2],["ssl_options","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005362","()","Returns the SSL options hash. ",2],["ssl_options=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005361","(opts={})","Options that will get applied to an SSL connection. * <tt>:key<\/tt> - An OpenSSL::PKey::RSA or OpenSSL::PKey::DSA",2],["ssl_options=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005444","(opts={})","Hash of options applied to Net::HTTP instance when +site+ protocol is 'https'. ",2],["stale?","ActionController::ConditionalGet","classes\/ActionController\/ConditionalGet.html#M005752","(options)","Sets the etag and\/or last_modified on the response and checks it against the client request. If the request",2],["standard_port","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005904","()","Returns the standard \\port number for this request's protocol. ",2],["standard_port?","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005905","()","Returns whether this request is using the standard port ",2],["start","ActiveSupport::Callbacks::Callback","classes\/ActiveSupport\/Callbacks\/Callback.html#M007392","(key=nil, object=nil)","This will supply contents for before and around filters, and no contents for after filters (for the forward",2],["start","Rails::Console","classes\/Rails\/Console.html#M003969","()","",2],["start","Rails::Console","classes\/Rails\/Console.html#M003967","(app)","",2],["start","Rails::DBConsole","classes\/Rails\/DBConsole.html#M003963","(app)","",2],["start","Rails::DBConsole","classes\/Rails\/DBConsole.html#M003965","()","",2],["start","Rails::Server","classes\/Rails\/Server.html#M003974","()","",2],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M006660","()","",2],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes\/ActiveSupport\/XmlMini_NokogiriSAX\/HashBuilder.html#M006663","(name, attrs = [])","",2],["start_processing","ActionController::LogSubscriber","classes\/ActionController\/LogSubscriber.html#M005591","(event)","",2],["stats","ActiveSupport::Cache::MemCacheStore","classes\/ActiveSupport\/Cache\/MemCacheStore.html#M006940","()","Get the statistics from the memcached servers. ",2],["status","ActionController::Metal","classes\/ActionController\/Metal.html#M005633","()","",2],["status=","ActionController::Metal","classes\/ActionController\/Metal.html#M005634","(status)","",2],["status=","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005813","(status)","",2],["status_message","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005817","()","Alias for #message",2],["sti_name","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005061","()","",2],["strftime","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006708","(format)","Replaces <tt>%Z<\/tt> and <tt>%z<\/tt> directives with +zone+ and +formatted_offset+, respectively, before",2],["string_to_binary","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004507","(value)","Used to convert from Strings to BLOBs ",2],["string_to_date","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004509","(string)","",2],["string_to_dummy_time","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004511","(string)","",2],["string_to_time","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004510","(string)","",2],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007453","()","",2],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007452","()","",2],["strip","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006770","()","Strips entire range of Unicode whitespace from the right and left of the string. ",2],["strip_links","ActionView::Helpers::SanitizeHelper","classes\/ActionView\/Helpers\/SanitizeHelper.html#M006537","(html)","Strips all link tags from +text+ leaving just the link text. ==== Examples strip_links('<a href=\"http:\/\/www.rubyonrails.org\">Ruby",2],["strip_tags","ActionView::Helpers::SanitizeHelper","classes\/ActionView\/Helpers\/SanitizeHelper.html#M006536","(html)","Strips all HTML tags from the +html+, including comments.  This uses the html-scanner tokenizer and so",2],["structure_dump","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004589","()","Returns a string of <tt>CREATE TABLE<\/tt> SQL statement(s) for recreating the entire structure of the",2],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006563","(*sources)","Returns a stylesheet link tag for the sources specified as arguments. If you don't specify an extension,",2],["stylesheet_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006561","(source)","Computes the path to a stylesheet asset in the public stylesheets directory. If the +source+ filename",2],["stylesheets","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004158","()","",2],["subclasses","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005014","()","",2],["subclasses","Rails::Generators","classes\/Rails\/Generators.html#M004026","()","Track all generators subclasses. ",2],["subclasses","Rails::Railtie","classes\/Rails\/Railtie.html#M004309","()","",2],["subdomain","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005910","(tld_length = 1)","",2],["subdomains","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005909","(tld_length = 1)","Returns all the \\subdomains as an array, so <tt>[\"dev\", \"www\"]<\/tt> would be returned for \"dev.www.rubyonrails.org\".",2],["submit","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006525","(value=nil, options={})","Add the submit button for the given form. When no value is given, it checks if the object is a new resource",2],["submit_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006414","(value = \"Save changes\", options = {})","Creates a submit button with the text <tt>value<\/tt> as the caption. ==== Options * <tt>:confirm => 'question?'<\/tt>",2],["subscribe","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M007427","(*args, &block)","",2],["subscribe","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M006904","(pattern = nil, block = Proc.new)","",2],["success?","ActionDispatch::TestResponse","classes\/ActionDispatch\/TestResponse.html#M006145","()","Was the response successful? ",2],["success?","ActiveResource::Response","classes\/ActiveResource\/Response.html#M005500","()","",2],["sum","ActiveRecord::Calculations","classes\/ActiveRecord\/Calculations.html#M004864","(column_name, options = {})","Calculates the sum of values on a given column. The value is returned with the same data type of the",2],["sum","Enumerable","classes\/Enumerable.html#M007369","(identity = 0, &block)","Calculates a sum from the elements. Examples: payments.sum { |p| p.price * p.tax_rate } payments.sum(&:price)",2],["supports_add_column?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004416","()","",2],["supports_count_distinct?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004752","()","Does this adapter support using DISTINCT within COUNT?  This is +true+ for all adapters except sqlite.",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004753","()","Does this adapter support DDL rollbacks in transactions?  That is, would CREATE TABLE or ALTER TABLE",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004686","()","",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004412","()","",2],["supports_insert_with_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004685","()","",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004750","()","Does this adapter support migrations?  Backend specific, as the abstract adapter always returns +false+.",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004682","()","Does PostgreSQL support migrations? ",2],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004751","()","Can this adapter determine the primary key for tables not attached to an Active Record class, such as",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004754","()","Does this adapter support savepoints? PostgreSQL and MySQL do, SQLite does not. ",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004687","()","",2],["suppress","Kernel","classes\/Kernel.html#M007139","(*exception_classes)","Blocks and ignores any exception passed as argument if raised within the block. suppress(ZeroDivisionError)",2],["suppress_messages","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M004951","()","",2],["svn_url?","Plugin","classes\/Plugin.html#M003923","()","",2],["swap","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M006003","(target, *args, &block)","",2],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007454","()","",2],["symbolized_path_parameters","ActionDispatch::Http::Parameters","classes\/ActionDispatch\/Http\/Parameters.html#M005885","()","The same as <tt>path_parameters<\/tt> with explicitly symbolized keys. ",2],["symbols","Mime::Mimes","classes\/Mime\/Mimes.html#M005811","()","",2],["t","AbstractController::Translation","classes\/AbstractController\/Translation.html#M005543","(*args)","Alias for #translate",2],["t","ActionView::Helpers::TranslationHelper","classes\/ActionView\/Helpers\/TranslationHelper.html#M006480","(key, options = {})","Alias for #translate",2],["table_alias_for","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004568","(table_name)","Truncates a table alias according to the limits of the current adapter. ",2],["table_alias_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004553","()","the maximum length of a table alias ",2],["table_alias_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004688","()","Returns the configured supported identifier length supported by PostgreSQL, or report the default of",2],["table_exists?","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005041","()","Indicates whether the table associated with this class exists ",2],["table_exists?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004465","(name)","",2],["table_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004716","(name)","",2],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes\/ActiveRecord\/ConnectionAdapters\/SchemaStatements.html#M004569","(table_name)","def tables(name = nil) end ",2],["table_name","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005031","()","Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy",2],["table_name","ActiveRecord::SessionStore::SqlBypass","classes\/ActiveRecord\/SessionStore\/SqlBypass.html#M005178","","The table name defaults to 'sessions'. ",2],["table_name","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004251","()","",2],["table_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseLimits.html#M004555","()","the maximum length of a table name ",2],["table_name_prefix","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005017","","Accessor for the name of the prefix string to prepend to every table name. So if set to \"basecamp_\",",2],["table_name_suffix","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005018","","Works like +table_name_prefix+, but appends instead of prepends (set to \"_basecamp\" gives \"projects_basecamp\",",2],["table_structure","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004447","(table_name)","",2],["tableize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007596","(class_name)","Create the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004715","(name = nil)","Returns the list of all tables in the schema search path or a specified schema. ",2],["tag","ActionView::Helpers::ActiveModelInstanceTag","classes\/ActionView\/Helpers\/ActiveModelInstanceTag.html#M006431","(type, options, *)","",2],["tag","ActionView::Helpers::TagHelper","classes\/ActionView\/Helpers\/TagHelper.html#M006619","(name, options = nil, open = false, escape = true)","Returns an empty HTML tag of type +name+ which by default is XHTML compliant. Set +open+ to true to create",2],["tail!","Rails::Rack::LogTailer","classes\/Rails\/Rack\/LogTailer.html#M004046","()","",2],["teardown","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html#M006846","()","",2],["teardown","ActiveSupport::Testing::SetupAndTeardown::ClassMethods","classes\/ActiveSupport\/Testing\/SetupAndTeardown\/ClassMethods.html#M007485","(*args, &block)","",2],["teardown_fixtures","ActiveRecord::TestFixtures","classes\/ActiveRecord\/TestFixtures.html#M004911","()","",2],["teardown_subscriptions","ActionController::TemplateAssertions","classes\/ActionController\/TemplateAssertions.html#M005603","()","",2],["telephone_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006507","(object_name, method, options = {})","Returns a text_field of type \"tel\". ",2],["telephone_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006418","(name, value = nil, options = {})","Creates a text field of type \"tel\". ==== Options * Accepts the same options as text_field_tag. ",2],["template","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006130","()","",2],["template_exists?","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M006334","(name, prefix = nil, partial = false)","Alias for #exists?",2],["template_objects","ActionDispatch::TestResponse::DeprecatedHelpers","classes\/ActionDispatch\/TestResponse\/DeprecatedHelpers.html#M006142","()","A shortcut to the template.assigns ",2],["templates_path","Rails::Generators","classes\/Rails\/Generators.html#M004021","()","",2],["test","ActiveSupport::Testing::Declarative","classes\/ActiveSupport\/Testing\/Declarative.html#M007483","(name, &block)","test \"verify something\" do ... end ",2],["test","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004161","()","",2],["test_errors_aref","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M007787","()","== Errors Testing Returns an object that has :[] and :full_messages defined on it. See below for more",2],["test_errors_full_messages","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M007788","()","Returns an Array of all error messages for the object. Each message should contain information about",2],["test_model_naming","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M007786","()","== Naming Model.model_name must return a string with some convenience methods as :human and :partial_path.",2],["test_persisted?","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M007785","()","== Responds to <tt>persisted?<\/tt> Returns a boolean that specifies whether the object has been persisted",2],["test_to_key","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M007744","()","== Responds to <tt>to_key<\/tt> Returns an Enumerable of all (primary) key attributes or nil if model.persisted?",2],["test_to_param","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M007763","()","== Responds to <tt>to_param<\/tt> Returns a string representing the object's key suitable for use in URLs",2],["test_valid?","ActiveModel::Lint::Tests","classes\/ActiveModel\/Lint\/Tests.html#M007784","()","== Responds to <tt>valid?<\/tt> Returns a boolean that specifies whether the object is in a valid or invalid",2],["tests","ActionController::TestCase::Behavior::ClassMethods","classes\/ActionController\/TestCase\/Behavior\/ClassMethods.html#M005607","(controller_class)","Sets the controller class name. Useful if the name can't be inferred from test class. Expects +controller_class+",2],["tests","ActionView::TestCase::Behavior::ClassMethods","classes\/ActionView\/TestCase\/Behavior\/ClassMethods.html#M006291","(helper_class)","",2],["tests","Rails::Generators::TestCase","classes\/Rails\/Generators\/TestCase.html#M004107","(klass)","Sets which generator should be tested: tests AppGenerator ",2],["text?","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004499","()","Returns +true+ if the column is either of type string or text. ",2],["text_area","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006503","(object_name, method, options = {})","Returns a textarea opening and closing tag set tailored for accessing a specified attribute (identified",2],["text_area_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006411","(name, content = nil, options = {})","Creates a text input area; use a textarea for longer text inputs such as blog posts or descriptions.",2],["text_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006499","(object_name, method, options = {})","Returns an input tag of the \"text\" type tailored for accessing a specified attribute (identified by +method+)",2],["text_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006406","(name, value = nil, options = {})","Creates a standard text field; use these text fields to input smaller chunks of text like a username",2],["threadsafe!","Rails::Application::Configuration","classes\/Rails\/Application\/Configuration.html#M004348","()","Enable threaded mode. Allows concurrent requests to controller actions and multiple database connections.",2],["tidy_bytes","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006791","(force = false)","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["tidy_bytes","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006798","(string, force = false)","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["time","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006678","()","Returns a Time or DateTime instance that represents the time in +time_zone+. ",2],["time_ago_in_words","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006539","(from_time, include_seconds = false)","Like distance_of_time_in_words, but where <tt>to_time<\/tt> is fixed to <tt>Time.now<\/tt>. ==== Examples",2],["time_select","ActionView::Helpers::DateHelper","classes\/ActionView\/Helpers\/DateHelper.html#M006542","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for hour, minute and optionally second) pre-selected for accessing",2],["time_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006585","(method, options = {}, html_options = {})","",2],["time_with_datetime_fallback","Time","classes\/Time.html#M007283","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0, usec=0)","Returns a new Time if requested year can be accommodated by Ruby's Time class (i.e., if year is within",2],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006358","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","Returns a string of option tags for pretty much any time zone in the world. Supply a ActiveSupport::TimeZone",2],["time_zone_select","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006367","(method, priority_zones = nil, options = {}, html_options = {})","",2],["time_zone_select","ActionView::Helpers::FormOptionsHelper","classes\/ActionView\/Helpers\/FormOptionsHelper.html#M006353","(object, method, priority_zones = nil, options = {}, html_options = {})","Return select and option tags for the given object and method, using #time_zone_options_for_select to",2],["timeout","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005360","()","Gets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005359","(timeout)","Sets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005443","(timeout)","Sets the number of seconds after which HTTP requests to the remote service should time out. ",2],["timestamped_migrations","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005022","","Specify whether or not to use timestamps for migration versions ",2],["timestamps","ActiveRecord::ConnectionAdapters::Table","classes\/ActiveRecord\/ConnectionAdapters\/Table.html#M004541","()","Adds timestamps (created_at and updated_at) columns to the table. See SchemaStatements#add_timestamps",2],["timestamps","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004531","(*args)","Appends <tt>:datetime<\/tt> columns <tt>:created_at<\/tt> and <tt>:updated_at<\/tt> to the table. ",2],["titlecase","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006786","()","Alias for #titleize",2],["titleize","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007595","(word)","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["titleize","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006785","()","Capitalizes the first letter of every word, when possible. Example: \"\u00c9L QUE SE ENTER\u00d3\".mb_chars.titleize",2],["tmp","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004162","()","",2],["to_a","ActionController::Metal","classes\/ActionController\/Metal.html#M005639","()",":api: private ",2],["to_a","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005826","()","",2],["to_a","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007770","()","Returns an array of error messages, with the attribute name included p.errors.add(:name, \"can't be blank\")",2],["to_a","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004987","()","",2],["to_a","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006721","()","",2],["to_a","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M004283","()","Alias for #paths",2],["to_d","BigDecimal","classes\/BigDecimal.html#M007182","()","",2],["to_date","DateTime","classes\/DateTime.html#M007094","()","Converts self to a Ruby Date object; time portion is discarded ",2],["to_date","Time","classes\/Time.html#M007291","()","Converts a Time object to a Date, dropping hour, minute, and second precision. my_time = Time.now  #",2],["to_datetime","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006727","()","",2],["to_datetime","DateTime","classes\/DateTime.html#M007096","()","To be able to keep Times, Dates and DateTimes interchangeable on conversions ",2],["to_datetime","Time","classes\/Time.html#M007293","()","Converts a Time instance to a Ruby DateTime instance, preserving UTC offset. my_time = Time.now    #",2],["to_default_s","DateTime","classes\/DateTime.html#M007089","(format = :default)","Alias for #to_s",2],["to_default_s","Time","classes\/Time.html#M007289","(format = :default)","Alias for #to_s",2],["to_f","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006722","()","",2],["to_f","DateTime","classes\/DateTime.html#M007099","()","Converts self to a floating-point number of seconds since the Unix epoch ",2],["to_format","ActionController::Responder","classes\/ActionController\/Responder.html#M005759","()","All other formats follow the procedure below. First we try to render a template, if the template is not",2],["to_formatted_s","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006707","(format = :default)","Alias for #to_s",2],["to_formatted_s","BigDecimal","classes\/BigDecimal.html#M007183","(format = DEFAULT_STRING_FORMAT)","",2],["to_formatted_s","DateTime","classes\/DateTime.html#M007087","(format = :default)","Convert to a formatted string. See Time::DATE_FORMATS for predefined formats. This method is aliased",2],["to_formatted_s","Time","classes\/Time.html#M007287","(format = :default)","Converts to a formatted string. See DATE_FORMATS for builtin formats. This method is aliased to <tt>to_s<\/tt>.",2],["to_hash","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005959","()","",2],["to_hash","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007776","()","",2],["to_hash","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007456","()","Convert to a Hash with String keys. ",2],["to_html","ActionController::Responder","classes\/ActionController\/Responder.html#M005758","()","HTML format does not render the resource, it always attempt to render a template. ",2],["to_html","Rails::Info","classes\/Rails\/Info.html#M004376","()","",2],["to_i","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006723","()","",2],["to_i","DateTime","classes\/DateTime.html#M007100","()","Converts self to an integer number of seconds since the Unix epoch ",2],["to_json","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005414","(options={})","",2],["to_key","ActiveModel::Conversion","classes\/ActiveModel\/Conversion.html#M007615","()","Returns an Enumerable of all key attributes if any is set, regardless if the object is persisted or not.",2],["to_key","ActiveRecord::AttributeMethods::PrimaryKey","classes\/ActiveRecord\/AttributeMethods\/PrimaryKey.html#M005216","()","Returns this record's primary key value wrapped in an Array or nil if the record is a new_record? ",2],["to_model","ActionView::Helpers::FormBuilder","classes\/ActionView\/Helpers\/FormBuilder.html#M006518","()","",2],["to_model","ActiveModel::Conversion","classes\/ActiveModel\/Conversion.html#M007614","()","If your object is already designed to implement all of the Active Model you can use the default to_model",2],["to_options!","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007455","()","",2],["to_param","ActiveModel::Conversion","classes\/ActiveModel\/Conversion.html#M007616","()","Returns a string representing the object's key suitable for use in URLs, or nil if persisted? is false",2],["to_param","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005101","()","Returns a String, which Action Pack uses for constructing an URL to this object. The default implementation",2],["to_param","Object","classes\/Object.html#M007352","()","Alias of <tt>to_s<\/tt>. ",2],["to_path","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005819","()","",2],["to_path","ActionView::PathResolver","classes\/ActionView\/PathResolver.html#M006263","()","Alias for #to_s",2],["to_prepare","ActionController::Dispatcher","classes\/ActionController\/Dispatcher.html#M005649","(*args, &block)","",2],["to_prepare","ActionDispatch::Callbacks","classes\/ActionDispatch\/Callbacks.html#M005988","(*args, &block)","Add a preparation callback. Preparation callbacks are run before every request in development mode, and",2],["to_prepare","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003987","(&blk)","",2],["to_prepare_blocks","Rails::Railtie::Configuration","classes\/Rails\/Railtie\/Configuration.html#M003986","()","",2],["to_query","Object","classes\/Object.html#M007367","(key)","Converts an object into a string suitable for use as a URL query string, using the given <tt>key<\/tt>",2],["to_s","ActionDispatch::RemoteIp::RemoteIpGetter","classes\/ActionDispatch\/RemoteIp\/RemoteIpGetter.html#M005935","()","",2],["to_s","ActionView::PathResolver","classes\/ActionView\/PathResolver.html#M006262","()","",2],["to_s","ActiveResource::Request","classes\/ActiveResource\/Request.html#M005497","()","",2],["to_s","ActiveResource::SSLError","classes\/ActiveResource\/SSLError.html#M005342","()","",2],["to_s","ActiveResource::TimeoutError","classes\/ActiveResource\/TimeoutError.html#M005340","()","",2],["to_s","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M007060","()","",2],["to_s","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006706","(format = :default)","<tt>:db<\/tt> format outputs time in UTC; all others output time in local. Uses TimeWithZone's +strftime+,",2],["to_s","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006878","()","Returns a textual representation of this time zone. ",2],["to_s","BigDecimal","classes\/BigDecimal.html#M007184","(format = DEFAULT_STRING_FORMAT)","Alias for #to_formatted_s",2],["to_s","DateTime","classes\/DateTime.html#M007088","(format = :default)","Alias for #to_formatted_s",2],["to_s","Mime::Type","classes\/Mime\/Type.html#M005838","()","",2],["to_s","Plugin","classes\/Plugin.html#M003922","()","",2],["to_s","Rails::Info","classes\/Rails\/Info.html#M004375","()","",2],["to_s","SourceAnnotationExtractor::Annotation","classes\/SourceAnnotationExtractor\/Annotation.html#M004288","(options={})","Returns a representation of the annotation that looks like this: [126] [TODO] This algorithm is simple",2],["to_s","Time","classes\/Time.html#M007288","(format = :default)","Alias for #to_formatted_s",2],["to_sql","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004534","()","Returns a String whose contents are the column definitions concatenated together. This string can then",2],["to_sql","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005003","()","",2],["to_str","Mime::Type","classes\/Mime\/Type.html#M005839","()","",2],["to_sym","Mime::Type","classes\/Mime\/Type.html#M005840","()","",2],["to_tag","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M006898","(key, value, options)","",2],["to_time","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006726","()","A TimeWithZone acts like a Time, so just return +self+. ",2],["to_time","DateTime","classes\/DateTime.html#M007095","()","Attempts to convert self to a Ruby Time object; returns self if out of range of Ruby Time class If self",2],["to_time","Time","classes\/Time.html#M007292","()","A method to keep Time, Date and DateTime instances interchangeable on conversions. In this case, it simply",2],["to_xml","ActiveModel::Errors","classes\/ActiveModel\/Errors.html#M007774","(options={})","Returns an xml formatted representation of the Errors hash. p.errors.add(:name, \"can't be blank\") p.errors.add(:name,",2],["to_xml","ActiveModel::Serializers::Xml","classes\/ActiveModel\/Serializers\/Xml.html#M007617","(options = {}, &block)","Returns XML representing the model. Configuration can be passed through +options+. ",2],["to_xml","ActiveRecord::Serialization","classes\/ActiveRecord\/Serialization.html#M004948","(options = {}, &block)","Builds an XML document to represent the model. Some configuration is available through +options+. However",2],["to_xml","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005415","(options={})","",2],["to_yaml","ActiveSupport::SafeBuffer","classes\/ActiveSupport\/SafeBuffer.html#M007061","(*args)","",2],["to_yaml","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006702","(options = {})","",2],["to_yaml","BigDecimal","classes\/BigDecimal.html#M007180","(opts = {})","This emits the number without any scientific notation. This is better than self.to_f.to_s since it doesn't",2],["today","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006883","()","Return the current date in this time zone. ",2],["today?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006712","()","",2],["today?","Time","classes\/Time.html#M007295","()","Tells whether the Time object's time is today ",2],["toggle","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006452","(*ids)","Toggles the visibility of the DOM elements with the given +ids+. Example: # Show a few people # Generates:",2],["toggle","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004930","(attribute)","Assigns to +attribute+ the boolean opposite of <tt>attribute?<\/tt>. So if the predicate returns +true+",2],["toggle!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004931","(attribute)","Wrapper around +toggle+ that saves the record. This method differs from its non-bang version in that",2],["token_and_options","ActionController::HttpAuthentication::Token","classes\/ActionController\/HttpAuthentication\/Token.html#M005736","(request)","Parses the token and options out of the token authorization header.  If the header looks like this: Authorization:",2],["tomorrow","Time","classes\/Time.html#M007335","()","Convenience method which returns a new Time representing the time 1 day since the instance time ",2],["touch","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004933","(name = nil)","Saves the record with the updated_at\/on attributes set to the current time. Please note that no validation",2],["transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004599","(options = {})","Runs the given block in a database transaction, and returns the result of the block. == Nested transactions",2],["transaction","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004786","(&block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction","ActiveRecord::Transactions::ClassMethods","classes\/ActiveRecord\/Transactions\/ClassMethods.html#M004783","(options = {}, &block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction_include_action?","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004799","(action)","Determine if a transaction included an action for :create, :update, or :destroy. Used in filtering callbacks.",2],["transaction_joinable=","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004769","(joinable)","",2],["transaction_record_state","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004798","(state)","Determine if a record was created or destroyed in a transaction. State should be one of :new_record or",2],["translate","AbstractController::Translation","classes\/AbstractController\/Translation.html#M005542","(*args)","",2],["translate","ActionView::Helpers::TranslationHelper","classes\/ActionView\/Helpers\/TranslationHelper.html#M006479","(key, options = {})","Delegates to I18n#translate but also performs three additional functions. First, it'll pass the :rescue_format",2],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004775","(e, message)","",2],["translate_exception","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004491","(exception, message)","",2],["translate_exception","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004740","(exception, message)","",2],["translate_exception","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004455","(exception, message)","",2],["transliterate","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007598","(string, replacement = \"?\")","Replaces non-ASCII characters with an ASCII approximation, or if none exists, a replacement character",2],["truncate","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006381","(text, options = {})","Truncates a given +text+ after a given <tt>:length<\/tt> if +text+ is longer than <tt>:length<\/tt> (defaults",2],["try","Object","classes\/Object.html#M007362","(method, *args, &block)","Invokes the method identified by the symbol +method+, passing it any arguments and\/or the block specified,",2],["try_to_load_dependency","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M004904","(file_name)","",2],["tsort_each_child","Rails::Initializable::Collection","classes\/Rails\/Initializable\/Collection.html#M004301","(initializer, &block)","",2],["tv_sec","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006725","()","Alias for #to_i",2],["type_cast","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004503","(value)","Casts value (which is a String) to an appropriate instance. ",2],["type_cast_code","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004504","(var_name)","",2],["type_to_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes\/ActiveRecord\/ConnectionAdapters\/MysqlAdapter.html#M004476","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to MySQL-specific data types. ",2],["type_to_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004737","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to PostgreSQL-specific data types. ",2],["u_unpack","ActiveSupport::Multibyte::Unicode","classes\/ActiveSupport\/Multibyte\/Unicode.html#M006748","(string)","Unpack the string at codepoints boundaries. Raises an EncodingError when the encoding of the string isn't",2],["uncached","ActiveRecord::ConnectionAdapters::QueryCache","classes\/ActiveRecord\/ConnectionAdapters\/QueryCache.html#M004628","()","Disable the query cache within the block. ",2],["uncached","ActiveRecord::QueryCache::ClassMethods","classes\/ActiveRecord\/QueryCache\/ClassMethods.html#M005302","(&block)","Disable the query cache within the block if Active Record is configured. ",2],["uncountable","ActiveSupport::Inflector::Inflections","classes\/ActiveSupport\/Inflector\/Inflections.html#M007588","(*words)","Add uncountable words that shouldn't be attempted inflected. Examples: uncountable \"money\" uncountable",2],["uncountable?","ActiveModel::Naming","classes\/ActiveModel\/Naming.html#M007742","(record_or_class)","Identifies whether the class name of a record or class is uncountable. Examples: ActiveModel::Naming.uncountable?(Sheep)",2],["uncountable?","Rails::Generators::NamedBase","classes\/Rails\/Generators\/NamedBase.html#M004252","()","",2],["undefine_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","classes\/ActiveModel\/AttributeMethods\/ClassMethods.html#M007645","()","Removes all the previously dynamically defined methods from the class ",2],["underscore","ActiveSupport::Inflector","classes\/ActiveSupport\/Inflector.html#M007601","(camel_cased_word)","Makes an underscored, lowercase form from the expression in the string. Changes '::' to '\/' to convert",2],["unescape","Object","classes\/Object.html#M007151","(str, escaped = \/%[a-fA-F\\d]{2}\/)","",2],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004690","(value)","Unescapes bytea output from a database to the binary string it represents. NOTE: This is NOT an inverse",2],["unescape_rjs","ActionDispatch::Assertions::SelectorAssertions","classes\/ActionDispatch\/Assertions\/SelectorAssertions.html#M006090","(rjs_string)","Unescapes a RJS string. ",2],["uninstall","Plugin","classes\/Plugin.html#M003927","()","",2],["unmemoize_all","ActiveSupport::Memoizable::InstanceMethods","classes\/ActiveSupport\/Memoizable\/InstanceMethods.html#M006841","()","",2],["unserializable_attribute?","ActiveRecord::AttributeMethods::Read","classes\/ActiveRecord\/AttributeMethods\/Read.html#M005231","(attr_name, column)","Returns true if the attribute is of a text column and marked for serialization. ",2],["unserialize_attribute","ActiveRecord::AttributeMethods::Read","classes\/ActiveRecord\/AttributeMethods\/Read.html#M005232","(attr_name)","Returns the unserialized object of the attribute. ",2],["unshift","Rails::Paths::Path","classes\/Rails\/Paths\/Path.html#M004280","(path)","",2],["unshift","Rails::Paths::Root","classes\/Rails\/Paths\/Root.html#M004272","(*)","Alias for #push",2],["unsubscribe","ActiveSupport::Notifications","classes\/ActiveSupport\/Notifications.html#M007428","(*args)","",2],["unsubscribe","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M006905","(subscriber)","",2],["until","ActiveSupport::Duration","classes\/ActiveSupport\/Duration.html#M007422","(time = ::Time.current)","Alias for #ago",2],["upcase","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006782","()","Convert characters in the string to uppercase. Example: 'Laurent, o\u00f9 sont les tests ?'.mb_chars.upcase.to_s",2],["update","ActionDispatch::Session::AbstractStore::SessionHash","classes\/ActionDispatch\/Session\/AbstractStore\/SessionHash.html#M005960","(hash)","",2],["update","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004596","(sql, name = nil)","Executes the update statement and returns the number of rows affected. ",2],["update","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004995","(id, attributes)","Updates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["update","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005417","()","Update the resource on the remote service. ",2],["update","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007443","(other_hash)","Updates the instantized hash with values from the second: hash_1 = HashWithIndifferentAccess.new hash_1[:key]",2],["update_all","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M004994","(updates, conditions = nil, options = {})","Updates all records with details given if they match a set of conditions supplied, limits and order can",2],["update_attribute","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004923","(name, value)","Updates a single attribute and saves the record. This is especially useful for boolean flags on existing",2],["update_attribute","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005410","(name, value)","Updates a single attribute and then saves the object. Note: Unlike ActiveRecord::Base.update_attribute,",2],["update_attributes","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004924","(attributes)","Updates the attributes of the model from the passed-in hash and saves the record, all wrapped in a transaction.",2],["update_attributes","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005411","(attributes)","Updates this resource with all the attributes from the passed-in Hash and requests that the record be",2],["update_attributes","Rails::Generators::ActiveModel","classes\/Rails\/Generators\/ActiveModel.html#M004084","(params=nil)","PUT update ",2],["update_attributes!","ActiveRecord::Persistence","classes\/ActiveRecord\/Persistence.html#M004925","(attributes)","Updates its receiver just like +update_attributes+ but calls <tt>save!<\/tt> instead of +save+, so an",2],["update_counters","ActiveRecord::CounterCache","classes\/ActiveRecord\/CounterCache.html#M005294","(id, counters)","A generic \"counter updater\" implementation, intended primarily to be used by increment_counter and decrement_counter,",2],["update_counters","ActiveRecord::Locking::Optimistic::ClassMethods","classes\/ActiveRecord\/Locking\/Optimistic\/ClassMethods.html#M005292","(id, counters)","Make sure the lock version column gets updated when counters are updated. ",2],["update_details","ActionView::LookupContext::Details","classes\/ActionView\/LookupContext\/Details.html#M006347","(new_details)","Update the details keys by merging the given hash into the current details hash. If a block is given,",2],["update_page","ActionView::Helpers::PrototypeHelper","classes\/ActionView\/Helpers\/PrototypeHelper.html#M006469","(&block)","Yields a JavaScriptGenerator and returns the generated JavaScript code. Use this to update multiple elements",2],["update_page_tag","ActionView::Helpers::PrototypeHelper","classes\/ActionView\/Helpers\/PrototypeHelper.html#M006470","(html_options = {}, &block)","Works like update_page but wraps the generated JavaScript in a <tt>\\<script><\/tt> tag. Use this to include",2],["update_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes\/ActiveRecord\/ConnectionAdapters\/DatabaseStatements.html#M004614","(sql, name = nil)","Executes the update statement and returns the number of rows affected. ",2],["update_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes\/ActiveRecord\/ConnectionAdapters\/PostgreSQLAdapter.html#M004704","(sql, name = nil)","Executes an UPDATE query and returns the number of affected tuples. ",2],["updated","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes\/ActionView\/Helpers\/AtomFeedHelper\/AtomFeedBuilder.html#M006402","(date_or_time = nil)","Accepts a Date or Time object and inserts it in the proper format. If nil is passed, current time in",2],["updated_at","ActiveSupport::FileUpdateChecker","classes\/ActiveSupport\/FileUpdateChecker.html#M006854","()","",2],["url","ActionDispatch::Http::URL","classes\/ActionDispatch\/Http\/URL.html#M005896","()","Returns the complete \\URL used for this request. ",2],["url_field","ActionView::Helpers::FormHelper","classes\/ActionView\/Helpers\/FormHelper.html#M006509","(object_name, method, options = {})","Returns a text_field of type \"url\". ",2],["url_field_tag","ActionView::Helpers::FormTagHelper","classes\/ActionView\/Helpers\/FormTagHelper.html#M006420","(name, value = nil, options = {})","Creates a text field of type \"url\". ==== Options * Accepts the same options as text_field_tag. ",2],["url_for","ActionController::Metal","classes\/ActionController\/Metal.html#M005632","(string)","basic url_for that can be overridden for more robust functionality ",2],["url_for","ActionDispatch::Routing::UrlFor","classes\/ActionDispatch\/Routing\/UrlFor.html#M006158","(options = nil)","Generate a url based on the options provided, default_url_options and the routes defined in routes.rb.",2],["url_for","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006604","(options = {})","Returns the URL for the set of +options+ provided. This takes the same options as +url_for+ in Action",2],["url_options","ActionController::UrlFor","classes\/ActionController\/UrlFor.html#M005703","()","",2],["url_options","ActionDispatch::Integration::Runner","classes\/ActionDispatch\/Integration\/Runner.html#M006124","()","",2],["url_options","ActionDispatch::Routing::UrlFor","classes\/ActionDispatch\/Routing\/UrlFor.html#M006157","()","",2],["url_options","ActionView::Helpers::UrlHelper","classes\/ActionView\/Helpers\/UrlHelper.html#M006603","()","Need to map default url options to controller one. def default_url_options(*args) #:nodoc: controller.send(:default_url_options,",2],["us_zones","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006894","()","A convenience method for returning a collection of TimeZone objects for time zones in the USA. ",2],["use","ActionController::Metal","classes\/ActionController\/Metal.html#M005641","(*args, &block)","",2],["use","ActionDispatch::MiddlewareStack","classes\/ActionDispatch\/MiddlewareStack.html#M006004","(*args, &block)","",2],["use_checkout?","RailsEnvironment","classes\/RailsEnvironment.html#M003916","()","",2],["use_externals?","RailsEnvironment","classes\/RailsEnvironment.html#M003915","()","",2],["use_renderer","ActionController::Renderers::ClassMethods","classes\/ActionController\/Renderers\/ClassMethods.html#M005666","(*args)","Alias for #use_renderers",2],["use_renderers","ActionController::Renderers::ClassMethods","classes\/ActionController\/Renderers\/ClassMethods.html#M005665","(*args)","",2],["use_svn?","RailsEnvironment","classes\/RailsEnvironment.html#M003914","()","",2],["use_zone","Time","classes\/Time.html#M007277","(time_zone)","Allows override of <tt>Time.zone<\/tt> locally inside supplied block; resets <tt>Time.zone<\/tt> to existing",2],["usec","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006720","()","",2],["user","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005351","()","Gets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Base","classes\/ActiveResource\/Base.html#M005352","(user)","Sets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Connection","classes\/ActiveResource\/Connection.html#M005440","(user)","Sets the user for remote service. ",2],["user_agent=","ActionDispatch::TestRequest","classes\/ActionDispatch\/TestRequest.html#M006060","(user_agent)","",2],["user_name_and_password","ActionController::HttpAuthentication::Basic","classes\/ActionController\/HttpAuthentication\/Basic.html#M005711","(request)","",2],["uses_transaction","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M004907","(*methods)","",2],["uses_transaction?","ActiveRecord::TestFixtures::ClassMethods","classes\/ActiveRecord\/TestFixtures\/ClassMethods.html#M004908","(method)","",2],["using_limitable_reflections?","ActiveRecord::FinderMethods","classes\/ActiveRecord\/FinderMethods.html#M004819","(reflections)","",2],["utc","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006679","()","Returns a Time or DateTime instance that represents the time in UTC. ",2],["utc","DateTime","classes\/DateTime.html#M007119","()","Adjusts DateTime to UTC by adding its offset value; offset is set to 0 Example: DateTime.civil(2005,",2],["utc?","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006690","()","",2],["utc?","DateTime","classes\/DateTime.html#M007121","()","Returns true if offset == 0 ",2],["utc_offset","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006692","()","",2],["utc_offset","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006874","()","",2],["utc_offset","DateTime","classes\/DateTime.html#M007122","()","Returns the offset value in seconds ",2],["utc_time","Time","classes\/Time.html#M007284","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:utc<\/tt>. ",2],["utc_to_local","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006884","(time)","Adjust the given time to the simultaneous time in the time zone represented by +self+. Returns a Time.utc()",2],["valid?","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M007716","(context = nil)","Runs all the specified validations and returns true if no errors were added otherwise false. Context",2],["valid?","ActiveRecord::Validations","classes\/ActiveRecord\/Validations.html#M005211","(context = nil)","Runs all the specified validations and returns true if no errors were added otherwise false. ",2],["valid?","ActiveResource::Validations","classes\/ActiveResource\/Validations.html#M005434","()","Checks for errors on an object (i.e., is resource.errors empty?). Runs all the specified local validations",2],["valid_alter_table_options","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes\/ActiveRecord\/ConnectionAdapters\/SQLiteAdapter.html#M004438","( type, options)","See: http:\/\/www.sqlite.org\/lang_altertable.html SQLite has an additional restriction on the ALTER TABLE",2],["valid_app_const?","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004197","()","",2],["valid_scope_name?","ActiveRecord::NamedScope::ClassMethods","classes\/ActiveRecord\/NamedScope\/ClassMethods.html#M004824","(name)","",2],["validate","ActiveModel::EachValidator","classes\/ActiveModel\/EachValidator.html#M007626","(record)","Performs validation on the supplied record. By default this will call +validates_each+ to determine validity",2],["validate","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M007710","(*args, &block)","Adds a validation method or block to the class. This is useful when overriding the +validate+ instance",2],["validate","ActiveModel::Validations::PresenceValidator","classes\/ActiveModel\/Validations\/PresenceValidator.html#M007700","(record)","",2],["validate","ActiveModel::Validator","classes\/ActiveModel\/Validator.html#M007624","(record)","Override this method in subclasses with validation logic, adding errors to the records +errors+ array",2],["validate_digest_response","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005719","(request, realm, &password_procedure)","Returns false unless the request credentials response value matches the expected value. First try the",2],["validate_each","ActiveModel::EachValidator","classes\/ActiveModel\/EachValidator.html#M007627","(record, attribute, value)","Override this method in subclasses with the validation logic, adding errors to the records +errors+ array",2],["validate_each","ActiveModel::Validations::AcceptanceValidator","classes\/ActiveModel\/Validations\/AcceptanceValidator.html#M007706","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::ConfirmationValidator","classes\/ActiveModel\/Validations\/ConfirmationValidator.html#M007702","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::ExclusionValidator","classes\/ActiveModel\/Validations\/ExclusionValidator.html#M007678","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::FormatValidator","classes\/ActiveModel\/Validations\/FormatValidator.html#M007697","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::InclusionValidator","classes\/ActiveModel\/Validations\/InclusionValidator.html#M007683","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::InclusionValidator","classes\/ActiveModel\/Validations\/InclusionValidator.html#M007684","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::LengthValidator","classes\/ActiveModel\/Validations\/LengthValidator.html#M007688","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::NumericalityValidator","classes\/ActiveModel\/Validations\/NumericalityValidator.html#M007667","(record, attr_name, value)","",2],["validate_each","ActiveRecord::Validations::AssociatedValidator","classes\/ActiveRecord\/Validations\/AssociatedValidator.html#M005199","(record, attribute, value)","",2],["validate_each","ActiveRecord::Validations::UniquenessValidator","classes\/ActiveRecord\/Validations\/UniquenessValidator.html#M005203","(record, attribute, value)","",2],["validate_fallbacks","I18n::Railtie","classes\/I18n\/Railtie.html#M007411","(fallbacks)","",2],["validate_nonce","ActionController::HttpAuthentication::Digest","classes\/ActionController\/HttpAuthentication\/Digest.html#M005730","(secret_key, request, value, seconds_to_timeout=5*60)","Might want a shorter timeout depending on whether the request is a PUT or POST, and if client is browser",2],["validates","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M007680","(*attributes)","This method is a shortcut to all default validators and any custom validator classes ending in 'Validator'.",2],["validates_acceptance_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007708","(*attr_names)","Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar",2],["validates_associated","ActiveRecord::Validations::ClassMethods","classes\/ActiveRecord\/Validations\/ClassMethods.html#M005200","(*attr_names)","Validates whether the associated object or objects are all valid themselves. Works with any kind of association.",2],["validates_confirmation_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007704","(*attr_names)","Encapsulates the pattern of wanting to validate a password or email address field with a confirmation.",2],["validates_each","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M007709","(*attr_names, &block)","Validates each attribute against a block. class Person include ActiveModel::Validations attr_accessor",2],["validates_exclusion_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007679","(*attr_names)","Validates that the value of the specified attribute is not in a particular enumerable object. class Person",2],["validates_format_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007699","(*attr_names)","Validates whether the value of the specified attribute is of the correct form, going by the regular expression",2],["validates_inclusion_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007685","(*attr_names)","Validates whether the value of the specified attribute is available in a particular enumerable object.",2],["validates_length_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007689","(*attr_names)","Validates that the specified attribute matches the length restrictions supplied. Only one option can",2],["validates_numericality_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007671","(*attr_names)","Validates whether the value of the specified attribute is numeric by trying to convert it to a float",2],["validates_presence_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007701","(*attr_names)","Validates that the specified attributes are not blank (as defined by Object#blank?). Happens by default",2],["validates_size_of","ActiveModel::Validations::HelperMethods","classes\/ActiveModel\/Validations\/HelperMethods.html#M007690","(*attr_names)","Alias for #validates_length_of",2],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","classes\/ActiveRecord\/Validations\/ClassMethods.html#M005206","(*attr_names)","Validates whether the value of the specified attributes are unique across the system. Useful for making",2],["validates_with","ActiveModel::Validations","classes\/ActiveModel\/Validations.html#M007696","(*args, &block)","Passes the record off to the class or classes specified and allows them to add errors based on more complex",2],["validates_with","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M007695","(*args, &block)","Passes the record off to the class or classes specified and allows them to add errors based on more complex",2],["validators","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M007711","()","List all validators that are being used to validate the model using +validates_with+ method. ",2],["validators_on","ActiveModel::Validations::ClassMethods","classes\/ActiveModel\/Validations\/ClassMethods.html#M007712","(attribute)","List all validators that being used to validate a specific attribute. ",2],["value","ActionView::Helpers::InstanceTagMethods::ClassMethods","classes\/ActionView\/Helpers\/InstanceTagMethods\/ClassMethods.html#M006513","(object, method_name)","",2],["value","ActiveSupport::Cache::Entry","classes\/ActiveSupport\/Cache\/Entry.html#M007576","()","Get the value stored in the cache. ",2],["value_before_type_cast","ActionView::Helpers::InstanceTagMethods::ClassMethods","classes\/ActionView\/Helpers\/InstanceTagMethods\/ClassMethods.html#M006514","(object, method_name)","",2],["value_to_boolean","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004512","(value)","convert something to a boolean ",2],["value_to_decimal","ActiveRecord::ConnectionAdapters::Column","classes\/ActiveRecord\/ConnectionAdapters\/Column.html#M004513","(value)","convert something to a BigDecimal ",2],["values_at","ActiveSupport::HashWithIndifferentAccess","classes\/ActiveSupport\/HashWithIndifferentAccess.html#M007446","(*indices)","Returns an array of the values at the specified indices: hash = HashWithIndifferentAccess.new hash[:a]",2],["variable_name","ActionView::Template","classes\/ActionView\/Template.html#M006306","()","",2],["vendor","Rails::Generators::Actions","classes\/Rails\/Generators\/Actions.html#M004228","(filename, data=nil, &block)","Create a new file in the vendor\/ directory. Code can be specified in a block or a data string can be",2],["vendor_plugins","Rails::AppBuilder","classes\/Rails\/AppBuilder.html#M004163","()","",2],["verified_request?","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M005695","()","Returns true or false if a request is verified.  Checks: * is it a GET request?  Gets should be safe",2],["verify","ActiveSupport::MessageVerifier","classes\/ActiveSupport\/MessageVerifier.html#M006868","(signed_message)","",2],["verify!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes\/ActiveRecord\/ConnectionAdapters\/AbstractAdapter.html#M004764","(*ignored)","Checks whether the connection to the database is still active (i.e. not stale). This is done under the",2],["verify_authenticity_token","ActionController::RequestForgeryProtection","classes\/ActionController\/RequestForgeryProtection.html#M005693","()","The actual before_filter that is used.  Modify this to change how you handle unverified requests. ",2],["verify_request?","Mime::Type","classes\/Mime\/Type.html#M005845","()","Returns true if Action Pack should check requests using this Mime Type for possible request forgery.",2],["version","Rails","classes\/Rails.html#M003906","()","",2],["version_constraint_for_database_gem","Rails::Generators::AppGenerator","classes\/Rails\/Generators\/AppGenerator.html#M004201","()","",2],["video_path","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006567","(source)","Computes the path to a video asset in the public videos directory. Full paths from the document root",2],["video_tag","ActionView::Helpers::AssetTagHelper","classes\/ActionView\/Helpers\/AssetTagHelper.html#M006572","(sources, options = {})","Returns an html video tag for the +sources+. If +sources+ is a string, a single video tag will be returned.",2],["view_context","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M005510","()","An instance of a view class. The default view class is ActionView::Base The view class must have the",2],["view_context","ActionView::Base","classes\/ActionView\/Base.html#M006325","()","TODO: HACK FOR RJS ",2],["view_context_class","AbstractController::Rendering","classes\/AbstractController\/Rendering.html#M005508","()","",2],["view_context_class","AbstractController::Rendering::ClassMethods","classes\/AbstractController\/Rendering\/ClassMethods.html#M005507","()","",2],["view_path","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004324","()","",2],["view_path=","Rails::Configuration::Deprecated","classes\/Rails\/Configuration\/Deprecated.html#M004323","(value)","",2],["view_paths","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M005526","()","A list of all of the default view paths for this controller. ",2],["view_paths=","AbstractController::ViewPaths::ClassMethods","classes\/AbstractController\/ViewPaths\/ClassMethods.html#M005527","(paths)","Set the view paths. ==== Parameters * <tt>paths<\/tt> - If a ViewPathSet is provided, use that; otherwise,",2],["view_paths=","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M006322","(paths)","Whenever setting view paths, makes a copy so we can manipulate then in instance objects as we wish. ",2],["visible_action?","ActionController::HideActions::ClassMethods","classes\/ActionController\/HideActions\/ClassMethods.html#M005782","(action_name)","",2],["visual_effect","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes\/ActionView\/Helpers\/PrototypeHelper\/JavaScriptGenerator\/GeneratorMethods.html#M006375","(name, id = nil, options = {})","Starts a script.aculo.us visual effect. See ActionView::Helpers::ScriptaculousHelper for more information.",2],["visual_effect","ActionView::Helpers::ScriptaculousHelper","classes\/ActionView\/Helpers\/ScriptaculousHelper.html#M006349","(name, element_id = false, js_options = {})","Returns a JavaScript snippet to be used on the Ajax callbacks for starting visual effects. If no +element_id+",2],["wait","ActiveSupport::LogSubscriber::TestHelper","classes\/ActiveSupport\/LogSubscriber\/TestHelper.html#M006851","()","Wait notifications to be published. ",2],["wait","ActiveSupport::Notifications::Fanout","classes\/ActiveSupport\/Notifications\/Fanout.html#M006909","()","This is a sync queue, so there is not waiting. ",2],["wants?","ActiveSupport::Multibyte::Chars","classes\/ActiveSupport\/Multibyte\/Chars.html#M006760","(string)","Returns +true+ if the Chars class can and should act as a proxy for the string _string_. Returns +false+",2],["warn!","ActiveModel::MassAssignmentSecurity::Sanitizer","classes\/ActiveModel\/MassAssignmentSecurity\/Sanitizer.html#M007721","(attrs)","",2],["watch_namespaces","ActiveSupport::Dependencies::WatchStack","classes\/ActiveSupport\/Dependencies\/WatchStack.html#M007376","(namespaces)","Add a set of modules to the watch stack, remembering the initial constants ",2],["where","ActiveRecord::QueryMethods","classes\/ActiveRecord\/QueryMethods.html#M004838","(opts, *rest)","",2],["where_values_hash","ActiveRecord::Relation","classes\/ActiveRecord\/Relation.html#M005004","()","",2],["with_backend","ActiveSupport::JSON","classes\/ActiveSupport\/JSON.html#M006989","(name)","",2],["with_backend","ActiveSupport::XmlMini","classes\/ActiveSupport\/XmlMini.html#M006897","(name)","",2],["with_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes\/ActiveRecord\/ConnectionAdapters\/ConnectionPool.html#M004638","()","If a connection already exists yield it to the block.  If no connection exists checkout a connection,",2],["with_exclusive_scope","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006213","()","",2],["with_exclusive_scope","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005079","(method_scoping = {}, &block)","Works like with_scope, but discards any nested properties. ",2],["with_fallbacks","ActionView::LookupContext::ViewPaths","classes\/ActionView\/LookupContext\/ViewPaths.html#M006335","()","Add fallbacks to the view paths. Useful in cases you are rendering a :file. ",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007515","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007517","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes\/ActiveSupport\/Testing\/Performance\/Metrics\/Base.html#M007516","()","",2],["with_layout_format","ActionView::LookupContext::Details","classes\/ActionView\/LookupContext\/Details.html#M006346","()","A method which only uses the first format in the formats array for layout lookup. This method plays straight",2],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache.html#M006922","()","Use a local cache for the duration of block. ",2],["with_options","Object","classes\/Object.html#M007364","(options)","An elegant way to factor duplication out of options passed to a series of method calls. Each method called",2],["with_output_file","ActiveSupport::Testing::Performance::Benchmarker","classes\/ActiveSupport\/Testing\/Performance\/Benchmarker.html#M007501","()","",2],["with_routing","ActionDispatch::Assertions::RoutingAssertions","classes\/ActionDispatch\/Assertions\/RoutingAssertions.html#M006068","()","A helper to make it easier to test different route configurations. This method temporarily replaces @routes",2],["with_scope","ActiveRecord::Base","classes\/ActiveRecord\/Base.html#M005078","(method_scoping = {}, action = :merge, &block)","with_scope lets you apply options to inner block incrementally. It takes a hash and the keys must be",2],["with_scope_level","ActionDispatch::Routing::Mapper::Resources","classes\/ActionDispatch\/Routing\/Mapper\/Resources.html#M006214","(kind, resource = parent_resource)","",2],["with_transaction_returning_status","ActiveRecord::Transactions","classes\/ActiveRecord\/Transactions.html#M004794","()","Executes +method+ within a transaction and captures its return value as a status flag. If the status",2],["with_warnings","Kernel","classes\/Kernel.html#M007136","(flag)","Sets $VERBOSE for the duration of the block and back to its original value afterwards. ",2],["without_modules","ActionController::Base","classes\/ActionController\/Base.html#M005645","(*modules)","",2],["word_wrap","ActionView::Helpers::TextHelper","classes\/ActionView\/Helpers\/TextHelper.html#M006385","(text, *args)","Wraps the +text+ into lines no longer than +line_width+ width. This method breaks on the first whitespace",2],["write","ActionDispatch::Response","classes\/ActionDispatch\/Response.html#M005829","(str)","",2],["write","ActiveRecord::Migration","classes\/ActiveRecord\/Migration.html#M004946","(text=\"\")","",2],["write","ActiveSupport::Cache::Store","classes\/ActiveSupport\/Cache\/Store.html#M007556","(name, value, options = nil)","Writes the value to the cache, with the key. Options are passed to the underlying cache implementation.",2],["write_attribute","ActiveRecord::AttributeMethods::Write","classes\/ActiveRecord\/AttributeMethods\/Write.html#M005247","(attr_name, value)","Updates the attribute identified by <tt>attr_name<\/tt> with the specified +value+. Empty strings for",2],["write_entry","ActiveSupport::Cache::FileStore","classes\/ActiveSupport\/Cache\/FileStore.html#M006966","(key, entry, options)","",2],["write_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes\/ActiveSupport\/Cache\/Strategy\/LocalCache\/LocalStore.html#M006920","(key, value, options)","",2],["write_fragment","ActionController::Caching::Fragments","classes\/ActionController\/Caching\/Fragments.html#M005572","(key, content, options = nil)","Writes <tt>content<\/tt> to the location signified by <tt>key<\/tt> (see <tt>expire_fragment<\/tt> for acceptable",2],["xhr","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005618","(request_method, action, parameters = nil, session = nil, flash = nil)","Alias for #xml_http_request",2],["xhr","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006103","(request_method, path, parameters = nil, headers = nil)","Alias for #xml_http_request",2],["xhr?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005865","()","Alias for #xml_http_request?",2],["xml","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004670","(*args)","",2],["xml_column_fallback","ActiveRecord::ConnectionAdapters::TableDefinition","classes\/ActiveRecord\/ConnectionAdapters\/TableDefinition.html#M004527","(*args)","",2],["xml_http_request","ActionController::TestCase::Behavior","classes\/ActionController\/TestCase\/Behavior.html#M005617","(request_method, action, parameters = nil, session = nil, flash = nil)","",2],["xml_http_request","ActionDispatch::Integration::RequestHelpers","classes\/ActionDispatch\/Integration\/RequestHelpers.html#M006102","(request_method, path, parameters = nil, headers = nil)","Performs an XMLHttpRequest request with the given parameters, mirroring a request from the Prototype",2],["xml_http_request?","ActionDispatch::Request","classes\/ActionDispatch\/Request.html#M005864","()","Returns true if the request's \"X-Requested-With\" header contains \"XMLHttpRequest\". (The Prototype Javascript",2],["xmlschema","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006698","(fraction_digits = 0)","",2],["xmlschema","DateTime","classes\/DateTime.html#M007098","()","Converts datetime to an appropriate format for use in XML ",2],["year","Integer","classes\/Integer.html#M007150","()","Alias for #years",2],["years","Integer","classes\/Integer.html#M007149","()","",2],["years_ago","Time","classes\/Time.html#M007305","(years)","Returns a new Time representing the time a number of specified years ago ",2],["years_since","Time","classes\/Time.html#M007306","(years)","Returns a new Time representing the time a number of specified years in the future ",2],["yesterday","Time","classes\/Time.html#M007334","()","Convenience method which returns a new Time representing the time 1 day ago ",2],["zone","ActiveSupport::TimeWithZone","classes\/ActiveSupport\/TimeWithZone.html#M006696","()","Time uses +zone+ to display the time zone abbreviation, so we're duck-typing it. ",2],["zone","Time","classes\/Time.html#M007275","()","Returns the TimeZone for the current request, if this has been set (via Time.zone=). If <tt>Time.zone<\/tt>",2],["zone=","Time","classes\/Time.html#M007276","(time_zone)","Sets <tt>Time.zone<\/tt> to a TimeZone object for the current request\/thread. This method accepts any",2],["zones_map","ActiveSupport::TimeZone","classes\/ActiveSupport\/TimeZone.html#M006892","()","",2],["README.rdoc","files\/README_rdoc.html","files\/README_rdoc.html","","== Welcome to \\Rails  \\Rails is a web-application framework that includes everything needed to create",3],["README.rdoc","files\/README_rdoc.html","files\/README_rdoc.html","","== Welcome to \\Rails  \\Rails is a web-application framework that includes everything needed to create",3],["CHANGELOG","files\/actionmailer\/CHANGELOG.html","files\/actionmailer\/CHANGELOG.html","","*Rails 3.0.8 (unreleased)*  * Mail dependency increased to 2.2.19  *Rails 3.0.7 (April 18, 2011)*  *",3],["README.rdoc","files\/actionmailer\/README_rdoc.html","files\/actionmailer\/README_rdoc.html","","= Action Mailer -- Easy email delivery and testing  Action Mailer is a framework for designing email-service",3],["base.rb","files\/actionmailer\/lib\/action_mailer\/base_rb.html","files\/actionmailer\/lib\/action_mailer\/base_rb.html","","",3],["CHANGELOG","files\/actionpack\/CHANGELOG.html","files\/actionpack\/CHANGELOG.html","","*Rails 3.0.8 (unreleased)*  * Fixed github issue #342 with asset paths and relative roots.  *Rails 3.0.7",3],["README.rdoc","files\/actionpack\/README_rdoc.html","files\/actionpack\/README_rdoc.html","","= Action Pack -- From request to response  Action Pack is a framework for handling and responding to",3],["asset_paths.rb","files\/actionpack\/lib\/abstract_controller\/asset_paths_rb.html","files\/actionpack\/lib\/abstract_controller\/asset_paths_rb.html","","",3],["base.rb","files\/actionpack\/lib\/abstract_controller\/base_rb.html","files\/actionpack\/lib\/abstract_controller\/base_rb.html","","",3],["callbacks.rb","files\/actionpack\/lib\/abstract_controller\/callbacks_rb.html","files\/actionpack\/lib\/abstract_controller\/callbacks_rb.html","","",3],["collector.rb","files\/actionpack\/lib\/abstract_controller\/collector_rb.html","files\/actionpack\/lib\/abstract_controller\/collector_rb.html","","",3],["helpers.rb","files\/actionpack\/lib\/abstract_controller\/helpers_rb.html","files\/actionpack\/lib\/abstract_controller\/helpers_rb.html","","",3],["layouts.rb","files\/actionpack\/lib\/abstract_controller\/layouts_rb.html","files\/actionpack\/lib\/abstract_controller\/layouts_rb.html","","",3],["logger.rb","files\/actionpack\/lib\/abstract_controller\/logger_rb.html","files\/actionpack\/lib\/abstract_controller\/logger_rb.html","","",3],["rendering.rb","files\/actionpack\/lib\/abstract_controller\/rendering_rb.html","files\/actionpack\/lib\/abstract_controller\/rendering_rb.html","","",3],["translation.rb","files\/actionpack\/lib\/abstract_controller\/translation_rb.html","files\/actionpack\/lib\/abstract_controller\/translation_rb.html","","",3],["view_paths.rb","files\/actionpack\/lib\/abstract_controller\/view_paths_rb.html","files\/actionpack\/lib\/abstract_controller\/view_paths_rb.html","","",3],["base.rb","files\/actionpack\/lib\/action_controller\/base_rb.html","files\/actionpack\/lib\/action_controller\/base_rb.html","","",3],["caching.rb","files\/actionpack\/lib\/action_controller\/caching_rb.html","files\/actionpack\/lib\/action_controller\/caching_rb.html","","",3],["actions.rb","files\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","files\/actionpack\/lib\/action_controller\/caching\/actions_rb.html","","",3],["fragments.rb","files\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","files\/actionpack\/lib\/action_controller\/caching\/fragments_rb.html","","",3],["pages.rb","files\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","files\/actionpack\/lib\/action_controller\/caching\/pages_rb.html","","",3],["sweeping.rb","files\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","files\/actionpack\/lib\/action_controller\/caching\/sweeping_rb.html","","",3],["deprecated.rb","files\/actionpack\/lib\/action_controller\/deprecated_rb.html","files\/actionpack\/lib\/action_controller\/deprecated_rb.html","","",3],["base.rb","files\/actionpack\/lib\/action_controller\/deprecated\/base_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/base_rb.html","","",3],["dispatcher.rb","files\/actionpack\/lib\/action_controller\/deprecated\/dispatcher_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/dispatcher_rb.html","","",3],["integration_test.rb","files\/actionpack\/lib\/action_controller\/deprecated\/integration_test_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/integration_test_rb.html","","",3],["performance_test.rb","files\/actionpack\/lib\/action_controller\/deprecated\/performance_test_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/performance_test_rb.html","","",3],["url_writer.rb","files\/actionpack\/lib\/action_controller\/deprecated\/url_writer_rb.html","files\/actionpack\/lib\/action_controller\/deprecated\/url_writer_rb.html","","",3],["log_subscriber.rb","files\/actionpack\/lib\/action_controller\/log_subscriber_rb.html","files\/actionpack\/lib\/action_controller\/log_subscriber_rb.html","","",3],["metal.rb","files\/actionpack\/lib\/action_controller\/metal_rb.html","files\/actionpack\/lib\/action_controller\/metal_rb.html","","",3],["compatibility.rb","files\/actionpack\/lib\/action_controller\/metal\/compatibility_rb.html","files\/actionpack\/lib\/action_controller\/metal\/compatibility_rb.html","","",3],["conditional_get.rb","files\/actionpack\/lib\/action_controller\/metal\/conditional_get_rb.html","files\/actionpack\/lib\/action_controller\/metal\/conditional_get_rb.html","","",3],["cookies.rb","files\/actionpack\/lib\/action_controller\/metal\/cookies_rb.html","files\/actionpack\/lib\/action_controller\/metal\/cookies_rb.html","","",3],["exceptions.rb","files\/actionpack\/lib\/action_controller\/metal\/exceptions_rb.html","files\/actionpack\/lib\/action_controller\/metal\/exceptions_rb.html","","",3],["flash.rb","files\/actionpack\/lib\/action_controller\/metal\/flash_rb.html","files\/actionpack\/lib\/action_controller\/metal\/flash_rb.html","","",3],["head.rb","files\/actionpack\/lib\/action_controller\/metal\/head_rb.html","files\/actionpack\/lib\/action_controller\/metal\/head_rb.html","","",3],["helpers.rb","files\/actionpack\/lib\/action_controller\/metal\/helpers_rb.html","files\/actionpack\/lib\/action_controller\/metal\/helpers_rb.html","","",3],["hide_actions.rb","files\/actionpack\/lib\/action_controller\/metal\/hide_actions_rb.html","files\/actionpack\/lib\/action_controller\/metal\/hide_actions_rb.html","","",3],["http_authentication.rb","files\/actionpack\/lib\/action_controller\/metal\/http_authentication_rb.html","files\/actionpack\/lib\/action_controller\/metal\/http_authentication_rb.html","","",3],["implicit_render.rb","files\/actionpack\/lib\/action_controller\/metal\/implicit_render_rb.html","files\/actionpack\/lib\/action_controller\/metal\/implicit_render_rb.html","","",3],["instrumentation.rb","files\/actionpack\/lib\/action_controller\/metal\/instrumentation_rb.html","files\/actionpack\/lib\/action_controller\/metal\/instrumentation_rb.html","","",3],["mime_responds.rb","files\/actionpack\/lib\/action_controller\/metal\/mime_responds_rb.html","files\/actionpack\/lib\/action_controller\/metal\/mime_responds_rb.html","","",3],["rack_delegation.rb","files\/actionpack\/lib\/action_controller\/metal\/rack_delegation_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rack_delegation_rb.html","","",3],["redirecting.rb","files\/actionpack\/lib\/action_controller\/metal\/redirecting_rb.html","files\/actionpack\/lib\/action_controller\/metal\/redirecting_rb.html","","",3],["renderers.rb","files\/actionpack\/lib\/action_controller\/metal\/renderers_rb.html","files\/actionpack\/lib\/action_controller\/metal\/renderers_rb.html","","",3],["rendering.rb","files\/actionpack\/lib\/action_controller\/metal\/rendering_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rendering_rb.html","","",3],["request_forgery_protection.rb","files\/actionpack\/lib\/action_controller\/metal\/request_forgery_protection_rb.html","files\/actionpack\/lib\/action_controller\/metal\/request_forgery_protection_rb.html","","",3],["rescue.rb","files\/actionpack\/lib\/action_controller\/metal\/rescue_rb.html","files\/actionpack\/lib\/action_controller\/metal\/rescue_rb.html","","",3],["responder.rb","files\/actionpack\/lib\/action_controller\/metal\/responder_rb.html","files\/actionpack\/lib\/action_controller\/metal\/responder_rb.html","","",3],["session_management.rb","files\/actionpack\/lib\/action_controller\/metal\/session_management_rb.html","files\/actionpack\/lib\/action_controller\/metal\/session_management_rb.html","","",3],["streaming.rb","files\/actionpack\/lib\/action_controller\/metal\/streaming_rb.html","files\/actionpack\/lib\/action_controller\/metal\/streaming_rb.html","","",3],["testing.rb","files\/actionpack\/lib\/action_controller\/metal\/testing_rb.html","files\/actionpack\/lib\/action_controller\/metal\/testing_rb.html","","",3],["url_for.rb","files\/actionpack\/lib\/action_controller\/metal\/url_for_rb.html","files\/actionpack\/lib\/action_controller\/metal\/url_for_rb.html","","",3],["middleware.rb","files\/actionpack\/lib\/action_controller\/middleware_rb.html","files\/actionpack\/lib\/action_controller\/middleware_rb.html","","",3],["railtie.rb","files\/actionpack\/lib\/action_controller\/railtie_rb.html","files\/actionpack\/lib\/action_controller\/railtie_rb.html","","",3],["record_identifier.rb","files\/actionpack\/lib\/action_controller\/record_identifier_rb.html","files\/actionpack\/lib\/action_controller\/record_identifier_rb.html","","",3],["test_case.rb","files\/actionpack\/lib\/action_controller\/test_case_rb.html","files\/actionpack\/lib\/action_controller\/test_case_rb.html","","",3],["cache.rb","files\/actionpack\/lib\/action_dispatch\/http\/cache_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/cache_rb.html","","",3],["filter_parameters.rb","files\/actionpack\/lib\/action_dispatch\/http\/filter_parameters_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/filter_parameters_rb.html","","",3],["headers.rb","files\/actionpack\/lib\/action_dispatch\/http\/headers_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/headers_rb.html","","",3],["mime_negotiation.rb","files\/actionpack\/lib\/action_dispatch\/http\/mime_negotiation_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_negotiation_rb.html","","",3],["mime_type.rb","files\/actionpack\/lib\/action_dispatch\/http\/mime_type_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_type_rb.html","","",3],["mime_types.rb","files\/actionpack\/lib\/action_dispatch\/http\/mime_types_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/mime_types_rb.html","","Build list of Mime types for HTTP responses http:\/\/www.iana.org\/assignments\/media-types\/ ",3],["parameter_filter.rb","files\/actionpack\/lib\/action_dispatch\/http\/parameter_filter_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/parameter_filter_rb.html","","",3],["parameters.rb","files\/actionpack\/lib\/action_dispatch\/http\/parameters_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/parameters_rb.html","","",3],["request.rb","files\/actionpack\/lib\/action_dispatch\/http\/request_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/request_rb.html","","",3],["response.rb","files\/actionpack\/lib\/action_dispatch\/http\/response_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/response_rb.html","","",3],["upload.rb","files\/actionpack\/lib\/action_dispatch\/http\/upload_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/upload_rb.html","","",3],["url.rb","files\/actionpack\/lib\/action_dispatch\/http\/url_rb.html","files\/actionpack\/lib\/action_dispatch\/http\/url_rb.html","","",3],["best_standards_support.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/best_standards_support_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/best_standards_support_rb.html","","",3],["callbacks.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/callbacks_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/callbacks_rb.html","","",3],["cookies.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/cookies_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/cookies_rb.html","","",3],["flash.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/flash_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/flash_rb.html","","",3],["head.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/head_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/head_rb.html","","",3],["params_parser.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/params_parser_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/params_parser_rb.html","","",3],["remote_ip.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/remote_ip_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/remote_ip_rb.html","","",3],["rescue.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/rescue_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/rescue_rb.html","","",3],["abstract_store.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/abstract_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/abstract_store_rb.html","","",3],["cookie_store.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cookie_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/cookie_store_rb.html","","",3],["mem_cache_store.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/mem_cache_store_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/session\/mem_cache_store_rb.html","","",3],["show_exceptions.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/show_exceptions_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/show_exceptions_rb.html","","",3],["stack.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/stack_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/stack_rb.html","","",3],["static.rb","files\/actionpack\/lib\/action_dispatch\/middleware\/static_rb.html","files\/actionpack\/lib\/action_dispatch\/middleware\/static_rb.html","","",3],["railtie.rb","files\/actionpack\/lib\/action_dispatch\/railtie_rb.html","files\/actionpack\/lib\/action_dispatch\/railtie_rb.html","","",3],["routing.rb","files\/actionpack\/lib\/action_dispatch\/routing_rb.html","files\/actionpack\/lib\/action_dispatch\/routing_rb.html","","",3],["deprecated_mapper.rb","files\/actionpack\/lib\/action_dispatch\/routing\/deprecated_mapper_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/deprecated_mapper_rb.html","","",3],["mapper.rb","files\/actionpack\/lib\/action_dispatch\/routing\/mapper_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/mapper_rb.html","","",3],["polymorphic_routes.rb","files\/actionpack\/lib\/action_dispatch\/routing\/polymorphic_routes_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/polymorphic_routes_rb.html","","",3],["route.rb","files\/actionpack\/lib\/action_dispatch\/routing\/route_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/route_rb.html","","",3],["route_set.rb","files\/actionpack\/lib\/action_dispatch\/routing\/route_set_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/route_set_rb.html","","",3],["url_for.rb","files\/actionpack\/lib\/action_dispatch\/routing\/url_for_rb.html","files\/actionpack\/lib\/action_dispatch\/routing\/url_for_rb.html","","",3],["assertions.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions_rb.html","","",3],["dom.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/dom_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/dom_rb.html","","",3],["response.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/response_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/response_rb.html","","",3],["routing.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/routing_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/routing_rb.html","","",3],["selector.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/selector_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/selector_rb.html","","",3],["tag.rb","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/tag_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/assertions\/tag_rb.html","","",3],["integration.rb","files\/actionpack\/lib\/action_dispatch\/testing\/integration_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/integration_rb.html","","",3],["performance_test.rb","files\/actionpack\/lib\/action_dispatch\/testing\/performance_test_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/performance_test_rb.html","","",3],["test_process.rb","files\/actionpack\/lib\/action_dispatch\/testing\/test_process_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_process_rb.html","","",3],["test_request.rb","files\/actionpack\/lib\/action_dispatch\/testing\/test_request_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_request_rb.html","","",3],["test_response.rb","files\/actionpack\/lib\/action_dispatch\/testing\/test_response_rb.html","files\/actionpack\/lib\/action_dispatch\/testing\/test_response_rb.html","","",3],["base.rb","files\/actionpack\/lib\/action_view\/base_rb.html","files\/actionpack\/lib\/action_view\/base_rb.html","","",3],["context.rb","files\/actionpack\/lib\/action_view\/context_rb.html","files\/actionpack\/lib\/action_view\/context_rb.html","","",3],["helpers.rb","files\/actionpack\/lib\/action_view\/helpers_rb.html","files\/actionpack\/lib\/action_view\/helpers_rb.html","","",3],["active_model_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/active_model_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/active_model_helper_rb.html","","",3],["asset_tag_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/asset_tag_helper_rb.html","","",3],["atom_feed_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/atom_feed_helper_rb.html","","",3],["cache_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/cache_helper_rb.html","","",3],["capture_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/capture_helper_rb.html","","",3],["csrf_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/csrf_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/csrf_helper_rb.html","","",3],["date_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/date_helper_rb.html","","",3],["debug_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/debug_helper_rb.html","","",3],["form_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_helper_rb.html","","",3],["form_options_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_options_helper_rb.html","","",3],["form_tag_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/form_tag_helper_rb.html","","",3],["javascript_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/javascript_helper_rb.html","","",3],["number_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/number_helper_rb.html","","",3],["prototype_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/prototype_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/prototype_helper_rb.html","","",3],["raw_output_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/raw_output_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/raw_output_helper_rb.html","","",3],["record_tag_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/record_tag_helper_rb.html","","",3],["sanitize_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/sanitize_helper_rb.html","","",3],["scriptaculous_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/scriptaculous_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/scriptaculous_helper_rb.html","","",3],["tag_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/tag_helper_rb.html","","",3],["text_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/text_helper_rb.html","","",3],["translation_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/translation_helper_rb.html","","",3],["url_helper.rb","files\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","files\/actionpack\/lib\/action_view\/helpers\/url_helper_rb.html","","",3],["log_subscriber.rb","files\/actionpack\/lib\/action_view\/log_subscriber_rb.html","files\/actionpack\/lib\/action_view\/log_subscriber_rb.html","","",3],["lookup_context.rb","files\/actionpack\/lib\/action_view\/lookup_context_rb.html","files\/actionpack\/lib\/action_view\/lookup_context_rb.html","","",3],["paths.rb","files\/actionpack\/lib\/action_view\/paths_rb.html","files\/actionpack\/lib\/action_view\/paths_rb.html","","",3],["railtie.rb","files\/actionpack\/lib\/action_view\/railtie_rb.html","files\/actionpack\/lib\/action_view\/railtie_rb.html","","",3],["layouts.rb","files\/actionpack\/lib\/action_view\/render\/layouts_rb.html","files\/actionpack\/lib\/action_view\/render\/layouts_rb.html","","",3],["partials.rb","files\/actionpack\/lib\/action_view\/render\/partials_rb.html","files\/actionpack\/lib\/action_view\/render\/partials_rb.html","","",3],["rendering.rb","files\/actionpack\/lib\/action_view\/render\/rendering_rb.html","files\/actionpack\/lib\/action_view\/render\/rendering_rb.html","","",3],["template.rb","files\/actionpack\/lib\/action_view\/template_rb.html","files\/actionpack\/lib\/action_view\/template_rb.html","","",3],["error.rb","files\/actionpack\/lib\/action_view\/template\/error_rb.html","files\/actionpack\/lib\/action_view\/template\/error_rb.html","","",3],["handler.rb","files\/actionpack\/lib\/action_view\/template\/handler_rb.html","files\/actionpack\/lib\/action_view\/template\/handler_rb.html","","",3],["handlers.rb","files\/actionpack\/lib\/action_view\/template\/handlers_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers_rb.html","","",3],["builder.rb","files\/actionpack\/lib\/action_view\/template\/handlers\/builder_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/builder_rb.html","","",3],["erb.rb","files\/actionpack\/lib\/action_view\/template\/handlers\/erb_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/erb_rb.html","","",3],["rjs.rb","files\/actionpack\/lib\/action_view\/template\/handlers\/rjs_rb.html","files\/actionpack\/lib\/action_view\/template\/handlers\/rjs_rb.html","","",3],["resolver.rb","files\/actionpack\/lib\/action_view\/template\/resolver_rb.html","files\/actionpack\/lib\/action_view\/template\/resolver_rb.html","","",3],["text.rb","files\/actionpack\/lib\/action_view\/template\/text_rb.html","files\/actionpack\/lib\/action_view\/template\/text_rb.html","","",3],["test_case.rb","files\/actionpack\/lib\/action_view\/test_case_rb.html","files\/actionpack\/lib\/action_view\/test_case_rb.html","","",3],["resolvers.rb","files\/actionpack\/lib\/action_view\/testing\/resolvers_rb.html","files\/actionpack\/lib\/action_view\/testing\/resolvers_rb.html","","",3],["CHANGELOG","files\/activemodel\/CHANGELOG.html","files\/activemodel\/CHANGELOG.html","","*Rails 3.0.7 (April 18, 2011)*  *No changes.   *Rails 3.0.6 (April 5, 2011)  * Fix when database column",3],["README.rdoc","files\/activemodel\/README_rdoc.html","files\/activemodel\/README_rdoc.html","","= Active Model -- model interfaces for Rails  Active Model provides a known set of interfaces for usage",3],["attribute_methods.rb","files\/activemodel\/lib\/active_model\/attribute_methods_rb.html","files\/activemodel\/lib\/active_model\/attribute_methods_rb.html","","",3],["callbacks.rb","files\/activemodel\/lib\/active_model\/callbacks_rb.html","files\/activemodel\/lib\/active_model\/callbacks_rb.html","","",3],["conversion.rb","files\/activemodel\/lib\/active_model\/conversion_rb.html","files\/activemodel\/lib\/active_model\/conversion_rb.html","","",3],["deprecated_error_methods.rb","files\/activemodel\/lib\/active_model\/deprecated_error_methods_rb.html","files\/activemodel\/lib\/active_model\/deprecated_error_methods_rb.html","","",3],["dirty.rb","files\/activemodel\/lib\/active_model\/dirty_rb.html","files\/activemodel\/lib\/active_model\/dirty_rb.html","","",3],["errors.rb","files\/activemodel\/lib\/active_model\/errors_rb.html","files\/activemodel\/lib\/active_model\/errors_rb.html","","",3],["lint.rb","files\/activemodel\/lib\/active_model\/lint_rb.html","files\/activemodel\/lib\/active_model\/lint_rb.html","","",3],["mass_assignment_security.rb","files\/activemodel\/lib\/active_model\/mass_assignment_security_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security_rb.html","","",3],["permission_set.rb","files\/activemodel\/lib\/active_model\/mass_assignment_security\/permission_set_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security\/permission_set_rb.html","","",3],["sanitizer.rb","files\/activemodel\/lib\/active_model\/mass_assignment_security\/sanitizer_rb.html","files\/activemodel\/lib\/active_model\/mass_assignment_security\/sanitizer_rb.html","","",3],["naming.rb","files\/activemodel\/lib\/active_model\/naming_rb.html","files\/activemodel\/lib\/active_model\/naming_rb.html","","",3],["observing.rb","files\/activemodel\/lib\/active_model\/observing_rb.html","files\/activemodel\/lib\/active_model\/observing_rb.html","","",3],["railtie.rb","files\/activemodel\/lib\/active_model\/railtie_rb.html","files\/activemodel\/lib\/active_model\/railtie_rb.html","","",3],["serialization.rb","files\/activemodel\/lib\/active_model\/serialization_rb.html","files\/activemodel\/lib\/active_model\/serialization_rb.html","","",3],["json.rb","files\/activemodel\/lib\/active_model\/serializers\/json_rb.html","files\/activemodel\/lib\/active_model\/serializers\/json_rb.html","","",3],["xml.rb","files\/activemodel\/lib\/active_model\/serializers\/xml_rb.html","files\/activemodel\/lib\/active_model\/serializers\/xml_rb.html","","",3],["test_case.rb","files\/activemodel\/lib\/active_model\/test_case_rb.html","files\/activemodel\/lib\/active_model\/test_case_rb.html","","",3],["translation.rb","files\/activemodel\/lib\/active_model\/translation_rb.html","files\/activemodel\/lib\/active_model\/translation_rb.html","","",3],["validations.rb","files\/activemodel\/lib\/active_model\/validations_rb.html","files\/activemodel\/lib\/active_model\/validations_rb.html","","",3],["acceptance.rb","files\/activemodel\/lib\/active_model\/validations\/acceptance_rb.html","files\/activemodel\/lib\/active_model\/validations\/acceptance_rb.html","","",3],["callbacks.rb","files\/activemodel\/lib\/active_model\/validations\/callbacks_rb.html","files\/activemodel\/lib\/active_model\/validations\/callbacks_rb.html","","",3],["confirmation.rb","files\/activemodel\/lib\/active_model\/validations\/confirmation_rb.html","files\/activemodel\/lib\/active_model\/validations\/confirmation_rb.html","","",3],["exclusion.rb","files\/activemodel\/lib\/active_model\/validations\/exclusion_rb.html","files\/activemodel\/lib\/active_model\/validations\/exclusion_rb.html","","",3],["format.rb","files\/activemodel\/lib\/active_model\/validations\/format_rb.html","files\/activemodel\/lib\/active_model\/validations\/format_rb.html","","",3],["inclusion.rb","files\/activemodel\/lib\/active_model\/validations\/inclusion_rb.html","files\/activemodel\/lib\/active_model\/validations\/inclusion_rb.html","","",3],["length.rb","files\/activemodel\/lib\/active_model\/validations\/length_rb.html","files\/activemodel\/lib\/active_model\/validations\/length_rb.html","","",3],["numericality.rb","files\/activemodel\/lib\/active_model\/validations\/numericality_rb.html","files\/activemodel\/lib\/active_model\/validations\/numericality_rb.html","","",3],["presence.rb","files\/activemodel\/lib\/active_model\/validations\/presence_rb.html","files\/activemodel\/lib\/active_model\/validations\/presence_rb.html","","",3],["validates.rb","files\/activemodel\/lib\/active_model\/validations\/validates_rb.html","files\/activemodel\/lib\/active_model\/validations\/validates_rb.html","","",3],["with.rb","files\/activemodel\/lib\/active_model\/validations\/with_rb.html","files\/activemodel\/lib\/active_model\/validations\/with_rb.html","","",3],["validator.rb","files\/activemodel\/lib\/active_model\/validator_rb.html","files\/activemodel\/lib\/active_model\/validator_rb.html","","",3],["version.rb","files\/activemodel\/lib\/active_model\/version_rb.html","files\/activemodel\/lib\/active_model\/version_rb.html","","",3],["CHANGELOG","files\/activerecord\/CHANGELOG.html","files\/activerecord\/CHANGELOG.html","","*Rails 3.0.8 (unreleased)*  * Fix various problems with using :primary_key and :foreign_key options in",3],["README.rdoc","files\/activerecord\/README_rdoc.html","files\/activerecord\/README_rdoc.html","","= Active Record -- Object-relational mapping put on rails  Active Record connects classes to relational",3],["aggregations.rb","files\/activerecord\/lib\/active_record\/aggregations_rb.html","files\/activerecord\/lib\/active_record\/aggregations_rb.html","","",3],["association_preload.rb","files\/activerecord\/lib\/active_record\/association_preload_rb.html","files\/activerecord\/lib\/active_record\/association_preload_rb.html","","",3],["associations.rb","files\/activerecord\/lib\/active_record\/associations_rb.html","files\/activerecord\/lib\/active_record\/associations_rb.html","","",3],["association_collection.rb","files\/activerecord\/lib\/active_record\/associations\/association_collection_rb.html","files\/activerecord\/lib\/active_record\/associations\/association_collection_rb.html","","",3],["association_proxy.rb","files\/activerecord\/lib\/active_record\/associations\/association_proxy_rb.html","files\/activerecord\/lib\/active_record\/associations\/association_proxy_rb.html","","",3],["belongs_to_association.rb","files\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/belongs_to_association_rb.html","","",3],["belongs_to_polymorphic_association.rb","files\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/belongs_to_polymorphic_association_rb.html","","",3],["has_and_belongs_to_many_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_and_belongs_to_many_association_rb.html","","",3],["has_many_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_many_association_rb.html","","",3],["has_many_through_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_many_through_association_rb.html","","",3],["has_one_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_one_association_rb.html","","",3],["has_one_through_association.rb","files\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","files\/activerecord\/lib\/active_record\/associations\/has_one_through_association_rb.html","","",3],["through_association_scope.rb","files\/activerecord\/lib\/active_record\/associations\/through_association_scope_rb.html","files\/activerecord\/lib\/active_record\/associations\/through_association_scope_rb.html","","",3],["attribute_methods.rb","files\/activerecord\/lib\/active_record\/attribute_methods_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods_rb.html","","",3],["before_type_cast.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/before_type_cast_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/before_type_cast_rb.html","","",3],["dirty.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/dirty_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/dirty_rb.html","","",3],["primary_key.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/primary_key_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/primary_key_rb.html","","",3],["query.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/query_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/query_rb.html","","",3],["read.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/read_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/read_rb.html","","",3],["time_zone_conversion.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/time_zone_conversion_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/time_zone_conversion_rb.html","","",3],["write.rb","files\/activerecord\/lib\/active_record\/attribute_methods\/write_rb.html","files\/activerecord\/lib\/active_record\/attribute_methods\/write_rb.html","","",3],["autosave_association.rb","files\/activerecord\/lib\/active_record\/autosave_association_rb.html","files\/activerecord\/lib\/active_record\/autosave_association_rb.html","","",3],["base.rb","files\/activerecord\/lib\/active_record\/base_rb.html","files\/activerecord\/lib\/active_record\/base_rb.html","","",3],["callbacks.rb","files\/activerecord\/lib\/active_record\/callbacks_rb.html","files\/activerecord\/lib\/active_record\/callbacks_rb.html","","",3],["connection_pool.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_pool_rb.html","","",3],["connection_specification.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/connection_specification_rb.html","","",3],["database_limits.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_limits_rb.html","","",3],["database_statements.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/database_statements_rb.html","","",3],["query_cache.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/query_cache_rb.html","","",3],["quoting.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/quoting_rb.html","","",3],["schema_definitions.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_definitions_rb.html","","",3],["schema_statements.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract\/schema_statements_rb.html","","",3],["abstract_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/abstract_adapter_rb.html","","",3],["mysql_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/mysql_adapter_rb.html","","",3],["postgresql_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/postgresql_adapter_rb.html","","",3],["sqlite3_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite3_adapter_rb.html","","",3],["sqlite_adapter.rb","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","files\/activerecord\/lib\/active_record\/connection_adapters\/sqlite_adapter_rb.html","","",3],["counter_cache.rb","files\/activerecord\/lib\/active_record\/counter_cache_rb.html","files\/activerecord\/lib\/active_record\/counter_cache_rb.html","","",3],["dynamic_finder_match.rb","files\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","files\/activerecord\/lib\/active_record\/dynamic_finder_match_rb.html","","",3],["dynamic_scope_match.rb","files\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","files\/activerecord\/lib\/active_record\/dynamic_scope_match_rb.html","","",3],["errors.rb","files\/activerecord\/lib\/active_record\/errors_rb.html","files\/activerecord\/lib\/active_record\/errors_rb.html","","",3],["fixtures.rb","files\/activerecord\/lib\/active_record\/fixtures_rb.html","files\/activerecord\/lib\/active_record\/fixtures_rb.html","","",3],["optimistic.rb","files\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","files\/activerecord\/lib\/active_record\/locking\/optimistic_rb.html","","",3],["pessimistic.rb","files\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","files\/activerecord\/lib\/active_record\/locking\/pessimistic_rb.html","","",3],["log_subscriber.rb","files\/activerecord\/lib\/active_record\/log_subscriber_rb.html","files\/activerecord\/lib\/active_record\/log_subscriber_rb.html","","",3],["migration.rb","files\/activerecord\/lib\/active_record\/migration_rb.html","files\/activerecord\/lib\/active_record\/migration_rb.html","","",3],["named_scope.rb","files\/activerecord\/lib\/active_record\/named_scope_rb.html","files\/activerecord\/lib\/active_record\/named_scope_rb.html","","",3],["nested_attributes.rb","files\/activerecord\/lib\/active_record\/nested_attributes_rb.html","files\/activerecord\/lib\/active_record\/nested_attributes_rb.html","","",3],["observer.rb","files\/activerecord\/lib\/active_record\/observer_rb.html","files\/activerecord\/lib\/active_record\/observer_rb.html","","",3],["persistence.rb","files\/activerecord\/lib\/active_record\/persistence_rb.html","files\/activerecord\/lib\/active_record\/persistence_rb.html","","",3],["query_cache.rb","files\/activerecord\/lib\/active_record\/query_cache_rb.html","files\/activerecord\/lib\/active_record\/query_cache_rb.html","","",3],["railtie.rb","files\/activerecord\/lib\/active_record\/railtie_rb.html","files\/activerecord\/lib\/active_record\/railtie_rb.html","","",3],["controller_runtime.rb","files\/activerecord\/lib\/active_record\/railties\/controller_runtime_rb.html","files\/activerecord\/lib\/active_record\/railties\/controller_runtime_rb.html","","",3],["reflection.rb","files\/activerecord\/lib\/active_record\/reflection_rb.html","files\/activerecord\/lib\/active_record\/reflection_rb.html","","",3],["relation.rb","files\/activerecord\/lib\/active_record\/relation_rb.html","files\/activerecord\/lib\/active_record\/relation_rb.html","","",3],["batches.rb","files\/activerecord\/lib\/active_record\/relation\/batches_rb.html","files\/activerecord\/lib\/active_record\/relation\/batches_rb.html","","",3],["calculations.rb","files\/activerecord\/lib\/active_record\/relation\/calculations_rb.html","files\/activerecord\/lib\/active_record\/relation\/calculations_rb.html","","",3],["finder_methods.rb","files\/activerecord\/lib\/active_record\/relation\/finder_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/finder_methods_rb.html","","",3],["predicate_builder.rb","files\/activerecord\/lib\/active_record\/relation\/predicate_builder_rb.html","files\/activerecord\/lib\/active_record\/relation\/predicate_builder_rb.html","","",3],["query_methods.rb","files\/activerecord\/lib\/active_record\/relation\/query_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/query_methods_rb.html","","",3],["spawn_methods.rb","files\/activerecord\/lib\/active_record\/relation\/spawn_methods_rb.html","files\/activerecord\/lib\/active_record\/relation\/spawn_methods_rb.html","","",3],["schema.rb","files\/activerecord\/lib\/active_record\/schema_rb.html","files\/activerecord\/lib\/active_record\/schema_rb.html","","",3],["schema_dumper.rb","files\/activerecord\/lib\/active_record\/schema_dumper_rb.html","files\/activerecord\/lib\/active_record\/schema_dumper_rb.html","","",3],["serialization.rb","files\/activerecord\/lib\/active_record\/serialization_rb.html","files\/activerecord\/lib\/active_record\/serialization_rb.html","","",3],["xml_serializer.rb","files\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","files\/activerecord\/lib\/active_record\/serializers\/xml_serializer_rb.html","","",3],["session_store.rb","files\/activerecord\/lib\/active_record\/session_store_rb.html","files\/activerecord\/lib\/active_record\/session_store_rb.html","","",3],["test_case.rb","files\/activerecord\/lib\/active_record\/test_case_rb.html","files\/activerecord\/lib\/active_record\/test_case_rb.html","","",3],["timestamp.rb","files\/activerecord\/lib\/active_record\/timestamp_rb.html","files\/activerecord\/lib\/active_record\/timestamp_rb.html","","",3],["transactions.rb","files\/activerecord\/lib\/active_record\/transactions_rb.html","files\/activerecord\/lib\/active_record\/transactions_rb.html","","",3],["validations.rb","files\/activerecord\/lib\/active_record\/validations_rb.html","files\/activerecord\/lib\/active_record\/validations_rb.html","","",3],["associated.rb","files\/activerecord\/lib\/active_record\/validations\/associated_rb.html","files\/activerecord\/lib\/active_record\/validations\/associated_rb.html","","",3],["uniqueness.rb","files\/activerecord\/lib\/active_record\/validations\/uniqueness_rb.html","files\/activerecord\/lib\/active_record\/validations\/uniqueness_rb.html","","",3],["version.rb","files\/activerecord\/lib\/active_record\/version_rb.html","files\/activerecord\/lib\/active_record\/version_rb.html","","",3],["CHANGELOG","files\/activeresource\/CHANGELOG.html","files\/activeresource\/CHANGELOG.html","","*Rails 3.0.8 (unreleased)*  *No changes.  *Rails 3.0.7 (April 18, 2011)*  *No changes.   *Rails 3.0.6",3],["README.rdoc","files\/activeresource\/README_rdoc.html","files\/activeresource\/README_rdoc.html","","= Active Resource  Active Resource (ARes) connects business objects and Representational State Transfer",3],["active_resource.rb","files\/activeresource\/lib\/active_resource_rb.html","files\/activeresource\/lib\/active_resource_rb.html",""," ",3],["base.rb","files\/activeresource\/lib\/active_resource\/base_rb.html","files\/activeresource\/lib\/active_resource\/base_rb.html","","",3],["connection.rb","files\/activeresource\/lib\/active_resource\/connection_rb.html","files\/activeresource\/lib\/active_resource\/connection_rb.html","","",3],["custom_methods.rb","files\/activeresource\/lib\/active_resource\/custom_methods_rb.html","files\/activeresource\/lib\/active_resource\/custom_methods_rb.html","","",3],["exceptions.rb","files\/activeresource\/lib\/active_resource\/exceptions_rb.html","files\/activeresource\/lib\/active_resource\/exceptions_rb.html","","",3],["formats.rb","files\/activeresource\/lib\/active_resource\/formats_rb.html","files\/activeresource\/lib\/active_resource\/formats_rb.html","","",3],["json_format.rb","files\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","files\/activeresource\/lib\/active_resource\/formats\/json_format_rb.html","","",3],["xml_format.rb","files\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","files\/activeresource\/lib\/active_resource\/formats\/xml_format_rb.html","","",3],["http_mock.rb","files\/activeresource\/lib\/active_resource\/http_mock_rb.html","files\/activeresource\/lib\/active_resource\/http_mock_rb.html","","",3],["log_subscriber.rb","files\/activeresource\/lib\/active_resource\/log_subscriber_rb.html","files\/activeresource\/lib\/active_resource\/log_subscriber_rb.html","","",3],["observing.rb","files\/activeresource\/lib\/active_resource\/observing_rb.html","files\/activeresource\/lib\/active_resource\/observing_rb.html","","",3],["railtie.rb","files\/activeresource\/lib\/active_resource\/railtie_rb.html","files\/activeresource\/lib\/active_resource\/railtie_rb.html","","",3],["schema.rb","files\/activeresource\/lib\/active_resource\/schema_rb.html","files\/activeresource\/lib\/active_resource\/schema_rb.html","","",3],["validations.rb","files\/activeresource\/lib\/active_resource\/validations_rb.html","files\/activeresource\/lib\/active_resource\/validations_rb.html","","",3],["version.rb","files\/activeresource\/lib\/active_resource\/version_rb.html","files\/activeresource\/lib\/active_resource\/version_rb.html","","",3],["CHANGELOG","files\/activesupport\/CHANGELOG.html","files\/activesupport\/CHANGELOG.html","","*Rails 3.0.8 (unreleased)*  * No changes.  *Rails 3.0.7 (April 18, 2011)*  * Hash.from_xml no longer",3],["README.rdoc","files\/activesupport\/README_rdoc.html","files\/activesupport\/README_rdoc.html","","= Active Support -- Utility classes and Ruby extensions from Rails  Active Support is a collection of",3],["all.rb","files\/activesupport\/lib\/active_support\/all_rb.html","files\/activesupport\/lib\/active_support\/all_rb.html","","",3],["backtrace_cleaner.rb","files\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","files\/activesupport\/lib\/active_support\/backtrace_cleaner_rb.html","","",3],["base64.rb","files\/activesupport\/lib\/active_support\/base64_rb.html","files\/activesupport\/lib\/active_support\/base64_rb.html","","",3],["basic_object.rb","files\/activesupport\/lib\/active_support\/basic_object_rb.html","files\/activesupport\/lib\/active_support\/basic_object_rb.html","","",3],["benchmarkable.rb","files\/activesupport\/lib\/active_support\/benchmarkable_rb.html","files\/activesupport\/lib\/active_support\/benchmarkable_rb.html","","",3],["buffered_logger.rb","files\/activesupport\/lib\/active_support\/buffered_logger_rb.html","files\/activesupport\/lib\/active_support\/buffered_logger_rb.html","","",3],["builder.rb","files\/activesupport\/lib\/active_support\/builder_rb.html","files\/activesupport\/lib\/active_support\/builder_rb.html","","",3],["cache.rb","files\/activesupport\/lib\/active_support\/cache_rb.html","files\/activesupport\/lib\/active_support\/cache_rb.html","","",3],["compressed_mem_cache_store.rb","files\/activesupport\/lib\/active_support\/cache\/compressed_mem_cache_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/compressed_mem_cache_store_rb.html","","",3],["file_store.rb","files\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/file_store_rb.html","","",3],["mem_cache_store.rb","files\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/mem_cache_store_rb.html","","",3],["memory_store.rb","files\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/memory_store_rb.html","","",3],["local_cache.rb","files\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","files\/activesupport\/lib\/active_support\/cache\/strategy\/local_cache_rb.html","","",3],["synchronized_memory_store.rb","files\/activesupport\/lib\/active_support\/cache\/synchronized_memory_store_rb.html","files\/activesupport\/lib\/active_support\/cache\/synchronized_memory_store_rb.html","","",3],["callbacks.rb","files\/activesupport\/lib\/active_support\/callbacks_rb.html","files\/activesupport\/lib\/active_support\/callbacks_rb.html","","",3],["concern.rb","files\/activesupport\/lib\/active_support\/concern_rb.html","files\/activesupport\/lib\/active_support\/concern_rb.html","","A typical module looks like this module M def self.included(base) base.send(:extend, ClassMethods) base.send(:include,",3],["configurable.rb","files\/activesupport\/lib\/active_support\/configurable_rb.html","files\/activesupport\/lib\/active_support\/configurable_rb.html","","",3],["core_ext.rb","files\/activesupport\/lib\/active_support\/core_ext_rb.html","files\/activesupport\/lib\/active_support\/core_ext_rb.html","","",3],["array.rb","files\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array_rb.html","","",3],["access.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/access_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/conversions_rb.html","","",3],["extract_options.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/extract_options_rb.html","","",3],["grouping.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/grouping_rb.html","","",3],["random_access.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/random_access_rb.html","","",3],["uniq_by.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/uniq_by_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/uniq_by_rb.html","","",3],["wrap.rb","files\/activesupport\/lib\/active_support\/core_ext\/array\/wrap_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/array\/wrap_rb.html","","",3],["benchmark.rb","files\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/benchmark_rb.html","","",3],["big_decimal.rb","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/big_decimal\/conversions_rb.html","","",3],["cgi.rb","files\/activesupport\/lib\/active_support\/core_ext\/cgi_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/cgi_rb.html","","",3],["escape_skipping_slashes.rb","files\/activesupport\/lib\/active_support\/core_ext\/cgi\/escape_skipping_slashes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/cgi\/escape_skipping_slashes_rb.html","","",3],["class.rb","files\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class_rb.html","","",3],["attribute.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_rb.html","","",3],["attribute_accessors.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/attribute_accessors_rb.html","","",3],["delegating_attributes.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/delegating_attributes_rb.html","","",3],["inheritable_attributes.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/inheritable_attributes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/inheritable_attributes_rb.html","","",3],["subclasses.rb","files\/activesupport\/lib\/active_support\/core_ext\/class\/subclasses_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/class\/subclasses_rb.html","","",3],["acts_like.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/acts_like_rb.html","","",3],["calculations.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/calculations_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/conversions_rb.html","","",3],["freeze.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/freeze_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/freeze_rb.html","","Date memoizes some instance methods using metaprogramming to wrap the methods with one that caches the",3],["zones.rb","files\/activesupport\/lib\/active_support\/core_ext\/date\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date\/zones_rb.html","","",3],["acts_like.rb","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/acts_like_rb.html","","",3],["calculations.rb","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/calculations_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/conversions_rb.html","","",3],["zones.rb","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/date_time\/zones_rb.html","","",3],["enumerable.rb","files\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/enumerable_rb.html","","",3],["exception.rb","files\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/exception_rb.html","","",3],["file.rb","files\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file_rb.html","","",3],["atomic.rb","files\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file\/atomic_rb.html","","",3],["path.rb","files\/activesupport\/lib\/active_support\/core_ext\/file\/path_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/file\/path_rb.html","","",3],["float.rb","files\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/float_rb.html","","",3],["rounding.rb","files\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/float\/rounding_rb.html","","",3],["hash.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/conversions_rb.html","","",3],["deep_merge.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/deep_merge_rb.html","","",3],["diff.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/diff_rb.html","","",3],["except.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/except_rb.html","","",3],["indifferent_access.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/indifferent_access_rb.html","","",3],["keys.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/keys_rb.html","","",3],["reverse_merge.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/reverse_merge_rb.html","","",3],["slice.rb","files\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/hash\/slice_rb.html","","",3],["integer.rb","files\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer_rb.html","","",3],["inflections.rb","files\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/inflections_rb.html","","",3],["multiple.rb","files\/activesupport\/lib\/active_support\/core_ext\/integer\/multiple_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/multiple_rb.html","","",3],["time.rb","files\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/integer\/time_rb.html","","",3],["kernel.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel_rb.html","","",3],["agnostics.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/agnostics_rb.html","","",3],["debugger.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/debugger_rb.html","","",3],["reporting.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/reporting_rb.html","","",3],["requires.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/requires_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/requires_rb.html","","",3],["singleton_class.rb","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/singleton_class_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/kernel\/singleton_class_rb.html","","",3],["load_error.rb","files\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/load_error_rb.html","","",3],["logger.rb","files\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/logger_rb.html","","",3],["module.rb","files\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module_rb.html","","",3],["aliasing.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/aliasing_rb.html","","",3],["anonymous.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/anonymous_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/anonymous_rb.html","","",3],["attr_accessor_with_default.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_accessor_with_default_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_accessor_with_default_rb.html","","",3],["attr_internal.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attr_internal_rb.html","","",3],["attribute_accessors.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/attribute_accessors_rb.html","","",3],["delegation.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/delegation_rb.html","","",3],["deprecation.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/deprecation_rb.html","","",3],["introspection.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/introspection_rb.html","","",3],["method_names.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/method_names_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/method_names_rb.html","","",3],["reachable.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/reachable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/reachable_rb.html","","",3],["remove_method.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/remove_method_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/remove_method_rb.html","","",3],["synchronization.rb","files\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/module\/synchronization_rb.html","","",3],["name_error.rb","files\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/name_error_rb.html","","",3],["numeric.rb","files\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric_rb.html","","",3],["bytes.rb","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/bytes_rb.html","","",3],["time.rb","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/numeric\/time_rb.html","","",3],["object.rb","files\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object_rb.html","","",3],["acts_like.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/acts_like_rb.html","","",3],["blank.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/blank_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/conversions_rb.html","","",3],["duplicable.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/duplicable_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/duplicable_rb.html","","Most objects are cloneable, but not all. For example you can't dup +nil+: nil.dup # => TypeError: can't",3],["instance_variables.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/instance_variables_rb.html","","",3],["returning.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/returning_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/returning_rb.html","","",3],["to_json.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_json_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_json_rb.html","","Hack to load json gem first so we can overwrite its to_json. ",3],["to_param.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_param_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_param_rb.html","","",3],["to_query.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_query_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/to_query_rb.html","","",3],["try.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/try_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/try_rb.html","","",3],["with_options.rb","files\/activesupport\/lib\/active_support\/core_ext\/object\/with_options_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/object\/with_options_rb.html","","",3],["proc.rb","files\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/proc_rb.html","","",3],["process.rb","files\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/process_rb.html","","",3],["daemon.rb","files\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/process\/daemon_rb.html","","",3],["range.rb","files\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range_rb.html","","",3],["blockless_step.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/blockless_step_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/conversions_rb.html","","",3],["include_range.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/include_range_rb.html","","",3],["overlaps.rb","files\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/range\/overlaps_rb.html","","",3],["regexp.rb","files\/activesupport\/lib\/active_support\/core_ext\/regexp_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/regexp_rb.html","","",3],["rexml.rb","files\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/rexml_rb.html","","",3],["string.rb","files\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string_rb.html","","",3],["access.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/access_rb.html","","",3],["behavior.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/behavior_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/conversions_rb.html","","",3],["encoding.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/encoding_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/encoding_rb.html","","",3],["exclude.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/exclude_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/exclude_rb.html","","",3],["filters.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/filters_rb.html","","",3],["inflections.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/inflections_rb.html","","",3],["interpolation.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/interpolation_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/interpolation_rb.html","","",3],["multibyte.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/multibyte_rb.html","","encoding: utf-8 ",3],["output_safety.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/output_safety_rb.html","","",3],["starts_ends_with.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/starts_ends_with_rb.html","","",3],["strip.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/strip_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/strip_rb.html","","",3],["xchar.rb","files\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/string\/xchar_rb.html","","",3],["acts_like.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/acts_like_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/acts_like_rb.html","","",3],["calculations.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/calculations_rb.html","","",3],["conversions.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/conversions_rb.html","","",3],["marshal.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/marshal_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/marshal_rb.html","","Pre-1.9 versions of Ruby have a bug with marshaling Time instances, where utc instances are unmarshalled",3],["publicize_conversion_methods.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/publicize_conversion_methods_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/publicize_conversion_methods_rb.html","","",3],["zones.rb","files\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/time\/zones_rb.html","","",3],["uri.rb","files\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","files\/activesupport\/lib\/active_support\/core_ext\/uri_rb.html","","encoding: utf-8 ",3],["dependencies.rb","files\/activesupport\/lib\/active_support\/dependencies_rb.html","files\/activesupport\/lib\/active_support\/dependencies_rb.html","","",3],["autoload.rb","files\/activesupport\/lib\/active_support\/dependencies\/autoload_rb.html","files\/activesupport\/lib\/active_support\/dependencies\/autoload_rb.html","","",3],["deprecation.rb","files\/activesupport\/lib\/active_support\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/deprecation_rb.html","","",3],["behaviors.rb","files\/activesupport\/lib\/active_support\/deprecation\/behaviors_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/behaviors_rb.html","","",3],["method_wrappers.rb","files\/activesupport\/lib\/active_support\/deprecation\/method_wrappers_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/method_wrappers_rb.html","","",3],["proxy_wrappers.rb","files\/activesupport\/lib\/active_support\/deprecation\/proxy_wrappers_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/proxy_wrappers_rb.html","","",3],["reporting.rb","files\/activesupport\/lib\/active_support\/deprecation\/reporting_rb.html","files\/activesupport\/lib\/active_support\/deprecation\/reporting_rb.html","","",3],["descendants_tracker.rb","files\/activesupport\/lib\/active_support\/descendants_tracker_rb.html","files\/activesupport\/lib\/active_support\/descendants_tracker_rb.html","","",3],["duration.rb","files\/activesupport\/lib\/active_support\/duration_rb.html","files\/activesupport\/lib\/active_support\/duration_rb.html","","",3],["file_update_checker.rb","files\/activesupport\/lib\/active_support\/file_update_checker_rb.html","files\/activesupport\/lib\/active_support\/file_update_checker_rb.html","","",3],["gzip.rb","files\/activesupport\/lib\/active_support\/gzip_rb.html","files\/activesupport\/lib\/active_support\/gzip_rb.html","","",3],["hash_with_indifferent_access.rb","files\/activesupport\/lib\/active_support\/hash_with_indifferent_access_rb.html","files\/activesupport\/lib\/active_support\/hash_with_indifferent_access_rb.html","","",3],["i18n.rb","files\/activesupport\/lib\/active_support\/i18n_rb.html","files\/activesupport\/lib\/active_support\/i18n_rb.html","","",3],["i18n_railtie.rb","files\/activesupport\/lib\/active_support\/i18n_railtie_rb.html","files\/activesupport\/lib\/active_support\/i18n_railtie_rb.html","","",3],["inflections.rb","files\/activesupport\/lib\/active_support\/inflections_rb.html","files\/activesupport\/lib\/active_support\/inflections_rb.html","","",3],["inflector.rb","files\/activesupport\/lib\/active_support\/inflector_rb.html","files\/activesupport\/lib\/active_support\/inflector_rb.html","","in case active_support\/inflector is required without the rest of active_support ",3],["inflections.rb","files\/activesupport\/lib\/active_support\/inflector\/inflections_rb.html","files\/activesupport\/lib\/active_support\/inflector\/inflections_rb.html","","",3],["methods.rb","files\/activesupport\/lib\/active_support\/inflector\/methods_rb.html","files\/activesupport\/lib\/active_support\/inflector\/methods_rb.html","","",3],["transliterate.rb","files\/activesupport\/lib\/active_support\/inflector\/transliterate_rb.html","files\/activesupport\/lib\/active_support\/inflector\/transliterate_rb.html","","encoding: utf-8 ",3],["json.rb","files\/activesupport\/lib\/active_support\/json_rb.html","files\/activesupport\/lib\/active_support\/json_rb.html","","",3],["jsongem.rb","files\/activesupport\/lib\/active_support\/json\/backends\/jsongem_rb.html","files\/activesupport\/lib\/active_support\/json\/backends\/jsongem_rb.html","","",3],["yajl.rb","files\/activesupport\/lib\/active_support\/json\/backends\/yajl_rb.html","files\/activesupport\/lib\/active_support\/json\/backends\/yajl_rb.html","","",3],["yaml.rb","files\/activesupport\/lib\/active_support\/json\/backends\/yaml_rb.html","files\/activesupport\/lib\/active_support\/json\/backends\/yaml_rb.html","","",3],["decoding.rb","files\/activesupport\/lib\/active_support\/json\/decoding_rb.html","files\/activesupport\/lib\/active_support\/json\/decoding_rb.html","","",3],["encoding.rb","files\/activesupport\/lib\/active_support\/json\/encoding_rb.html","files\/activesupport\/lib\/active_support\/json\/encoding_rb.html","","",3],["variable.rb","files\/activesupport\/lib\/active_support\/json\/variable_rb.html","files\/activesupport\/lib\/active_support\/json\/variable_rb.html","","",3],["lazy_load_hooks.rb","files\/activesupport\/lib\/active_support\/lazy_load_hooks_rb.html","files\/activesupport\/lib\/active_support\/lazy_load_hooks_rb.html","","lazy_load_hooks allows rails to lazily load a lot of components and thus making the app boot faster.",3],["log_subscriber.rb","files\/activesupport\/lib\/active_support\/log_subscriber_rb.html","files\/activesupport\/lib\/active_support\/log_subscriber_rb.html","","",3],["test_helper.rb","files\/activesupport\/lib\/active_support\/log_subscriber\/test_helper_rb.html","files\/activesupport\/lib\/active_support\/log_subscriber\/test_helper_rb.html","","",3],["memoizable.rb","files\/activesupport\/lib\/active_support\/memoizable_rb.html","files\/activesupport\/lib\/active_support\/memoizable_rb.html","","",3],["message_encryptor.rb","files\/activesupport\/lib\/active_support\/message_encryptor_rb.html","files\/activesupport\/lib\/active_support\/message_encryptor_rb.html","","",3],["message_verifier.rb","files\/activesupport\/lib\/active_support\/message_verifier_rb.html","files\/activesupport\/lib\/active_support\/message_verifier_rb.html","","",3],["multibyte.rb","files\/activesupport\/lib\/active_support\/multibyte_rb.html","files\/activesupport\/lib\/active_support\/multibyte_rb.html","","encoding: utf-8 ",3],["chars.rb","files\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/chars_rb.html","","encoding: utf-8 ",3],["exceptions.rb","files\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/exceptions_rb.html","","encoding: utf-8 ",3],["unicode.rb","files\/activesupport\/lib\/active_support\/multibyte\/unicode_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/unicode_rb.html","","",3],["utils.rb","files\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","files\/activesupport\/lib\/active_support\/multibyte\/utils_rb.html","","encoding: utf-8 ",3],["notifications.rb","files\/activesupport\/lib\/active_support\/notifications_rb.html","files\/activesupport\/lib\/active_support\/notifications_rb.html","","",3],["fanout.rb","files\/activesupport\/lib\/active_support\/notifications\/fanout_rb.html","files\/activesupport\/lib\/active_support\/notifications\/fanout_rb.html","","",3],["instrumenter.rb","files\/activesupport\/lib\/active_support\/notifications\/instrumenter_rb.html","files\/activesupport\/lib\/active_support\/notifications\/instrumenter_rb.html","","",3],["option_merger.rb","files\/activesupport\/lib\/active_support\/option_merger_rb.html","files\/activesupport\/lib\/active_support\/option_merger_rb.html","","",3],["ordered_hash.rb","files\/activesupport\/lib\/active_support\/ordered_hash_rb.html","files\/activesupport\/lib\/active_support\/ordered_hash_rb.html","","",3],["ordered_options.rb","files\/activesupport\/lib\/active_support\/ordered_options_rb.html","files\/activesupport\/lib\/active_support\/ordered_options_rb.html","","",3],["railtie.rb","files\/activesupport\/lib\/active_support\/railtie_rb.html","files\/activesupport\/lib\/active_support\/railtie_rb.html","","",3],["rescuable.rb","files\/activesupport\/lib\/active_support\/rescuable_rb.html","files\/activesupport\/lib\/active_support\/rescuable_rb.html","","",3],["shim.rb","files\/activesupport\/lib\/active_support\/ruby\/shim_rb.html","files\/activesupport\/lib\/active_support\/ruby\/shim_rb.html","","Backported Ruby builtins so you can code with the latest & greatest but still run on any Ruby 1.8.x.",3],["secure_random.rb","files\/activesupport\/lib\/active_support\/secure_random_rb.html","files\/activesupport\/lib\/active_support\/secure_random_rb.html","","",3],["string_inquirer.rb","files\/activesupport\/lib\/active_support\/string_inquirer_rb.html","files\/activesupport\/lib\/active_support\/string_inquirer_rb.html","","",3],["test_case.rb","files\/activesupport\/lib\/active_support\/test_case_rb.html","files\/activesupport\/lib\/active_support\/test_case_rb.html","","",3],["assertions.rb","files\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","files\/activesupport\/lib\/active_support\/testing\/assertions_rb.html","","",3],["declarative.rb","files\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","files\/activesupport\/lib\/active_support\/testing\/declarative_rb.html","","",3],["default.rb","files\/activesupport\/lib\/active_support\/testing\/default_rb.html","files\/activesupport\/lib\/active_support\/testing\/default_rb.html","","",3],["deprecation.rb","files\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","files\/activesupport\/lib\/active_support\/testing\/deprecation_rb.html","","",3],["isolation.rb","files\/activesupport\/lib\/active_support\/testing\/isolation_rb.html","files\/activesupport\/lib\/active_support\/testing\/isolation_rb.html","","",3],["pending.rb","files\/activesupport\/lib\/active_support\/testing\/pending_rb.html","files\/activesupport\/lib\/active_support\/testing\/pending_rb.html","","Some code from jeremymcanally's \"pending\" http:\/\/github.com\/jeremymcanally\/pending\/tree\/master ",3],["performance.rb","files\/activesupport\/lib\/active_support\/testing\/performance_rb.html","files\/activesupport\/lib\/active_support\/testing\/performance_rb.html","","",3],["setup_and_teardown.rb","files\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","files\/activesupport\/lib\/active_support\/testing\/setup_and_teardown_rb.html","","",3],["time.rb","files\/activesupport\/lib\/active_support\/time_rb.html","files\/activesupport\/lib\/active_support\/time_rb.html","","",3],["autoload.rb","files\/activesupport\/lib\/active_support\/time\/autoload_rb.html","files\/activesupport\/lib\/active_support\/time\/autoload_rb.html","","",3],["time_with_zone.rb","files\/activesupport\/lib\/active_support\/time_with_zone_rb.html","files\/activesupport\/lib\/active_support\/time_with_zone_rb.html","","",3],["time_zone.rb","files\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","files\/activesupport\/lib\/active_support\/values\/time_zone_rb.html","","",3],["version.rb","files\/activesupport\/lib\/active_support\/version_rb.html","files\/activesupport\/lib\/active_support\/version_rb.html","","",3],["whiny_nil.rb","files\/activesupport\/lib\/active_support\/whiny_nil_rb.html","files\/activesupport\/lib\/active_support\/whiny_nil_rb.html","","Extensions to +nil+ which allow for more helpful error messages for people who are new to Rails. Ruby",3],["xml_mini.rb","files\/activesupport\/lib\/active_support\/xml_mini_rb.html","files\/activesupport\/lib\/active_support\/xml_mini_rb.html","","",3],["jdom.rb","files\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/jdom_rb.html","","",3],["libxml.rb","files\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/libxml_rb.html","","",3],["libxmlsax.rb","files\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/libxmlsax_rb.html","","",3],["nokogiri.rb","files\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/nokogiri_rb.html","","",3],["nokogirisax.rb","files\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/nokogirisax_rb.html","","",3],["rexml.rb","files\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","files\/activesupport\/lib\/active_support\/xml_mini\/rexml_rb.html","","",3],["CHANGELOG","files\/railties\/CHANGELOG.html","files\/railties\/CHANGELOG.html","","*Rails 3.0.8 (unreleased)*  * Fix Rake 0.9.0 support.  *Rails 3.0.7 (April 18, 2011)*  *No changes. ",3],["MIT-LICENSE","files\/railties\/MIT-LICENSE.html","files\/railties\/MIT-LICENSE.html","","Copyright (c) 2004-2010 David Heinemeier Hansson  Permission is hereby granted, free of charge, to any",3],["README.rdoc","files\/railties\/README_rdoc.html","files\/railties\/README_rdoc.html","","= Railties -- Gluing the Engine to the Rails  Railties is responsible to glue all frameworks together.",3],["rails.rb","files\/railties\/lib\/rails_rb.html","files\/railties\/lib\/rails_rb.html","","",3],["all.rb","files\/railties\/lib\/rails\/all_rb.html","files\/railties\/lib\/rails\/all_rb.html","","",3],["application.rb","files\/railties\/lib\/rails\/application_rb.html","files\/railties\/lib\/rails\/application_rb.html","","",3],["bootstrap.rb","files\/railties\/lib\/rails\/application\/bootstrap_rb.html","files\/railties\/lib\/rails\/application\/bootstrap_rb.html","","",3],["configurable.rb","files\/railties\/lib\/rails\/application\/configurable_rb.html","files\/railties\/lib\/rails\/application\/configurable_rb.html","","",3],["configuration.rb","files\/railties\/lib\/rails\/application\/configuration_rb.html","files\/railties\/lib\/rails\/application\/configuration_rb.html","","",3],["finisher.rb","files\/railties\/lib\/rails\/application\/finisher_rb.html","files\/railties\/lib\/rails\/application\/finisher_rb.html","","",3],["railties.rb","files\/railties\/lib\/rails\/application\/railties_rb.html","files\/railties\/lib\/rails\/application\/railties_rb.html","","",3],["backtrace_cleaner.rb","files\/railties\/lib\/rails\/backtrace_cleaner_rb.html","files\/railties\/lib\/rails\/backtrace_cleaner_rb.html","","",3],["cli.rb","files\/railties\/lib\/rails\/cli_rb.html","files\/railties\/lib\/rails\/cli_rb.html","","",3],["code_statistics.rb","files\/railties\/lib\/rails\/code_statistics_rb.html","files\/railties\/lib\/rails\/code_statistics_rb.html","","",3],["commands.rb","files\/railties\/lib\/rails\/commands_rb.html","files\/railties\/lib\/rails\/commands_rb.html","","",3],["application.rb","files\/railties\/lib\/rails\/commands\/application_rb.html","files\/railties\/lib\/rails\/commands\/application_rb.html","","",3],["benchmarker.rb","files\/railties\/lib\/rails\/commands\/benchmarker_rb.html","files\/railties\/lib\/rails\/commands\/benchmarker_rb.html","","",3],["console.rb","files\/railties\/lib\/rails\/commands\/console_rb.html","files\/railties\/lib\/rails\/commands\/console_rb.html","","",3],["dbconsole.rb","files\/railties\/lib\/rails\/commands\/dbconsole_rb.html","files\/railties\/lib\/rails\/commands\/dbconsole_rb.html","","",3],["destroy.rb","files\/railties\/lib\/rails\/commands\/destroy_rb.html","files\/railties\/lib\/rails\/commands\/destroy_rb.html","","",3],["generate.rb","files\/railties\/lib\/rails\/commands\/generate_rb.html","files\/railties\/lib\/rails\/commands\/generate_rb.html","","",3],["plugin.rb","files\/railties\/lib\/rails\/commands\/plugin_rb.html","files\/railties\/lib\/rails\/commands\/plugin_rb.html","","Rails Plugin Manager. Installing plugins: $ rails plugin install continuous_builder asset_timestamping",3],["profiler.rb","files\/railties\/lib\/rails\/commands\/profiler_rb.html","files\/railties\/lib\/rails\/commands\/profiler_rb.html","","",3],["runner.rb","files\/railties\/lib\/rails\/commands\/runner_rb.html","files\/railties\/lib\/rails\/commands\/runner_rb.html","","",3],["server.rb","files\/railties\/lib\/rails\/commands\/server_rb.html","files\/railties\/lib\/rails\/commands\/server_rb.html","","",3],["update.rb","files\/railties\/lib\/rails\/commands\/update_rb.html","files\/railties\/lib\/rails\/commands\/update_rb.html","","",3],["configuration.rb","files\/railties\/lib\/rails\/configuration_rb.html","files\/railties\/lib\/rails\/configuration_rb.html","","",3],["app.rb","files\/railties\/lib\/rails\/console\/app_rb.html","files\/railties\/lib\/rails\/console\/app_rb.html","","",3],["helpers.rb","files\/railties\/lib\/rails\/console\/helpers_rb.html","files\/railties\/lib\/rails\/console\/helpers_rb.html","","",3],["sandbox.rb","files\/railties\/lib\/rails\/console\/sandbox_rb.html","files\/railties\/lib\/rails\/console\/sandbox_rb.html","","",3],["deprecation.rb","files\/railties\/lib\/rails\/deprecation_rb.html","files\/railties\/lib\/rails\/deprecation_rb.html","","",3],["engine.rb","files\/railties\/lib\/rails\/engine_rb.html","files\/railties\/lib\/rails\/engine_rb.html","","",3],["configurable.rb","files\/railties\/lib\/rails\/engine\/configurable_rb.html","files\/railties\/lib\/rails\/engine\/configurable_rb.html","","",3],["configuration.rb","files\/railties\/lib\/rails\/engine\/configuration_rb.html","files\/railties\/lib\/rails\/engine\/configuration_rb.html","","",3],["generators.rb","files\/railties\/lib\/rails\/generators_rb.html","files\/railties\/lib\/rails\/generators_rb.html","","",3],["actions.rb","files\/railties\/lib\/rails\/generators\/actions_rb.html","files\/railties\/lib\/rails\/generators\/actions_rb.html","","",3],["active_model.rb","files\/railties\/lib\/rails\/generators\/active_model_rb.html","files\/railties\/lib\/rails\/generators\/active_model_rb.html","","",3],["base.rb","files\/railties\/lib\/rails\/generators\/base_rb.html","files\/railties\/lib\/rails\/generators\/base_rb.html","","",3],["erb.rb","files\/railties\/lib\/rails\/generators\/erb_rb.html","files\/railties\/lib\/rails\/generators\/erb_rb.html","","",3],["controller_generator.rb","files\/railties\/lib\/rails\/generators\/erb\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/controller\/controller_generator_rb.html","","",3],["mailer_generator.rb","files\/railties\/lib\/rails\/generators\/erb\/mailer\/mailer_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/mailer\/mailer_generator_rb.html","","",3],["scaffold_generator.rb","files\/railties\/lib\/rails\/generators\/erb\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/erb\/scaffold\/scaffold_generator_rb.html","","",3],["generated_attribute.rb","files\/railties\/lib\/rails\/generators\/generated_attribute_rb.html","files\/railties\/lib\/rails\/generators\/generated_attribute_rb.html","","",3],["migration.rb","files\/railties\/lib\/rails\/generators\/migration_rb.html","files\/railties\/lib\/rails\/generators\/migration_rb.html","","",3],["named_base.rb","files\/railties\/lib\/rails\/generators\/named_base_rb.html","files\/railties\/lib\/rails\/generators\/named_base_rb.html","","",3],["app_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/app\/app_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/app\/app_generator_rb.html","","",3],["controller_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/controller\/controller_generator_rb.html","","",3],["generator_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/generator\/generator_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/generator\/generator_generator_rb.html","","",3],["helper_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/helper\/helper_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/helper\/helper_generator_rb.html","","",3],["integration_test_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/integration_test\/integration_test_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/integration_test\/integration_test_generator_rb.html","","",3],["migration_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/migration\/migration_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/migration\/migration_generator_rb.html","","",3],["model_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/model\/model_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/model\/model_generator_rb.html","","",3],["observer_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/observer\/observer_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/observer\/observer_generator_rb.html","","",3],["performance_test_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/performance_test\/performance_test_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/performance_test\/performance_test_generator_rb.html","","",3],["plugin_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/plugin\/plugin_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/plugin\/plugin_generator_rb.html","","",3],["resource_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/resource\/resource_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/resource\/resource_generator_rb.html","","",3],["scaffold_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/scaffold\/scaffold_generator_rb.html","","",3],["scaffold_controller_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/scaffold_controller\/scaffold_controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/scaffold_controller\/scaffold_controller_generator_rb.html","","",3],["session_migration_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/session_migration\/session_migration_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/session_migration\/session_migration_generator_rb.html","","",3],["stylesheets_generator.rb","files\/railties\/lib\/rails\/generators\/rails\/stylesheets\/stylesheets_generator_rb.html","files\/railties\/lib\/rails\/generators\/rails\/stylesheets\/stylesheets_generator_rb.html","","",3],["resource_helpers.rb","files\/railties\/lib\/rails\/generators\/resource_helpers_rb.html","files\/railties\/lib\/rails\/generators\/resource_helpers_rb.html","","",3],["test_case.rb","files\/railties\/lib\/rails\/generators\/test_case_rb.html","files\/railties\/lib\/rails\/generators\/test_case_rb.html","","",3],["test_unit.rb","files\/railties\/lib\/rails\/generators\/test_unit_rb.html","files\/railties\/lib\/rails\/generators\/test_unit_rb.html","","",3],["controller_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/controller\/controller_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/controller\/controller_generator_rb.html","","",3],["helper_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/helper\/helper_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/helper\/helper_generator_rb.html","","",3],["integration_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/integration\/integration_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/integration\/integration_generator_rb.html","","",3],["mailer_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/mailer\/mailer_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/mailer\/mailer_generator_rb.html","","",3],["model_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/model\/model_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/model\/model_generator_rb.html","","",3],["observer_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/observer\/observer_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/observer\/observer_generator_rb.html","","",3],["performance_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/performance\/performance_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/performance\/performance_generator_rb.html","","",3],["plugin_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/plugin\/plugin_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/plugin\/plugin_generator_rb.html","","",3],["scaffold_generator.rb","files\/railties\/lib\/rails\/generators\/test_unit\/scaffold\/scaffold_generator_rb.html","files\/railties\/lib\/rails\/generators\/test_unit\/scaffold\/scaffold_generator_rb.html","","",3],["info.rb","files\/railties\/lib\/rails\/info_rb.html","files\/railties\/lib\/rails\/info_rb.html","","",3],["info_controller.rb","files\/railties\/lib\/rails\/info_controller_rb.html","files\/railties\/lib\/rails\/info_controller_rb.html","","",3],["info_routes.rb","files\/railties\/lib\/rails\/info_routes_rb.html","files\/railties\/lib\/rails\/info_routes_rb.html","","",3],["initializable.rb","files\/railties\/lib\/rails\/initializable_rb.html","files\/railties\/lib\/rails\/initializable_rb.html","","",3],["paths.rb","files\/railties\/lib\/rails\/paths_rb.html","files\/railties\/lib\/rails\/paths_rb.html","","",3],["performance_test_help.rb","files\/railties\/lib\/rails\/performance_test_help_rb.html","files\/railties\/lib\/rails\/performance_test_help_rb.html","","",3],["plugin.rb","files\/railties\/lib\/rails\/plugin_rb.html","files\/railties\/lib\/rails\/plugin_rb.html","","",3],["rack.rb","files\/railties\/lib\/rails\/rack_rb.html","files\/railties\/lib\/rails\/rack_rb.html","","",3],["debugger.rb","files\/railties\/lib\/rails\/rack\/debugger_rb.html","files\/railties\/lib\/rails\/rack\/debugger_rb.html","","",3],["log_tailer.rb","files\/railties\/lib\/rails\/rack\/log_tailer_rb.html","files\/railties\/lib\/rails\/rack\/log_tailer_rb.html","","",3],["logger.rb","files\/railties\/lib\/rails\/rack\/logger_rb.html","files\/railties\/lib\/rails\/rack\/logger_rb.html","","",3],["static.rb","files\/railties\/lib\/rails\/rack\/static_rb.html","files\/railties\/lib\/rails\/rack\/static_rb.html","","",3],["railtie.rb","files\/railties\/lib\/rails\/railtie_rb.html","files\/railties\/lib\/rails\/railtie_rb.html","","",3],["configurable.rb","files\/railties\/lib\/rails\/railtie\/configurable_rb.html","files\/railties\/lib\/rails\/railtie\/configurable_rb.html","","",3],["configuration.rb","files\/railties\/lib\/rails\/railtie\/configuration_rb.html","files\/railties\/lib\/rails\/railtie\/configuration_rb.html","","",3],["ruby_version_check.rb","files\/railties\/lib\/rails\/ruby_version_check_rb.html","files\/railties\/lib\/rails\/ruby_version_check_rb.html","","",3],["rubyprof_ext.rb","files\/railties\/lib\/rails\/rubyprof_ext_rb.html","files\/railties\/lib\/rails\/rubyprof_ext_rb.html","","",3],["script_rails_loader.rb","files\/railties\/lib\/rails\/script_rails_loader_rb.html","files\/railties\/lib\/rails\/script_rails_loader_rb.html","","",3],["source_annotation_extractor.rb","files\/railties\/lib\/rails\/source_annotation_extractor_rb.html","files\/railties\/lib\/rails\/source_annotation_extractor_rb.html","","Implements the logic behind the rake tasks for annotations like rake notes rake notes:optimize and friends.",3],["tasks.rb","files\/railties\/lib\/rails\/tasks_rb.html","files\/railties\/lib\/rails\/tasks_rb.html","","",3],["test_help.rb","files\/railties\/lib\/rails\/test_help_rb.html","files\/railties\/lib\/rails\/test_help_rb.html","","Make double-sure the RAILS_ENV is not set to production, so fixtures aren't loaded into that environment",3],["railtie.rb","files\/railties\/lib\/rails\/test_unit\/railtie_rb.html","files\/railties\/lib\/rails\/test_unit\/railtie_rb.html","","",3],["version.rb","files\/railties\/lib\/rails\/version_rb.html","files\/railties\/lib\/rails\/version_rb.html","","",3]]}}